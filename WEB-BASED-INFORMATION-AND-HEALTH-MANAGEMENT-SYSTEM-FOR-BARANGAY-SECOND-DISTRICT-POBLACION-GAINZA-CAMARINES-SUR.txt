       AMA COMPUTER COLLEGE – NAGA
      ELS BLDG. Panganiban Drive
                              	Naga City, Camarines Sur



WEB-BASED INFORMATION AND HEALTH MANAGEMENT SYSTEM FOR BRGY. SECOND DISTRICT POB. GAINZA, CAMARINES SUR 



       

This Capstone Project Presented to the Faculty of the 
College Computer Studies 
AMA Computer College - Naga 






In Partial Fulfillment of the Requirements of the Degree of
Bachelor of Science in Information Technology (BSIT)







By:
Andrada, Euati Nikolet E.
Eva, Mikael Zedric M.  
Hernandez, Lenard P. 





S.Y 2022-2023
       AMA COMPUTER COLLEGE – NAGA
      ELS BLDG. Panganiban Drive
                              	Naga City, Camarines Sur


APPROVAL SHEET


	This capstone project paper entitled “WEB-BASED INFORMATION AND 
HEALTH MANAGEMENT SYSTEM FOR BRGY. SECOND DISTRICT POB. GAINZA, CAMARINES SUR”, prepared and submitted by Andrada, Euati Nikolet, Eva, Mikael Zedric, Hernandez, Lenard in partial fulfillment of the course requirements for the degree of Bachelor of Science in Information Technology, has been examined and recommended for acceptance and approval for Oral Examination.  

Jethro Stephen A. Agapan
      Adviser


Approved by the Committee of Oral Examination on August 15, 2023 with the grade of PASSED.


				Roland Carlo M. Lipana
					Chairman

Allan Edgar R. Pabellano				         Allan Francis M. Angeles
         Panel Member					        Panel Member




Accepted as partial fulfillment of the course requirements of the degree in Bachelor of Science in Information Technology.


							Jethro Stephen A. Agapan
      Academic Coordinator
								Date: August 15, 2023

ACKNOWLEDGEMENTS

      First and foremost, we thank the Lord Jesus Christ, for giving us the strength, knowledge, patience, and wisdom to explore things, and for giving us the determination to pursue and make this study possible and successful. We would also like to express our deepest gratitude to the following:
      
      To the parents of the proponents, Mr. & Mrs. Andrada, Mr. & Mrs. Eva, and Mr. Mrs. Hernandez,  we are grateful to their continuous moral and financial support.
      To our adviser, Mr. Felix Joshua R. Sabado & Mr. Jethro Stephen A. Agapan for his effort, patience, guidance, and for sharing his knowledge to complete our project.
      To our panelists, Mr. Roland Carlo M. Lipana, Mr. Allan Edgar R. Pabellano and Mr. Allan Francis M. Angeles for expressing interest in our work.
      To our friends, especially to Mr. Jonathan Rantael and Mr. Evelino David Arevalo who teach, help, and share their knowledge in finishing the project.
      We would like to express our gratitude to Brgy. Second District Pob. Gainza, Camarines Sur headed by Brgy. Captain Isagani L. Martinez for their unwavering support, kindness, and assistance with this project. 
      Lastly, to Almighty God, who gave us knowledge, strength, and determination to complete each task to finish the project.
      


ABSTRACT
	The proponents developed a system that will be a beneficial tool for Brgy. Second District Pob. Gainza, Camarines Sur in conducting Brgy. operations. This system describes an efficient and effective method for recording and managing barangay and health information. 
      The employment of computer technologies has greatly benefited various government agencies, particularly barangay units. This system aims to improve information and health-related issues by facilitating the management of Brgy. Second District Pob. Gainza, Camarines Sur. 
      The researchers used RAD (Rapid Application Development), which focuses on acquiring, analyzing, and protecting digital and traditional records, prioritizing citizen feedback to create new transactions and meet the required changes, and ensuring the information remains accurate. The researchers employed quantitative methods such as questionnaires and surveys, and people interviews to collect data for our intended Web-Based Information and Health Management System.
      Overall,  Web-Based Information and Health Management Systems show that the system will be evaluated by respondents to see how well it functions overall. to provide excellent feedback while using the system.






TABLE OF CONTENTS
Title Page 
Approval Sheet 	ii
Acknowledgment 	iii
Abstract	iv 
Table of Contents 	v
List of Tables	vii
List of Figures	ix
List of Appendices	x 
Definition of Terms	xi
CHAPTER I
Project Context	1
Purpose and Description	2
Statement of the Problem	4
       Objectives of the Study	5
      General Objective 	6
      Specific Objective	6
Significance of the Study	6
Scope and Limitation	7
CHAPTER II
Related Literature	9
Foreign Literature	9
Local Literature	12
Related Studies	13
Foreign Studies	13
Local Studies	16
Synthesis	18
Technical Background	19
CHAPTER III
     Methodology, Results and Discussion	22
       Software Design, Products, and/or Processes	22
     System Architecture	25
       Conceptual Design	26
       Cost Benefit Analysis	27
       System Architecture/System Flow DFD	31
       Block Diagrams	33
       Development and Testing	35
       Input and Output Reports and Analysis	36
       Description of the Prototype	40
       Implementation Plan 	40
Data Gathering Procedure	42
         Frequency Scale	42
         Likert Scale	42
         Result of the Survey 	43
        Tabulated Result  of the Preliminary Survey	44     
     Result of the Final Survey	45
     Analysis of the Result Study	47 
     Statistical Analysis	48 
     Result of the Final Survey 	48
     Evaluation of the Study	49
CHAPTER IV
     Summary of Findings, Conclusion and Recommendation 	51
     Recommendation	53
BIBLIOGRAPHY
     References	55
     Appendices	57













LIST OF TABLES
Table 3.1: Hardware Cost								27
Table 3.2: System Cost								28
Table 3.3: Stationaries and Supplies						28
Table 3.4: : Utility Expenses							28
Table 3.5 : Training Cost								29
Table 3.6: Summary Cost								29
Table 3.7: Likert Scale Conversion						43
Table 3.8: Breakdown of respondent according to Gender			44 
Table 3.9: Tabulated Result of the Preliminary Survey				44
Table 3.10: Likert Scale Conversion 						47
Table 3.11:Tabulated Result of the Final Survey				49
Table 3.12: Result of the final Survey from the Likert Scal                            49	






LIST OF FIGURES
Figure 3.1: Rapid Application Development Model (RAD)		 	22
Figure 3.2 System Architecture						 	25
Figure 3.3 Conceptual Design of the Proposed Study				26
Figure 3.4 System Flow of the system						31
Figure 3.5 Entity Relationship Diagram						32
Figure 3.6 USE CASE Diagram							32
Figure 3.7 Block Diagram of the System						33
Figure 3.8 Block Diagram of Admin Side						34
Figure 3.9 Block Diagram of User							34
Figure 3.10 Decomposition Diagram of the System				41
Figure 3.11 Pie Chart of the Preliminary Survey					45












LIST OF APPENDICES
Appendices A. Relevant Source Code	57
Appendices B. Evaluation Tool 	191
Appendices C. Summary of Results	195
Appendices D. Survey Data Summary	197
Appendices E. System Manual 	205
Appendices F. Turnitin Originality Report 	230
Appendices G. Certifications 	232
Appendices H. Curriculum Vitae 							   234










Definition of Terms
Acceptance Testing. Testing procedure performed in the final stage intended to guarantee that the intended functionalities are accomplished. 
Administration. Capability of the system that allows the administrator to set-up or do configuration of the system. 
Administrator. Authorized personnel administering the developed system. 
Alpha Testing. Testing procedure performed by the programmers to ensure correct system functionalities. 
Beta Testing. Testing procedure performed by the actual user of the developed system. 
Bootstrap. Used to allow the interfaces be responsive regardless on what computing device use to access the system. 
Cost Benefit Analysis (CBA). Computational process used by the researcher to weight the benefits of the clients in the utilizations of the system over relevant to the cost of investment. 
Web Browser. Browser for the web. To access or open the developed system, an application was required. 
Data. Facts and data gathered for reference or study. 
Database. An electronic storage system was required to maintain track of the data acquired by the system. 
Dashboard. Displays the created system's home page or primary interface. 
Flowchart. A graphical depiction of the created system's process flow. 
Hardware. The physical components needed to run the designed system. xi 
Likert Scale. The statistical approach used by the researcher to evaluate the performance of the constructed system. 
Login. The process of logging into a developed system. 
Map. A diagram or other visual depiction of the inhabitants' actual location or address. 
MySQL. The database that is used to store the developed system. 
Password. To get access to the system, use a mix of letters, symbols, and numbers. 
PHP. The primary scripting or programming language utilized by the researcher in the system's development. 
Reports. Records or information of the barangay population that can be created by the system. 
Software. Applications used by the developer in the system's development and implementation. 
Statistics. Values displaying the current population counts or statistics for the barangay. 
Username. Personal information or data is required to gain access to the system. 
Print. Allows the user to produce and print barangay clearance, indigency certificate, and residential certificate.







CHAPTER I
Project and Its Background
      This chapter contains and presents the project context, purpose and description, objective of the study, significance of the study, scope and limitation proposed system.
Project Context 
      The Barangay is the Philippines' smallest administrative unit, and it is responsible for providing basic services to its fellow citizens. Among these services are healthcare, public safety, environmental conservation, and disaster preparedness. Barangays must have efficient management structures in place to deliver these services effectively. The Barangay Management System comes into play here.
      The Barangay Management System is an online service that aims to assist barangays in streamlining operations and providing better service to their communities. It is a tool that helps barangay officials manage their resources, track their programs and services, and improve their interactions with their constituents. With the secretary's assistance, this project aims to assess the viability of a health information and management system for the quick collection, storage, and retrieval of citizen data. As a result, the secretary plays an important part when establishing the requirements. The system requirements or system specifications were developed based on the roles and activities provided by barangay officials and citizens. Based on the provided system requirements and specifications it was designed and constructed. This project would help the researchers address the problem of persistent record loss in the mentioned barangay. In the barangay hall, the residents will participate in supplying the researchers with the desired transactions. The researchers want to stop using boxes for recorded files with this study. Software engineering approaches should be used, according to the project's system analysis, to create the appropriate software and hardware needs and specifications.
      Traditionally, the majority of barangays preserve important documents and files for the barangay as well as records of its citizens using manual methods. To request services and barangay certificates, citizens must also go to the barangay hall. This approach is no longer appropriate in the current technological era. Additionally, this approach is ineffective and very prone to human error because of population growth. The mechanism used by the barangay and its residents to operate and perform transactions needs to be improved more than ever.
      
Purpose and Description 
      In our current time, the way we handle information has changed a lot. With the use of Information and Health management systems, managing different kinds of data has become easier, especially having it in places such as Barangay Halls, Health Centers, Schools, etc. whose job is to handle different kinds of information like Birth Certificates, Taxes, Police and Barangay Clearances and so forth. And most of all, almost all of this information is hardcopy, which makes it hard when organizing much of it. With the help of an Information and Health Management System, the work of handling all these different kinds of Information make it easier not just for the workers but for the people as well.
      As time moves on, new information would need to be processed as new people are born and old ones die, as new places are constructed and old ones are demolished, and as workers apply for new jobs whilst resigning from their old ones. And this kind of situation would only continue, as more and more records of information keep appearing. Handling all this information could be very hard, confusing, and time-consuming, especially if handled in old-fashioned way, which was the handling of hard copies. Maintaining not only the hard copies themselves but also the place where they were stored can be a hard work. This is why having a web-based information management system could make the workplace more efficient.
      Many Barangay Halls have started to switch to web-based information management systems, as it is a lot easier to manage the information inside their Barangays. District II, formerly known as Poblacion, is a barangay located in the municipality of Gainza, in the province of Camarines Sur. With its population of 1,237 as determined by the 2020 Census. Now with a population as big as this, so are the files of information being managed. District II also does some blood donations, from their citizens. The blood taken is then donated to their local Hospitals and Health Centers.
      District II has its online platform, which is a website, but it is only for viewing. It only displays a few details about the Barangay itself, such as location and population. With only these features the website itself cannot be used for any other purpose such as online transactions, like requesting online clearances and certificates.
      The proponents proposed a system to help District II with its work. The project is called “Web-based Information and Health Management System for Brgy. Second District Pob. Gainza, Camarines Sur”. It is a web-based system where the citizens of the Barangay could view and request files online, without needing to go directly to the Barangay Hall and view scheduled health checkups for the kids in the Barangay. With features directly tied to managing files within the database, it would make the work easier for the Barangay Officials. By logging in as an admin, the Officials would then be able to monitor everything within the website, from logins to file requests, and even put-up schedules for events. This system will be effective in improving District II’s current workforce.
      
Statement of the Problem 
      The study is entitled “Web-Based Information and Health Management System for Brgy. Second District Pob. Gainza Camarines Sur”. The main purpose of the study is to develop a Barangay Web-Based Information and Health Management System which will help the barangay secretary and health worker in providing annual and monthly updates on barangay population record. The study aims to improve the generation and issuance of barangay clearance, indigency certificates, residency certificates, health records, health appointments, and other barangay and health procedures.
The proponents observed and discovered the things to improve:
1. Does the current information management in District II, Poblacion, Gainza, Camarines Sur, rely on hardcopy records? And does it lead to any inefficiencies when handling various types of data?

2. Do citizens encounter any limitations in accessing and requesting files via physical visits to the Barangay Hall?
3. Does having a comprehensive web-based system that allows citizens to view and request files online, be able to improve the efficiency of information and health management?

Objective of the Study 
      The study's main objective is to help Brgy. Second District Pob. Gainza, Camarines Sur to improve the manual procedures of the transactions in receiving credentials, have an online database where they can store all their information, and acquire health-related information.
      
      
General Objective
      The general objective of the “Web-based Information and Health Management System for Brgy. Second District Pob. Gainza, Camarines Sur” is to develop and implement a web-based system that would help the Barangay Hall, its Officials, and its citizens to make the general procedure of their work easier.
Specific Objectives
      The following specific objectives are formulated to have a goal while conducting the proposed system:
1. To develop a web-based system that will help the Barangay Hall’s management of their information more effectively.
2. To provide an online database that can be manipulated by the admin where he/she can add, update, and delete information.
3. To improve communication between healthcare providers and residents.  

Significance of the Study
      General Public. The technology will make government operations transparent and provide officials with clear responsibilities. The barangay officials could quickly give the public the necessary documents, such as barangay clearance, certificate of indigency, certificate of residency, occupancy permits, and business permits. 
      LGU Management. The created system will aid in the proper and reliable keeping of municipal records. Also, the technology might give municipal transactions proper governance, which might result in more efficient use of government resources.
      Barangay Officials and Staff. The system is intended to process the numerous barangay transactions more quickly and accurately. Hence, staff time might be saved in attending to types of transactions. Also, it would guarantee the early release of different reports so that barangay authorities can use them to make the right decisions.
      Future Researchers. This research can be used as a reference guide for future study authors and programmers that are in the same field such as information technology, computer science, and other relevant fields. Future researchers will be helped in their research and the development of a similar system by their capacity to gain knowledge, enhance, and compare the techniques and methodologies utilized in this study.
      
Scope and Limitation:
      This research study involves the process of the management system for Brgy. Second District Pob. Gainza, Camarines Sur and assist in the management process of the Barangay Hall, such as online requests for Certificates and Clearances, Health Checkup and Event Schedules, and Citizens profiles.
      The proposed system is intended and limited only to the Barangay Officials and Barangay Citizens of Brgy. Second District Pob. Gainza, Camarines Sur.















CHAPTER II
Related Literature
Review of Related Literature and Studies
      The following are reviews of literature related to information and health management system. The related literature includes foreign, and local literature and studies. The following studies that the proponents utilized as guide and reference in developing the system.
Related Literature
      This section provides materials from published articles and journals on particular topics related to the present study.
Foreign Literature
	Based on International Journal of Information Management (2021), smart cities employ information and communication technologies to improve the quality of life for its citizens, the local economy, transport, traffic management, environment, and interaction with the government. Due to the benefits and challenges associated with the implementation of smart cities, its concept has attracted significant attention from researchers within multiple fields, including information systems. This study provides a valuable synthesis of the relevant literature by analyzing and discussing related systems to information systems. Cities play an important role in shaping environmental and socio-economic aspects at a global level. The city infrastructure attracts increasing numbers of people seeking the benefits of urbanization over traditional rural lifestyles within many cultural contexts. As a result, cities are facing numerous challenges as their resources and infrastructure are placed under ever-increasing levels of strain. An emerging trend to manage and minimize the impact of these challenges is the utilization of Information and Communication Technology (ICT) within an accessible integrated infrastructure. This concept is known as smart cities.
	International Journal of Innovation, Creativity, and Change (2020) cited that in the contemporary global world, the growth rate of Information System (IS) usage is high, and it has now become an agent of development for individuals, organizations, and governments at large. It has an impact on all faces of life. The performance of organizations and governments, and their ability to withstand competitive power depends on the extent to which they deploy IS usage. Therefore, the implementation of IS and its success has long been a subject of interest in the IS field. Since the 1980s, IS scholars have been struggling to identify the factors that can lead to IS success, besides researching to build models based on empirical evidence to improve IS and make it more successful.
	According to Haissam Abdul Malak (December 2022), information management systems are the backbone of any organization. They help in managing information, data, and knowledge in a structured way. Business intelligence is a subset of these systems and helps organizations to make better decisions by providing them with insights from their data. An Information management system (IMS) is a computer system (or set of computer programs) used to track and store information. An IMS can be used to track anything from financial data to inventory levels and customer information. Many IMS are designed to work with a specific type of information, such as medical records or product data. They are used to help organizations manage the information lifecycle from creation to disposition. The key features of an information management system are data storage, data retrieval, data security, and integrity, information access, and data processing.
	According to David Weedmark (March 2019), an information management system collects and manages data that is stored in a variety of formats and makes it accessible to the people who need it. Often, a small business needs only to manage office documents and spreadsheets and make them available to employees. Others may need to collect and manage detailed information on customer data. Still, other information management systems make data available to large organizations or even the public at large through a website. Regardless of an organization’s requirements, a good information management system should be able to collect and store and manage data in the formats you require and deliver information as needed on suitable platforms to the people who need it.



Local Literature
      As the Philippines' smallest political unit, barangays are frequently responsible for providing essential health services to their constituents. However, many barangays struggle to effectively manage and deliver these services due to a variety of challenges such as limited resources and a lack of technical expertise. As a result, there is an increasing focus on creating and implementing barangay health management systems (BHMS) as a means of improving healthcare delivery. The barangay is a very essential place where a lot of information is contained, by the people living there, to the environment.
      Several research studies have highlighted the significance of establishing a BHMS. According to Escalada and colleagues (2020), a BHMS can improve the efficiency and effectiveness of health service delivery in barangays. According to the study, implementing a BHMS increased the number of patients served while decreasing patient wait time. With the help of the system, the staff had less time working on the paperwork and so, had more time to assist their patients. Implementing the system has increased the overall efficiency of the entire workplace, not only improving the staff’s work but also improving the comfortability of the patients.
      Gomez and colleagues (2019) investigated the impact of a BHMS on the health outcomes of residents in a Philippine barangay. According to the study, implementing a BHMS resulted in significant improvements in residents' health status, including decreased incidence of communicable diseases. With a system, maintaining all the files required for a patient has become easier. Keeping track of their allergies, past cases of sickness, medications used, and time visited would be no problem at all, making the staff do twice the work with half the effort.
      According to the literature, implementing a BHMS can result in significant improvements in the delivery and management of health services in barangays. The studies emphasize the importance of designing and implementing a BHMS with the unique needs and challenges of each barangay in mind. There are still a lot of barangays that work traditionally, with the use of pen and paper. But using this method in the current age is not efficient enough. That is why with the use of a system, a lot of work could be done compared to manual labor or work done by hand.
      
Related Studies
	This section displays foreign and local studies that will assist and understand the information that is relevant and comparable to the proposed system.
Foreign Studies
      Nugroho Dwi Saputro and colleagues (2022) proposed a system that was of great help to us as their system scopes had similarities with the problems we encountered such as archiving and managing manual files and lack of online facilities. According to their study, with the use of a web-based integrated information management system, the exchange of information between the villagers became smoother. Integrated Service Post (Posyandu) is a community service center whose main activity is serving the health of mothers and babies who play an important role in the general public. The role of Posyandu is a form of community participation that has a very big meaning for maternal and child health in health development with the main targets being infants, toddlers, and pregnant women. One of the efforts to fulfill basic services which include maternal and child health (MCH), immunization, nutrition improvement, and a healthy environment is through the implementation of Posyandu activities.
      According to Herlambang Putra Perdana and colleagues (2021), an Information system is a formal process of compiling and processing information and then distributing it to its users. Their study and proposed study delved into the area of data processing, which according to them, was the processing or manipulation of data into a form of information that is more informative. Rukun Warga or often abbreviated as RW is a state institution consisting of several RT groups in a village/kelurahan and led by an RW head. The formation of RW in the village or kelurahan has certain goals that are very beneficial for the community so it has a role and functions in carrying out government functions at the kelurahan level. One of the tasks and functions of the RW is to help provide population data and permits, assist in the implementation of population data collection, and assist government administration services.
      International Journal of Advances in Social and Economics (2019), Village Original Revenue Management is carried out in the context of village management to increase and inclusion of village income sources. Villages are required to be independent in carrying out their government affairs, especially in managing village finances. The source of village income is derived from the village’s original income is a form of village independence in managing finances. The village government, especially the village head, in building and developing the village must know how to manage and run the government well, especially in revenue management. Whether management is good or not depends on the governance of the village itself, so it is important for the village government to know and understand how to manage the village properly.
      According to Misganu Endriyas and colleagues (2019), the Health management information system (HMIS) is a system whereby health data are recorded, stored, retrieved, and processed to improve decision-making. HMIS data quality should be monitored routinely as the production of high-quality statistics depends on the assessment of data quality and actions taken to improve it. Thus, the study assessed the accuracy of the routine HMIS data. HMIS is one of six core building blocks of the health system and provides data needed for other components (service delivery, health workforce, access to essential medicines, financing, and leadership). Data delivered through HMIS come from service delivery reports and administrative records kept as part of routine transactions at health facilities and management offices. Data must be collected, processed, transformed, communicated, and used, to improve decisions toward improved health outcomes. Data quality should be monitored routinely against data quality parameters quantitatively and/or qualitatively to catch up country’s information revolution agenda.
      
Local Studies
      Antasuda, Van, and colleagues (2020), describe Health Clinics as a network of clinics that provide healthcare services to people in certain areas. It gives affordable, accessible, and quality health care, especially to those indigent individuals and families living in urban and rural areas. Barangay health center was established through the Local Government Code of 1991 upon the devolution of health services to local government units (LGUs). With the devolution, the LGUs has now the responsibility and control of supervising, operating, and maintaining local health facilities and enforcement of ordinances related to public health matters like sanitation, nutrition, and all other related matters. The system they proposed has been initiated to assist the public health nurse in terms of organizing information table sheets in the database, registering and retrieval of patient information, printing doctor’s interventions for the patients, and creating accounts for helpers.
      Cris Norman Olipas and colleagues’ (2023) study aimed to design and develop a web-based Barangay Information and Record Management System. Barangay plays a  significant role in the overall development of a municipality, a province, or a country. Barangay is an administrative unit in the Philippines consisting of 50 – 100 families (Merriam-Webster, n.d). Thus, it is imperative to come up with development projects that would benefit the members of the community. Today’s technological advancement calls for a more innovative and progressive approach to handling different processes and activities at the barangay level. The proponents have designed and developed the system based on user requirements and specifications, observation and interview results among the key barangay officials, and analysis of the manual processes available documents.
      Online Barangay Services Management System (2021) is a software that is applicable for the usage of a barangay. It stores information about each resident to be verified as one who lives in a town. With the help of a system, it will be of great benefit for the barangay to lessen their paperwork, their traditional work will change to a computerized type of work. Online Barangay Services Management System is necessary for a barangay that residents can access online for their queries and barangay updates without a physical barrier. Barangay staff can communicate with the residents through SMS or email and can post announcements through the system. It’s easy to use as it was developed to make the lives of people easier and lessen time constraints. It can be used on mobile phones and is accessible anywhere throughout the time the residents of the barangay are away from their homes they can update from time to time.
      Based on Barangay Health Management System (2020), today different means of record-keeping are used in health care settings. Some places use hand-written records, others have moved to computer-based systems and many use a combination of both. The implementation of the Barangay Health Management System provides a quicker and more systematic way to record the medical information of patients. It also provides reliable and secured personal medical records. Every consultation or any transaction of the patients will be recorded or stored in a database including the monitoring and updating of the patient health records, the number of patients accommodated daily, sickness or complaint reports, and the medicines released. It will simply increase the performance of medical personnel through its automated information system.
      
Synthesis
      The system we are making has similarities with foreign and local studies, such as storing information in databases and processing online requests. Such features were present in the systems that were included in the related foreign and local studies.
      The proposed system will be used by District II Barangay Hall. The related systems from the foreign and local studies will be the references the proponents to develop their proposed system.
      
      
Technical Background
      In this part, the proponents will discuss the procedures, software, and technologies that will be used in the development of the system.
      The current website of District II is only meant for viewing. Their webpage also provides a minimal amount of information regarding their barangay. The information in it are also outdated, dating back to 2020.
      Front End Development refers to the development side where the focus is on the visual interactions between the user and the browser or application. The programming languages that are going to be used for the front end are HTML, CSS, and JavaScript.
* HTML (Hypertext Markup Language) – this will be used for the display of the visual side of the system, mainly its forms and labels, and the content that will be used, such as the images, text, and videos.
* CSS (Cascading Style Sheet) – this will be used for the layout and design of the webpage’s structure. Using CSS, we can give life to a rather bland page by designing it with colors and other effects.
* JavaScript – will be used for the interactions between the user and the system. When buttons are pushed, and links are clicked with JavaScript we can make it happen.
   Back End Development pertains to the server side of the website. Consisting of servers, frameworks, and databases, the back-end development is hidden from the public eye. This is where information is exchanged between the database and the browser. The programming language that will be used for the back end will be PHP.
* PHP – is a scripting language that can be used for bridging the server side to the webpage. By embedding PHP into the HTML code, we can then start to exchange information between the server and the browser.
   Operating System is the environment where the developers can execute programs, and network databases efficiently. Windows 10 will be used as the operating system for this project.
System Specifications:
* Processor: AMD Ryzen 7 5700U with Radeon Graphics
* Processor Speed: 1.80 GHz
* Installed RAM: 8.00 GB (7.43 GB usable)
* System Type: 64-bit operating system, x64-based processor
   A firewall system is a secure host that serves as a barrier between the internal and outside networks, restricting unauthorized users from accessing the network.
   Local Area Network (LAN) allows users to access internal servers, websites, and other LANs on the same wide area network.
The following platforms were chosen by the researchers to program the website:
* Visual Studio Code – an open-source code editor commonly used for correcting and fixing coding problems in web applications. The tools that VS code provides can be used to improve the functionality of any written code. VS code includes several built-in extensions that can sync codes between servers and editors without installing additional files.
* XAMPP – is an application that includes multiple components which are required for local development, including web servers and databases. It assists local hosts in testing their websites before sending them to the main server. XAMPP is a platform that provides an environment for testing and verifying projects based on Apache, Perl, MySQL, and PHP.











Chapter III
Methodology, Results and Discussion
Software Design, Products and/or Processes
       In this study, the proponents used RAD (Rapid Application Development), which focuses on acquiring, analyzing, and protecting digital and traditional records, prioritizing citizen feedback to create new transactions and meet the required changes, and ensuring the information remains accurate. Furthermore, it enables proponents to divide the development process into iterative steps, allowing them to work more efficiently, release the credential with less hassle, and most importantly, provide a credential that meets the needs of the community. Below is an illustration of Rapid Application Development.
      Figure 1.0 RAD (Rapid Application Development)
      
      
      
      


Figure 3.1: Rapid Application Development Model (RAD)

      Rapid Application Development has fixed phases: Business Modelling, Data Modelling, Process Modelling, Application Generation, and Testing & Turnover. A discussion of each step follows.
1. Business Modelling - During this phase, the proponents have prepared a formal letter requesting permission to conduct a study on Brgy. Second District Pob. Gainza, Camarines Sur on February 8, 2023. Afterward, on February 25, 2023, the proponents conducted an initial interview with the barangay captain of the Brgy. Second District Gainza, Camarines Sur. Furthermore, the proponents will continue to communicate with the beneficiary to gather any additional information that may be required in the future.
2. Data Modelling – In this phase, the proponents have begun their analysis toward making the system, based on the information they gathered during the business modeling phase. From the environment (IDE) where coding will take place, types of programming languages to be used, kinds of features to include in the system, to assigning the right person to do the relevant paperworks for the research paper, and the possible duration of the entire project, all these were considered during the analysis phase.
3. Process Modelling – During the design phase, the proponents laid out the general process  of software development; how it will work, what types of information it can access, and how to access it. We also laid out the possible features inside the system, such as registration, login, logout, data viewing, data modification, deletion, and status viewing.
4. Application Generation – This is the phase where everything is put to work. Using several programming languages to build up the system around the process put together during the design phase. The programming languages that the proponents used were listed below:
a. HTML – This was used mainly for the visual side of the system, along with its content like, tables, forms, buttons, images, videos, and texts.
b. CSS – This was utilized for designing the layout of the webpage. Using CSS, we  can use the webpage colors and other effects for the links and buttons.
c. JavaScript – This was employed for the interactions between the user and the system.
d. PHP – This was used as a bridge between the webpage and the server. Embedding some PHP into the HTML file will allow us to send information back and forth between the server and the webpage.
5. Testing & Turnover – This is the phase where the developed system's features, and functionality were tested. The testing phase will continue as long as there are still any major errors. And once the testing phase is done, it will then be given to the beneficiaries.
      
      
System Architecture
      This is the basic structure of the system. It will serve as a blueprint for the system and the development of the project. The illustration below shows the process of development, using the browser first to search and install all the applications to be used, from the IDEs to the extensions of the programming languages to be used for front-end and back-end development.
      
      
      
      
      
      
Figure 3.2 System Architecture




Conceptual Design
      This section represents the concept of the system’s processes, the relationship between the user and the system, and the output of its development. The illustration below shows the possible inputs that the users may want for the design, then the process of developing said system, and finally the implementation or output.
      Figure 3.3 Conceptual Design of the Proposed Study
* Input – This is the part that handles the information to be inputted into the system. This section will handle many different types of information about the Barangay’s Citizens and the system’s users, the server's admin, and the regular users with limited user privileges, mostly only for viewing and inquiry.
* Process – These are the processes that will help in developing the system. Using the RAD Software Development Life Cycle, the proponents have divided the whole process into six  phases, which helped in the work division and time management.
* Output – This is the outcome of the whole project. It is the product of frequent data gathering, and several hours of coding, testing, and debugging. This will be the fully deployed system where the proponents will have achieved their original goal, a fully successful and wholly operating information management system.

Cost Benefit Analysis
      This section estimates the software, hardware, and labor cost required to implement the system. This will also compare the price of implementing such a system and the benefits that will come along with it. It should also demonstrate the values that the system will add to the institution.
      
Recommended
RequirementsSpecifications QuantityUnit PriceCost       ProcessorIntel® Pentium® CPU G322022,931.005,862.00       MotherboardH81M-P33 (MS-7817)22,688.005,376.00       
RAM8GB DDR4
2666MHZ  SODIMM21,300.002,600.00       Hard DriveSeagate 500GB
Silver22,550.005,100.00       Keyboard   Logitech Keyboard K1202334.00668.00       MonitorAcer EB192Q
18.5 LEDMonitor25,050.0010,100.00       MouseA4TECH N- 350-12250.00500.00       PrinterCanon MG2570S12,995.002,995.00       I.  Hardware Cost
      Total: 33,201.00
      Table 3.1: Hardware Cost

II. Operational Cost

A. System Cost
ItemsSpecificationCost       Operating SystemMicrosoft Windows 10 Pro3,899.00       Front EndVisual Studio CodeFree       Back EndCodeIgniterFree       Web HostingHostinger Premium Web Hosting2,028.00       


Total: 5,927.00
Table 3.2: System Cost

B. Stationaries and Supplies
ItemsQuantityPriceTotal       Bond Paper3 Reams234.00702.00       Ink Refill2529.001,058.00       Ballpen322.0066.00       Folder1011.00110.00       Envelope107.0070.00       Total: 2,006.00
Table 3.3: Stationaries and Supplies

C. Utility Expenses
ParticularsCost       Electricity1,508.00       Total: 1,508.00
Table 3.4: Utility Expenses
Computer Usage (Hours/Days): 58.00 / day for 12 Hours in 26 Day
D. Training Cost
PersonnelAmount per
DayDaysHoursTotal       Administrator300.0036900.00       Employee250.0034750.00       Total: 1,650.00
Table 3.5: Training Cost
      (50.00 / hour * 6 Hours) * 3 Days = 900.00
      (62.50 / hour * 4 Hours) * 3 Days = 750.00

III. Summary Cost
          CostsAmount       Hardware Cost33,201.00       System Cost5,927.00       Stationaries and Supplies2,006.00       Utility Expenses1,508.00       Training Cost1,650.00       


Total: 44,292.00
Table 3.6: Summary Cost

      Estimated Benefits:
      Accuracy and efficiency of the software at approximately 
80% Total Estimated Benefits: 44,292.00 * 80%
      Total = 35,433.6
      Payback Period:
Payback Period = (Total Cost/Total Estimated Benefits) *
 Months
      = (44,292.00 / 35,433.6) * 12
Total = 15 Months or 1 Year and 3 Months
      Return on Investment:
Return of Investment = (Total Estimated Benefits/Total Cost) * 
      100
      = (35,433.6 / 44,292.00) * 100
      Total=80%

Requirement Analysis
Operating System is the environment where the developers can execute programs, and network databases efficiently. Windows 10 will be used as the operating system for this project.

System Specifications
* Processor: Intel® Pentium® CPU G3220
* Processor Speed: 3.00 GHz
* Installed RAM: 4.00 GB (3.88 GB usable)
* System Type: 64-bit operating system, x64-based processor





System Architecture/System Flow DFD


Figure 3.4: System Flow of the system

      This figure shows the design of the flow of the system. In this system, several kinds of documents or information about the barangay residents can be inputted, ranging from personal information to current residency, and medical records.
1. The first function is the login procedure of the users into the system.
2. The next feature is the user role, where users of the system are divided into two, the admin side the and user side.
3. Next are the functions that involve data modification, uploading new information, searching the current database, and deleting old or outdated information.

4. It then updates the database with the modifications made in the system, which are then sent to a different section for viewing.
5. Another feature is appointment scheduling for medical patients.
ERD

      Figure 3.5: of Entity Relationship
Diagram
      USECASE Diagram

      Figure 3.6 USE CASE Diagram
Block Diagram
     The illustration below is the block diagram for the system that was proposed. A block diagram is a diagram that uses blocks to represent a system's principal parts or functions.
      Figure 3.7: Block Diagram of the System
      The diagram above shows the three entities which operate the system, Information and Health Management System, which are the Resident, Secretary, and Administrator. First is the Resident, they input their Details (Name, Birthdate, etc.) and Credentials (Birth Certificate, Barangay Clearance, etc.) into the System. Once inputted into the System, all this information can be accessed by the admin, compiling all of these into  a list where the Secretary can update or delete new or old information. The admin then creates a record, to monitor a significant event (criminal cases, achievements, etc.). A secretary can also request some files from the admin so that they can convert said files  into physical ones whenever needed.





Figure 3.8 Block Diagram of Admin Side
      The diagram above shows the process of how the admin side of the system works. The admin can access and manage the accounts of every user, access the information records, and the blocks/activities page, and process queries and transactions.
      

      

      

Figure 3.9: Block Diagram of User Side
      The diagram above shows the process of how the user side of the system works. The user side has limited access compared to the admin side. They can only access their profiles, for their security and privacy. They can also access the blogs/ activities page, and make queries and transactions.


Development and Testing
      The proposed system was developed by the proponents. They utilized RAD software development which allows making changes to the design whenever the need arises. The proposed system was developed with the use of Visual Studio Code. For developing the front end, the proponents will be using HTML, CSS, Bootstrap, JavaScript, and jQuery. For the development of backend part, PHP, CodeIgniter, and MySQL were used. After the development of backend part, the proponents have utilized the services of Hostinger for hosting the web and registering its domain.
      The testing phase was done by the proponents via two phases: Pre-Test and Post Test. The pre-test was done to determine the functionality of the proposed system, where the respondents are the admins and users. It was to check the system for any bugs. The post-test was done to fully developed system through last-minute checkups to make sure that all of the functions and features were working. The proponents also used a survey based on the ISO/IEC 9126 for the validation of the system’s functionality.

Input and Output Reports and Analysis 
InputProcessOutput       Enter Admin Login PageRetrieving PageDisplay Admin Login Page       Module Name: Admin Login Page

InputProcessOutput       
   Click Dashboard
Retrieving PageProfile, Records, Blogs, Feedback, Payment, Queries, Appointment, Upload, Download       Module Name: Admin Dashboard

InputProcessOutput       
Click Admin User Management
Retrieving PageDisplay List of User accounts, add and delete accounts       Module Name: Admin User Account Management

InputProcessOutput       
Click Admin Transaction Management
Retrieving PageDisplay List of Transactions, user id, transaction status, date of transaction       Module Name: Admin Transaction Management


InputProcessOutput        Click Admin Insert, Search, Edit, DeleteRetrieving PageDisplay a List of Records to be managed       Module Name: Admin CRUD

InputProcessOutput       Click Information RecordsRetrieving Page   Display List of Information Records       Module Name: Information Records

InputProcessOutput       Click Admin BlogsRetrieving  PageDisplay Admin Blogs, Add/Remove Blogs       Module Name: Admin Blogs/Activities

InputProcessOutput       Click Admin Profile PageRetrieving PageDisplay Admin Profile Page       Module Name: Admin Profile Page

InputProcessOutput       Click Patient AppointmentRetrieving PageDisplay Appointment Tab, Approval       Module Name: Patient Appointment Approval



InputProcessOutput       Click User Login PageRetrieving PageDisplay User Login Page       Module Name: User Login Page

InputProcessOutput       
   Click DashboardRetrieving PageProfile, Documents, Inquiry, Feedback, Appointment, Payment       Module Name: User Dashboard

InputProcessOutput       Click User Transaction  PageRetrieving PageDisplay Transaction Page, Payment       Module Name: User Transaction Page

InputProcessOutput       Click User RecordsRetrieving PageDisplay User Records       Module Name: User Records

InputProcessOutput       
     Click Patient Appointment SchedulingRetrieving PageDisplay Patient Appointment Page, Schedule       Module Name: Patient Appointment Scheduling

InputProcessOutput       Click User FeedbacksRetrieving PageDisplay Feedback Page, Add/Remove Feedback       Module Name: User Feedback

InputProcessOutput       Click User Profile PageRetrieving PageDisplay User Profile Page       Module Name: User Profile Page

InputProcessOutput       Click Home PageRetrieving PageDisplay Home Page, About, Contacts, Sign Up, and Login       Module Name: Home Page

InputProcessOutput       Click Sign Up or Login TabRetrieving PageDisplay Sign Up and Login Tab       Module Name: Sign Up and Login




      
      

Description of the Prototype
      The users of the proposed system can access the system via mobile phones and desktop computers. An Internet connection is also needed for connectivity. The proposed system has two users, the admins, and the users/residents. The proposed system allows   the users/residents to log in, view the user dashboard, upload and download forms and certificates, schedule medical appointments, and can pay online (cash/other online payment services) or in cash. The admins have access to all the functionalities of the system.
      
Implementation Plan
      After developing the system, the proponents will go through its testing phase. Once  the testing phase is complete, the proposed system will then be integrated into the beneficiary’s software. The proponents will then provide the beneficiaries with an overview of how the system works, its features, its two user roles, and their use, the advantages of said user roles, and the system’s limitations. The proponents will also help, within a certain amount of time, to answer any questions related to the proposed system and to monitor the system itself for any changes that might occur.



Functional Decomposition Diagram

      Figure 3.10: Decomposition Diagram of the System
      	The users of the system are shown in the figure, the Administrator or the admin and the Users or the residents of the barangay. As shown in the figure above, the access level between the two types of users is seen.
      
      
      
      
Data Gathering Procedure
      To gather the data for the research, the researchers used observation and survey questionnaires. 
Frequency Scale
      The system made by the researchers was evaluated using the Frequency Scale Approach. In the survey questionnaire, the respondents were made to pick “Yes” or “No” to indicate if they were satisfied or not with its services and capabilities, such as dependability, portability, security, efficiency, convenience, user-friendliness, usability, accuracy, functionality, and availability.
      The formula used to compute the result is:
      Total Responses
      Rating = ···································· X 100
      Total Respondents

Likert Scale
      The researchers used the Likert Scale in evaluating the proposed system. The Likert Scale was used in measuring the respondent’s agreement and disagreement with choices such as Outstanding (O), Very Satisfactory (VS), Satisfactory (S), Unsatisfactory (U), and Needs Improvement (NI).
      The Likert Scale formula that was used in computing the results:
      
      [(O*5) + (VS*4) + (S*3) + (U*2) + (NI*1)]
      Rating = ------------------------------------------------------
      Total Respondents
      
RateValuesConversion       Strongly Agree54.21 – 5.00       Agree43.41 – 4.20       Neutral32.61 – 3.40       Disagree21.81 – 2.60       Strongly Disagree11.00 – 1.80             Table 3.7: Likert Scale Conversion
      	The table above shows the conversion rates that the researchers used when tabulating the result of the survey.
      
Results of the Survey
      This is where the researcher’s survey is analyzed and where the data from the respondent’s responses are interpreted. Analyzing the details of the survey’s results helps in establishing the project’s feasibility.
      The first part of the survey was done to get input from the respondents based on the challenges that were experienced by the residents in the barangay. The questionnaires that were provided by the researchers were then distributed to the survey’s respondents.
GenderNumber of Respondents       Male53       Female47       Total100       Table 3.8: Breakdown of Respondents according to Gender


Tabulated Result of the Preliminary Survey

No.QuestionsYesNo       1Do you think that the method of paper and pen is efficient when processing information?982       2Does the barangay hall still heavily rely on paper and pen?955       3Do you manually file the folders of information in the barangay hall?973       4Do you have space that is specifically for storing your barangay hall papers and other files?973       5Do you have difficulties identifying and locating the stored files?6238       6Do you experience delays when making reports?6238       7Are the staff in the barangay hall and health center effective in their job?973       8Are the number of individuals requesting medical attention being properly monitored?964       9Does the health center have an accurate list when it comes to medicines and ailments?928       10Is there an information management system in the barangay?3763       Total833167       Table 3.9: Tabulated Result of the Preliminary Survey

      As shown in the table above, the respondents are mostly positive with their responses with some exceptions. Although most of these responses were positive, there is still room for improvement in the barangay hall’s and health center’s services with the aid of the web-based information and health management system.
      
      
      
      
      
Figure 3.11: Pie Chart of the Preliminary Survey
      As shown in the figure above, of the respondents who were part of the preliminary survey, 53% were male and the remaining 47% were female.
      
      
Results of the Final Survey
      The purpose of the final survey was to determine whether the system was functioning properly. The researchers presented the system to a group of respondents and demonstrated how to operate the system’s features. It was then they distributed the questionnaires that were prepared in advance to collect the respondent’s feedback.
      Based on the survey’s results, when it comes to the system’s reliability, it was evaluated as Strongly Agree with a rating of 4.93, which indicated that the system was reliable. The system’s portability was also evaluated as Strongly Agree, with a rating of 4.92, which indicated that the system is portable enough for any web browser.
      The security of the system was evaluated as Strongly Agree with a rating of 4.86, which means that it did its job well in terms of security. The Efficiency of the system had a rating of 4.86, giving it an evaluation of Strongly Agree, which indicates its good performance and lack of delays.
      On the system’s evaluation, it was Strongly Agree, and its convenience was rated with a value of 4.81, meaning that the system’s features were great and that it was convenient for the respondents of the barangay. The system’s user-friendliness had an evaluation rating of 4.89 and Strongly Agree, which meant that the respondents had an easy time understanding and operating the system.
      The functionality of the system was evaluated with an Strongly Agree rating and a value of 4.82, indicating that the features of the system are relevant to the user’s requirements. The system’s accuracy was also Strongly Agree on its evaluation and had a value of 4.79, which meant that it managed to provide results without many problems. Also, the system’s usability was evaluated as being Strongly Agree, with it having a rating of 4.90, which shows its quality of service.
      And finally, the availability of the system also had a rating of 4.90, giving it an evaluation of Strongly Agree, indicating that the users can access it anywhere and anytime with a web browser.
      
Analysis of the Result of the Study
      When analyzing the result of the conducted survey, the researchers used the Likert scale. The Likert scale was the method used by the researchers to compute the survey’s gathered results.
For the study:
Rating =[(O*5)+(VS*4)+(S*3)+(U*2)+(NI*1)]/(Total Number of Respondents)
Where:
      	Rating = Over-all rating of evaluation of the respondents
      	O = Total number of respondents who chose Outstanding
      	VS = Total number of respondents who chose Very Satisfactory
      	S = Total number of respondents who chose Satisfactory
      	U = Total number of respondents who chose Unsatisfactory
      	NI = Total number of respondents who chose Needs Improvement
RateValuesConversion       Strongly Agree54.21 – 5.00       Agree43.41 – 4.20       Neutral 32.61 – 3.40       Disagree21.81 – 2.60       Strongly Disagree 11.00 – 1.80             Table 3.10. Likert Scale Conversion
      The table above shows the conversion of the rate of the system’s rating based on the conducted survey.
      
Statistical Analysis
      The researchers were able to distribute the questionnaire for the final survey to 100 people. With the responses they gathered, the researchers were able to gather enough data for the continuity of the project.
      
Result of the Final Survey
	The table below is the summary of the results of the survey made to determine the rating of the developed system in terms of reliability, security, efficiency, convenience, user-friendliness, functionality, accuracy, usability, and availability.	
Items to be EvaluatedOVSSUNIRatingDescriptive Rating       Reliability: The system can perform its intended purpose.9374.93Outstanding       Portability: The system can be operated under any web browser.9284.92Outstanding       Security: The system provides protection against unauthorized access.86144.86Outstanding       Efficiency: The system can perform its functions without much delay.86144.86Outstanding       Convenience: The system is useful in helping both the barangay hall and health center in doing their day-to-day operations.81194.81Outstanding       User-Friendliness: The system is easy to use and can be understood quickly.89114.89Outstanding       Functionality: The system contains functions that are relevant to the user’s requirements.82184.82Outstanding       Accuracy: The system provides results without any problems.79214.79Outstanding       Usability: The system is easy to use and provides quality service.90104.90Outstanding       Availability: The system is available anytime and anywhere.90104.90Outstanding       Total778132             Table 3.11: Tabulated Result of the Final Survey
      The table above shows that the respondent’s evaluation of the system was Strongly Agree.

Evaluation of the Study
FactorsValueRate       1. Reliability4.93Strongly Agree       2. Portability4.92Strongly Agree       3. Security4.86Strongly Agree        4. Efficiency4.86Strongly Agree        5. Convenience4.81Strongly Agree        6. User-Friendliness4.89Strongly Agree        7. Functionality4.82Strongly Agree        8. Accuracy4.79Strongly Agree        9. Usability4.90Strongly Agree        10. Availability4.90Strongly Agree        Tabulated Result of the Evaluation
Table 3.12: Result of the Final Survey from the Likert Scale
      The table above shows that based on the respondent’s evaluation, the system was rated as Strongly Agree, indicating that the system has performed wonderfully and had done its intended purpose.
      
      
      
      
      
      
      
      
      
      
      
      
      
      
CHAPTER IV
Summary of Findings, Conclusion, and Recommendation 
Summary of Findings
      The capstone research titled "Web-based Information and Health Management System for Brgy. Second District Pob. Gainza, Camarines Sur" is a web-based system that can be accessed through a website by the system's users with mobile or computer devices via an internet connection, for managing the barangay's services and even requesting for barangay clearances and other barangay certifications through the website. This study was conducted at Barangay Second District Pob. Gainza, Camarines Sur. The researcher's main objective for the study was the enhancement of the barangay's current process of management of its records and the generation and issuance of its certificates in terms of reliability, portability, efficiency, convenience, user-friendliness, functionality, accuracy, usability, and availability. The web-based system was created as a means of help and improvement for the barangay's old approach when it comes to their services. 
      When developing the study, the researchers applied the Rapid Application Development model of the system development life cycle as a tool for the study's development, data gathering, analysis, design, testing, implementation, and maintenance. 
      The planning phase of the study was done by the researchers by conducting observational data gathering, interviews with the barangay staff and residents, preliminary and final surveys, and internet research. The researchers found that certain improvements could be made to the barangay's current system of working. The improvements that were identified, were, 1) making a web-based system for their paper and pen method, 2) an online database for their current files, 3) an online request method for the certificates like clearances, indigency, and residency, 4) an online payment method for making transactions easier. 
      The system development tools that were used, included the Gantt Chart, Data Flow Diagram (DFD), Conceptual Designs, System Architectures, Hierarchical Input-Output Process (HIPO), and Cost Benefit Analysis. 
      The system of the project was created using HTML as the body, using it as a means of connection between the users and the system via buttons, scroll bars, clickable links, and interactive pages, MySQL as the database, CSS for the design and visual presentation, and PHP as the scripting language or logics of the system. To ensure that the desired outcome of the system can be executed, it was subjected to numerous tests, including integration testing, system testing, and beta testing. The researchers conducted surveys with 100 respondents, to assess the system's functionalities, effectiveness, and user-friendliness. The researchers made the questionnaires with the thought of using them as a means of evaluating the proposed system. The Likert Scale was then used to analyze the feedback from the respondents. 
      On the software evaluation result, the system was rated as Outstanding by the survey's respondents. This has shown that the system is reliable, portable, secure, efficient, convenient, user-friendly, functional, accurate, usable, and available to any web browser.
      
Conclusion 
      The project system was developed by the researchers using a multitude of programming languages, like PHP for its modules and logic, HTML for the body of the system, CSS for its design, and MySQL for the system's database. The system was able to register the residents into the database, create profiles for the resident, be able to file appointment schedules for the health center and be able to generate and give out barangay certifications. The system was also reliable, portable, secure, efficient, convenient, user-friendly, functional, accurate, usable, and available to any web browser.
      
Recommendation 
      For future researchers who want to develop and improve the system, the following are recommended: 
1. For the dashboard, including consultation or reporting unusual activity in the barangay. 
2. Future researchers may use the system as the foundation for their thesis proposals, which will guide them in developing a more innovative and useful system. 
3. Future researchers should conduct additional research on the system's scalability, develop and integrate advanced data analytics, improve the user interface and experience, evaluate and improve the system's security measures, expand the system's capabilities to integrate with other systems, and assess its impact on the community. These methods will aid in increasing the efficiency and effectiveness of the system in managing data for the Barangay Second District Pob. Gainza, Camarines Sur.













REFERENCES 
      Title:Smart cities: Advances in research—An information ...
by E Ismagilova · 2019 · Cited by 631 — As a result, cities are facing numerous challenges as their resources and infrastructure are placed under ever increasing levels of strain (Breetzke ...
https://www.sciencedirect.com/science/article/abs/pii/S0268401218312738
Cited: August 2019 

      Title:What is Information Management System? Why is it Important?
https://theecmconsultant.com/information-management-system/
Cited: June 2022 

      Title:The Features of an Information Management System
Mar 31, 2019 — Often, a small business needs only to manage office documents and spreadsheets and make them available to employees.
https://smallbusiness.chron.com/features-information-management-system-2114.html
Cited: March 2019 

      Title:www.atlantis-press.com › article › 125968192Information System Management of Posyandu Activities Based on ...
Integrated Service Post (Posyandu) is a community service center whose main activity is serving the health of mothers and babies who play an important role in the general public[1]. The role of Posyandu is a form of community participation that has a very big meaning for maternal and child health in health development with the…. https://www.atlantis-press.com/article/125968192.pdf/
Cited: 2022 

      Title:(A) In the gastroscope disinfection hospital management ...(PDF) Efficacy of computer-based endoscope cleaning and ...
One of the efforts to fulfill basic services which include maternal and child health (MCH), immunization, nutrition improvement and a healthy environment is ...One of the efforts to fulfill basic services which include maternal and child health (MCH), immunization, nutrition improvement and a healthy environment is ...
https://www.researchgate.net/figure/A-In-the-gastroscope-disinfection-hospital-management-information-system-group_fig1_305744267
Cited: October 2021 

      
      
      Title:Information System Data Processing Population Article 03 ...
Rukun Warga or often abbreviated as RW is a state institution consisting of several RT groups in a village/kelurahan and led by a RW head. https://www.bircu-journal.com/index.php/birci/article/download/2470/pdf
Cited: August 2021 

      Title:health management information system data accuracy in ...
by M Endriyas · 2019 · Cited by 60 — The Health Management Information System (HMIS) is a system whereby health data are recorded, stored, retrieved and processed to improve ...
https://bmchealthservres.biomedcentral.com/articles/10.1186/s12913-019-3991-7
Cited: March 2019 

      Title:Hanan Amjad - Software Engineer - The University of ...
HMIS data quality should be monitored routinely as the production of high-quality statistics depends on the assessment of data quality and actions taken to ...
https://pk.linkedin.com/in/hanan-amjad
Cited: October 2022 

      Title:analysis of potential sources of village original income, as ...
by E Trisihsukohandoyo — The source of village income that comes from the village's original income is a form of village independence in managing finances.
https://www.ijbel.com/wp-content/uploads/2020/12/IJBEL23-261.pdf
Cited: December 2022 

      Title:Barangay Health Management System Capstone Project ...
Aug 6, 2020 — The implementation of the Barangay Health Management System provides a quicker and more systematic way to record the medical information of 
https://capstoneguide.com/barangay-health-management-system-capstone-project-document/
Cited: August 2020 

      Title:www.academia.edu › 42224909 › BHCMS_Barangay_HealthBHCMS: Barangay Health Center Management System - Academia.edu Barangay health center was established through the Local Government Code of 1991 upon the devolution of health services to local government units (LGUs). 
https://www.academia.edu/42224909/BHCMS_Barangay_Health_Center_Management_System/
Cited: March 2020
Appendices A
RELEVANT SOURCE CODES
      For Admin Account  (HTML)
      officials.php
      <!DOCTYPE html>
      <html>
      <head>
          <title>Barangay Officials</title>
          <style>
              body {
                  font-family: Arial, sans-serif;
              }
      
              h1 {
                  text-align: center;
              }
      
              table {
                  width: 100%;
                  border-collapse: collapse;
                  margin-bottom: 20px;
              }
              table th, table td {
                  padding: 12px 15px;
                  text-align: left;
                  border-bottom: 1px solid #ddd;
              }
             table th {
                  background-color: #f5f5f5;
                  font-weight: bold;
                  color: #333;
              }
              form {
                  margin-bottom: 20px;
              }
              form label {
                  display: inline-block;
                  width: 120px;
                  font-weight: bold;
                  margin-right: 10px;
              }
              form input[type="text"],
              form input[type="date"] {
                  width: 200px;
                  padding: 8px;
                  border: 1px solid #ccc;
                  border-radius: 4px;
              }
              form input[type="submit"] {
                  padding: 8px 16px;
                  background-color: #4CAF50;
                  color: white;
                  border: none;
                  border-radius: 4px;
                  cursor: pointer;
              }
              .button {
                  display: inline-block;
                  padding: 8px 16px;
                  background-color: #333;
                  color: white;
                  text-decoration: none;
                  border-radius: 4px;
              }
                      .button:hover {
                  background-color: #555;
              }
          </style>
          <link rel="icon" href="https://seconddistrictgainza.com/brgylogo.ico" type="image/x-icon">
      </head>
      <body>
          <h1>Barangay Officials</h1>
          <?php
          require_once $_SERVER['DOCUMENT_ROOT'] . '/classes/DatabaseHandler.php';
          $db = new DatabaseHandler();
          $host = $db->getHost();
          $username = $db->getUsername();
          $password = $db->getPassword();
          $database = $db->getDatabaseName();
      $conn = new mysqli($host, $username, $password, $database);
          if ($conn->connect_error) {
              die("Connection failed: " . $conn->connect_error);
          }
          $sql = "SELECT * FROM barangay_officials";
          $result = $conn->query($sql);
          if ($result->num_rows > 0) {
              echo "<table>";
              echo "<tr><th>Position</th><th>Name</th><th>Contact</th><th>Address</th><th>Start of Term</th><th>End of Term</th></tr>";
              while ($row = $result->fetch_assoc()) {
                  echo "<tr>";
                  echo "<td>" . $row['position'] . "</td>";
                  echo "<td>" . $row['name'] . "</td>";
                  echo "<td>" . $row['contact'] . "</td>";
                  echo "<td>" . $row['address'] . "</td>";
                  echo "<td>" . $row['start_of_term'] . "</td>";
                  echo "<td>" . $row['end_of_term'] . "</td>";
                  echo "</tr>";
              }
              echo "</table>";
          } else {
              echo "No barangay officials found.";
          }
          $conn->close();
          ?>
          <h2>Add New Official</h2>
          <form method="post" action="add_official.php">
              <label for="position">Position:</label>
              <input type="text" id="position" name="position" required><br>
              <label for="name">Name:</label>
              <input type="text" id="name" name="name" required><br>
              <label for="contact">Contact:</label>
              <input type="text" id="contact" name="contact" required><br>
              <label for="address">Address:</label>
              <input type="text" id="address" name="address" required><br>
              <label for="start_of_term">Start of Term:</label>
              <input type="date" id="start_of_term" name="start_of_term" required><br>
              <label for="end_of_term">End of Term:</label>
              <input type="date" id="end_of_term" name="end_of_term" required><br>
      
              <input type="submit" value="Add Official">
              <a href="admin_dashboard.php" class="button">Go Back to Dashboard</a>
          </form>
      </body>
      </html>
      
      announcement.php
      <!DOCTYPE html>
      <html>
      <head>
          <?php require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/partials/logo.php'; ?>
          <title>Announcement</title>
          <style>
              body {
                  font-family: Arial, sans-serif;
                  background-color: #f7f7f7;
                  margin: 0;
                  padding: 20px;
              }
      
              h1 {
                  color: #333;
              }
              h3 {
                  color: #333;
                  margin-top: 20px;
              }
              p {
                  color: #666;
              }
              hr {
                  border: none;
                  border-top: 1px solid #ddd;
                  margin: 20px 0;
              }
              form {
                  margin-top: 20px;
              }
              label {
                  display: block;
                  margin-bottom: 5px;
                  color: #333;
              }
              input[type="text"],
              textarea {
                  width: 100%;
                  padding: 8px;
                  border: 1px solid #ccc;
                  border-radius: 4px;
                  box-sizing: border-box;
                  margin-bottom: 10px;
              }
              textarea {
                  resize: vertical;
              }
              input[type="submit"] {
                  padding: 10px 20px;
                  background-color: #333;
                  color: #fff;
                  border: none;
                  border-radius: 4px;
                  cursor: pointer;
              }
              .button {
                  display: inline-block;
                  margin-right: 10px;
                  padding: 5px 10px;
                  background-color: #333;
                  color: white;
                  text-decoration: none;
                  cursor: pointer;
              }
          </style>
      </head>
      <body>
          <h1>Announcement</h1>
          <?php
          require_once $_SERVER['DOCUMENT_ROOT'] . '/classes/DatabaseHandler.php';
          $db = new DatabaseHandler();
          $host = $db->getHost();
          $username = $db->getUsername();
          $password = $db->getPassword();
          $database = $db->getDatabaseName();
          $conn = new mysqli($host, $username, $password, $database);
          if ($conn->connect_error) {
              die("Connection failed: " . $conn->connect_error);
          }
          $sql = "SELECT * FROM announcements";
          $result = $conn->query($sql);
          if ($result->num_rows > 0) {
              while ($row = $result->fetch_assoc()) {
                  echo "<h3>" . $row['title'] . "</h3>";
                  echo "<p>" . $row['content'] . "</p>";
                  echo "<hr>";
              }
          } else {
              echo "No announcements found.";
          }
      
          $conn->close();
          ?>
          <h2>Add Announcement</h2>
          <form action="add_announcement.php" method="post">
              <label for="title">Title:</label>
              <input type="text" name="title" required>
              <br>
              <label for="content">Content:</label>
              <textarea name="content" rows="5" required></textarea>
              <br>
              <input type="submit" value="Add Announcement">
          </form>
          <a href="admin_dashboard.php" class="button">Go Back to Dashboard</a>
      </body>
      </html>
      
      messages.php
      <?php
      session_start();
      require_once $_SERVER['DOCUMENT_ROOT'] . '/classes/DatabaseHandler.php';
      $db = new DatabaseHandler();
      $host = $db->getHost();
      $username = $db->getUsername();
      $password = $db->getPassword();
      $database = $db->getDatabaseName();
      $conn = new mysqli($host, $username, $password, $database);
      if ($conn->connect_error) {
          die("Connection failed: " . $conn->connect_error);
      }
      $sql = "SELECT users.id, users.username, roles.id AS role_id FROM users INNER JOIN roles ON users.role_id = roles.id";
      $result = $conn->query($sql);
      $options = "";
      if ($result->num_rows > 0) {
          while ($row = $result->fetch_assoc()) {
              $options .= "<option value='" . $row['id'] . "'>Username: " . $row['username'] . ", Role ID: " . $row['role_id'] . "</option>";
          }
      } else {
          $options .= "<option value=''>No users found</option>";
      }
      $conn->close();
      $loggedInUser = [
          'role_id' => [1]
      ];
      $roleID = isset($_SESSION['role_id']) ? $_SESSION['role_id'] : 0;
      
      if ($roleID != $loggedInUser['role_id']) {
          $_SESSION['role_id'] = $loggedInUser['role_id'];
          $roleID = $loggedInUser['role_id'];
      }
      if (isset($loggedInUser['role_id'])) {
          if (in_array(1, $loggedInUser['role_id'])) {
              $dashboardLink = '../admin/admin_dashboard.php';
          } elseif (in_array(2, $loggedInUser['role_id'])) {
              $dashboardLink = '../user/user_dashboard.php';
          } else {
              $dashboardLink = '#';
          }
      } else {
          $dashboardLink = '#';
      }
      if ($_SERVER['REQUEST_METHOD'] === 'POST') {
          header('Location: ' . $dashboardLink);
          exit();
      }
      ?>
      <!DOCTYPE html>
      <html>
      <head>
          <?php require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/partials/logo.php'; ?>
          <title>Messages</title>
          <style>
              body {
                  font-family: Arial, sans-serif;
                  background-color: #f7f7f7;
                  margin: 0;
                  padding: 20px;
              }
              h2 {
                  color: #333;
              }
              form {
                  margin-top: 20px;
              }
              label {
                  display: block;
                  margin-bottom: 5px;
                  color: #333;
              }
              select,
              textarea {
                  width: 100%;
                  padding: 8px;
                  border: 1px solid #ccc;
                  border-radius: 4px;
                  box-sizing: border-box;
                  margin-bottom: 10px;
              }
      
              input[type="submit"] {
                  padding: 10px 20px;
                  background-color: #333;
                  color: #fff;
                  border: none;
                  border-radius: 4px;
                  cursor: pointer;
              }
              .button {
                  display: inline-block;
                  margin-right: 10px;
                  padding: 5px 10px;
                  background-color: #333;
                  color: white;
                  text-decoration: none;
                  cursor: pointer;
              }
          </style>
      </head>
      <body>
          <h2>Send Message</h2>
          <form action="send_message.php" method="post">
              <label for="recipient_id">Recipient:</label>
              <select name="recipient_id" id="recipient_id">
                  <?php echo $options; ?>
              </select>
              <br>
              <label for="message">Message:</label>
              <textarea name="message" id="message" rows="5" required></textarea>
              <br>
              <input type="submit" value="Send"><br>
              <a href="received_messages.php" class="button">Received Messages</a><br>
              <a href="admin_dashboard.php" class="button">Go Back to Dashboard</a>
          </form>
      </body>
      </html>
      
      update_medical_appointments.php
      <!DOCTYPE html>
      <html>
      <head>
          <?php require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/partials/logo.php'; ?>
          <title>Add Medical Appointment</title>
          <style>
              body {
                  font-family: Arial, sans-serif;
                  margin: 0;
                  padding: 20px;
              }
              h1 {
                  color: #333;
                  margin-bottom: 20px;
              }
              form {
                  margin-bottom: 20px;
              }
              label {
                  display: block;
                  font-weight: bold;
                  margin-bottom: 5px;
              }
              input[type="text"],
              input[type="date"],
              input[type="time"],
              textarea {
                  width: 100%;
                  padding: 8px;
                  border: 1px solid #ccc;
                  border-radius: 4px;
                  margin-bottom: 10px;
              }
              input[type="submit"],
              .button {
                  background-color: #4CAF50;
                  color: white;
                  padding: 8px 16px;
                  border: none;
                  border-radius: 4px;
                  cursor: pointer;
              }
              .button {
                  background-color: #4CAF50;
                  color: white;
                  padding: 8px 16px;
                  border: none;
                  border-radius: 4px;
                  cursor: pointer;
              }
              .button:hover {
                  background-color: #555;
              }
              .notification {
                  background-color: #f2f2f2;
                  color: #333;
                  padding: 10px;
                  margin-bottom: 20px;
              }
          </style>
      </head>
      <body>
          <h1>Add Medical Appointment</h1>
          <?php
          require_once $_SERVER['DOCUMENT_ROOT'] . '/classes/DatabaseHandler.php';
          $db = new DatabaseHandler();
          $host = $db->getHost();
          $username = $db->getUsername();
          $password = $db->getPassword();
          $database = $db->getDatabaseName();
          $conn = new mysqli($host, $username, $password, $database);
          if ($conn->connect_error) {
              die("Connection failed: " . $conn->connect_error);
          }
          if ($_SERVER['REQUEST_METHOD'] === 'POST') {
              $residentName = $_POST['resident_name'];
              $appointmentDate = $_POST['appointment_date'];
              $appointmentTime = $_POST['appointment_time'];
              $cause = $_POST['cause'];
              $sql = "INSERT INTO medical_appointments (resident_name, appointment_date, appointment_time, cause) VALUES ('$residentName', '$appointmentDate', '$appointmentTime', '$cause')";
              if ($conn->query($sql) === TRUE) {
                  echo "<div class='notification'>Medical appointment added successfully.</div>";
              } else {
                  echo "<div class='notification'>Error: " . $sql . "<br>" . $conn->error . "</div>";
              }
          }
          if ($_SERVER['REQUEST_METHOD'] === 'POST') {
              if (isset($_POST['approve'])) {
                  $requestId = $_POST['request_id'];
                  $sql = "UPDATE requests SET process='approved' WHERE id='$requestId'";
                  if ($conn->query($sql) === TRUE) {
                      echo "<div class='notification'>Request approved successfully.</div>";
                  } else {
                      echo "<div class='notification'>Error: " . $sql . "<br>" . $conn->error . "</div>";
                  }
              } elseif (isset($_POST['disapprove'])) {
                  $requestId = $_POST['request_id'];
                  $reason = $_POST['reason'];
                  $sql = "UPDATE requests SET process='disapproved', disapproval_reason='$reason' WHERE id='$requestId'";
                  if ($conn->query($sql) === TRUE) {
                      echo "<div class='notification'>Request disapproved successfully.</div>";
                  } else {
                      echo "<div class='notification'>Error: " . $sql . "<br>" . $conn->error . "</div>";
                  }
              }
          }
          ?>
          <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="POST">
              <label for="resident_name">Resident Name:</label>
              <input type="text" name="resident_name" id="resident_name" required><br>
              <label for="appointment_date">Appointment Date:</label>
              <input type="date" name="appointment_date" id="appointment_date" required><br>
              <label for="appointment_time">Appointment Time:</label>
              <input type="time" name="appointment_time" id="appointment_time" required><br>
              <label for="cause">Cause:</label>
              <textarea name="cause" id="cause"></textarea><br>
              <input type="submit" value="Add Medical Appointment"><br>
              <a href="view_requests.php" class="button">View Pending Requests</a>
              <a href="view_medapp_requests.php" class="button">View Approved/Disapproved Requests</a>
              <a href="admin_dashboard.php" class="button">Go Back to Dashboard</a>
          </form>
      </body>
      </html>
      
      
      medical_appointments.php
      <!DOCTYPE html>
      <html>
      <head>
          <?php require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/partials/logo.php'; ?>
          <title>Medical Appointments</title>
          <style>
              body {
                  font-family: Arial, sans-serif;
                  margin: 0;
                  padding: 20px;
              }
              h1 {
                  color: #333;
                  margin-bottom: 20px;
              }
              table {
                  width: 100%;
                  border-collapse: collapse;
                  margin-bottom: 20px;
              }
              th,
              td {
                  padding: 8px;
                  text-align: left;
                  border-bottom: 1px solid #ccc;
              }
              th {
                  font-weight: bold;
              }
              .button {
                  background-color: #4CAF50;
                  color: white;
                  padding: 8px 16px;
                  border: none;
                  border-radius: 4px;
                  cursor: pointer;
                  text-decoration: none;
              }
              .button:hover {
                  background-color: #45a049;
              }
          </style>
      </head>
      <body>
          <h1>Medical Appointments</h1>
          <?php
          require_once $_SERVER['DOCUMENT_ROOT'] . '/classes/DatabaseHandler.php';
          $db = new DatabaseHandler();
          $host = $db->getHost();
          $username = $db->getUsername();
          $password = $db->getPassword();
          $database = $db->getDatabaseName();
          $conn = new mysqli($host, $username, $password, $database);
          if ($conn->connect_error) {
              die("Connection failed: " . $conn->connect_error);
          }
          $sql = "SELECT * FROM medical_appointments";
          $result = $conn->query($sql);
          if ($result->num_rows > 0) {
              echo "<table>";
              echo "<tr><th>ID</th><th>Resident Name</th><th>Date</th><th>Time</th><th>Cause</th></tr>";
              while ($row = $result->fetch_assoc()) {
                  echo "<tr>";
                  echo "<td>" . $row['id'] . "</td>";
                  echo "<td>" . $row['resident_name'] . "</td>";
                  echo "<td>" . $row['appointment_date'] . "</td>";
                  echo "<td>" . $row['appointment_time'] . "</td>";
                  echo "<td>" . $row['cause'] . "</td>";
                  echo "</tr>";
              }
              echo "</table>";
          } else {
              echo "No medical appointments found.";
          }
      
          $conn->close();
          ?>
          <a href="admin_dashboard.php" class="button">Go Back to Dashboard</a>
      </body>
      </html>
      
      add_health_monitoring.php
      <!DOCTYPE html>
      <html>
      <head>
          <?php require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/partials/logo.php'; ?>
          <title>Add Health Monitoring</title>
          <style>
              body {
                  font-family: Arial, sans-serif;
                  background-color: #f1f1f1;
                  margin: 0;
                  padding: 30px;
              }
              h2 {
                  color: #333;
              }
      
              form {
                  margin-bottom: 20px;
              }
              label {
                  display: inline-block;
                  width: 120px;
              }
              input[type="text"] {
                  padding: 8px;
                  border: 1px solid #ddd;
                  border-radius: 4px;
              }
              input[type="submit"],
              .button {
                  background-color: #4CAF50;
                  color: white;
                  padding: 8px 16px;
                  border: none;
                  border-radius: 4px;
                  cursor: pointer;
                  text-decoration: none;
                  margin-top: 10px;
              }
              input[type="submit"]:hover,
              .button:hover {
                  background-color: #45a049;
              }
              .button {
                  margin-left: 10px;
                  margin-top: 20px;
              }
          </style>
      </head>
      <body>
          <?php
          require_once $_SERVER['DOCUMENT_ROOT'] . '/classes/DatabaseHandler.php';
          $db = new DatabaseHandler();
          $host = $db->getHost();
          $username = $db->getUsername();
          $password = $db->getPassword();
          $database = $db->getDatabaseName();
          $conn = new mysqli($host, $username, $password, $database);
          if ($conn->connect_error) {
              die("Connection failed: " . $conn->connect_error);
          }
          if ($_SERVER["REQUEST_METHOD"] == "POST") {
              $resident_name = $_POST["resident_name"];
              $weight = $_POST["weight"];
              $height = $_POST["height"];
              $blood_pressure = $_POST["blood_pressure"];
              $temperature = $_POST["temperature"];
              $sql = "INSERT INTO health_monitoring (resident_name, weight, height, blood_pressure, temperature)
                      VALUES ('$resident_name', '$weight', '$height', '$blood_pressure', '$temperature')";
              if ($conn->query($sql) === TRUE) {
                  echo "Health monitoring record added successfully.";
              } else {
                  echo "Error: " . $sql . "<br>" . $conn->error;
              }
          }
          $conn->close();
          ?>
          <h2>Add Health Monitoring Record</h2>
          <form action="add_health_monitoring.php" method="POST">
              <label for="resident_name">Resident Name:</label>
              <input type="text" name="resident_name" id="resident_name" required><br>
              <label for="weight">Weight:</label>
              <input type="text" name="weight" id="weight" required><br>
              <label for="height">Height:</label>
              <input type="text" name="height" id="height" required><br>
              <label for="blood_pressure">Blood Pressure:</label>
              <input type="text" name="blood_pressure" id="blood_pressure" required><br>
              <label for="temperature">Temperature:</label>
              <input type="text" name="temperature" id="temperature" required><br>
              <input type="submit" value="Add Health Monitoring Record">
              <a href="health_monitoring.php" class="button">Health Monitoring Table</a>
              <a href="admin_dashboard.php" class="button">Go Back to Dashboard</a>
          </form>
      </body>
      </html>
      incidents.php
      <!DOCTYPE html>
      <html>
      <head>
          <?php require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/partials/logo.php'; ?>
          <title>Incident Reporting</title>
          <style>
              body {
                  font-family: Arial, sans-serif;
                  background-color: #f5f5f5;
                  margin: 0;
                  padding: 20px;
              }
              h1 {
                  text-align: center;
                  color: #333;
              }
              form {
                  max-width: 400px;
                  margin: 0 auto;
                  background-color: #fff;
                  padding: 20px;
                  border-radius: 5px;
                  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
              }
              label {
                  display: block;
                  margin-bottom: 5px;
                  font-weight: bold;
                  color: #333;
              }
              input[type="text"],
              input[type="date"],
              input[type="time"],
              textarea {
                  width: 100%;
                  padding: 8px;
                  border: 1px solid #ccc;
                  border-radius: 4px;
                  box-sizing: border-box;
                  margin-bottom: 10px;
                  font-size: 14px;
              }
              textarea {
                  height: 100px;
              }
              input[type="submit"] {
                  background-color: #4caf50;
                  color: #fff;
                  border: none;
                  padding: 10px 16px;
                  font-size: 14px;
                  cursor: pointer;
                  border-radius: 4px;
              }
              input[type="submit"]:hover {
                  background-color: #45a049;
              }
              .button {
                  display: inline-block;
                  background-color: #3498db;
                  color: #fff;
                  border: none;
                  padding: 10px 16px;
                  font-size: 14px;
                  cursor: pointer;
                  text-decoration: none;
                  border-radius: 4px;
                  margin-top: 10px;
              }
              .button:hover {
                  background-color: #2980b9;
              }
          </style>
      </head>
      <body>
          <h1>Incident Reporting</h1>
          <?php
          require_once $_SERVER['DOCUMENT_ROOT'] . '/classes/DatabaseHandler.php';
          $db = new DatabaseHandler();
          $host = $db->getHost();
          $username = $db->getUsername();
          $password = $db->getPassword();
          $database = $db->getDatabaseName();
          $conn = new mysqli($host, $username, $password, $database);
          if ($conn->connect_error) {
              die("Connection failed: " . $conn->connect_error);
          }
          if ($_SERVER['REQUEST_METHOD'] === 'POST') {
              $residentName = $_POST['resident_name'];
              $incidentDate = $_POST['incident_date'];
              $incidentTime = $_POST['incident_time'];
              $category = $_POST['category'];
              $description = $_POST['description'];
              $sql = "INSERT INTO incidents (resident_name, incident_date, incident_time, category, description) VALUES (?, ?, ?, ?, ?)";
              $stmt = $conn->prepare($sql);
              $stmt->bind_param("sssss", $residentName, $incidentDate, $incidentTime, $category, $description);
              if ($stmt->execute()) {
                  echo "Incident reported successfully.";
              } else {
                  echo "Error: " . $stmt->error;
              }
              $stmt->close();
          }
          ?>
          <form action="" method="post">
              <label for="resident_name">Resident Name:</label>
              <input type="text" id="resident_name" name="resident_name" required>
              <br>
              <label for="incident_date">Incident Date:</label>
              <input type="date" id="incident_date" name="incident_date" required>
              <br>
              <label for="incident_time">Incident Time:</label>
              <input type="time" id="incident_time" name="incident_time" required>
              <br>
              <label for="category">Category:</label>
              <input type="text" id="category" name="category" required>
              <br>
              <label for="description">Description:</label>
              <textarea id="description" name="description" required></textarea>
              <br>
              <input type="submit" value="Report Incident">
          </form>
          <a href="admin_dashboard.php" class="button">Go Back to Dashboard</a>
          <a href="incident_submission.php" class="button">Incident Submissions</a>
      </body>
      </html>
      feedback.php
      <!DOCTYPE html>
      <html>
      <head>
          <?php require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/partials/logo.php'; ?>
          <title>Feedback Form</title>
          <style>
              body {
                  font-family: Arial, sans-serif;
                  background-color: #f5f5f5;
                  margin: 0;
                  padding: 20px;
              }
              h1 {
                  text-align: center;
                  color: #333;
              }
              form {
                  max-width: 400px;
                  margin: 0 auto;
                  background-color: #fff;
                  padding: 20px;
                  border-radius: 4px;
                  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
              }
              label {
                  display: block;
                  margin-bottom: 10px;
                  color: #666;
              }
              textarea,
              input[type="number"],
              input[type="text"] {
                  width: 100%;
                  padding: 10px;
                  border: 1px solid #ccc;
                  border-radius: 4px;
                  box-sizing: border-box;
                  font-size: 14px;
                  margin-bottom: 20px;
              }
              input[type="submit"] {
                  display: inline-block;
                  background-color: #3498db;
                  color: #fff;
                  border: none;
                  padding: 10px 16px;
                  font-size: 14px;
                  cursor: pointer;
                  text-decoration: none;
                  border-radius: 4px;
              }
              input[type="submit"]:hover {
                  background-color: #2980b9;
              }
              .button {
                  display: inline-block;
                  background-color: #3498db;
                  color: #fff;
                  border: none;
                  padding: 10px 16px;
                  font-size: 14px;
                  cursor: pointer;
                  text-decoration: none;
                  border-radius: 4px;
                  margin-top: 10px;
              }
              .button:hover {
                  background-color: #2980b9;
              }
              a {
                  color: #3498db;
                  text-decoration: none;
                  margin-left: 10px;
              }
          </style>
      </head>
      <body>
          <h1>Feedback Form</h1>
          <?php
          if ($_SERVER["REQUEST_METHOD"] === "POST") {
              $feedbackText = $_POST['feedbackText'];
              $qualityScore = $_POST['qualityScore'];
              $name = $_POST['name'];
      
              require_once $_SERVER['DOCUMENT_ROOT'] . '/classes/DatabaseHandler.php';
              $db = new DatabaseHandler();
              $host = $db->getHost();
              $username = $db->getUsername();
              $password = $db->getPassword();
              $database = $db->getDatabaseName();
              $conn = new mysqli($host, $username, $password, $database);
              if ($conn->connect_error) {
                  die("Connection failed: " . $conn->connect_error);
              }
              $sql = "INSERT INTO feedback (feedback_text, quality_score, name) VALUES ('$feedbackText', '$qualityScore', '$name')";
              if ($conn->query($sql) === true) {
                  echo "Feedback submitted successfully.";
              } else {
                  echo "Error: " . $sql . "<br>" . $conn->error;
              }
              $conn->close();
          }
          ?>
          <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
              <label for="feedbackText">Feedback:</label>
              <textarea id="feedbackText" name="feedbackText" required></textarea>
              <br>
              <label for="qualityScore">Quality Score:</label>
              <input type="number" id="qualityScore" name="qualityScore" required>
              <br>
              <label for="name">Name:</label>
              <input type="text" id="name" name="name" required>
              <br>
              <input type="submit" value="Submit"><br>
              <a href="view_feedback.php" class="button">View Feedback</a><br>
              <a href="admin_dashboard.php" class="button">Go Back to Dashboard</a>
          </form>
      </body>
      </html>
      
      donor.php
      <!DOCTYPE html>
      <html>
      <head>
          <?php require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/partials/logo.php'; ?>
          <title>Donor Registration Form</title>
          <style>
              body {
                  font-family: Arial, sans-serif;
                  background-color: #f5f5f5;
                  margin: 0;
                  padding: 20px;
              }
              h1 {
                  text-align: center;
                  color: #333;
              }
              label {
                  display: block;
                  margin-bottom: 5px;
                  font-weight: bold;
              }
              input[type="text"],
              input[type="number"],
              select,
              input[type="email"],
              input[type="date"] {
                  width: 100%;
                  padding: 8px;
                  font-size: 14px;
                  border-radius: 4px;
                  border: 1px solid #ccc;
                  margin-bottom: 10px;
              }
              input[type="submit"] {
                  background-color: #3498db;
                  color: #fff;
                  border: none;
                  padding: 10px 16px;
                  font-size: 14px;
                  cursor: pointer;
                  text-decoration: none;
                  border-radius: 4px;
              }
              input[type="submit"]:hover {
                  background-color: #2980b9;
              }
              a {
                  color: #3498db;
                  text-decoration: none;
                  margin-left: 10px;
              }
              .button {
                  display: inline-block;
                  background-color: #3498db;
                  color: #fff;
                  border: none;
                  padding: 10px 16px;
                  font-size: 14px;
                  cursor: pointer;
                  text-decoration: none;
                  border-radius: 4px;
                  margin-top: 10px;
              }
              .button:hover {
                  background-color: #2980b9;
              }
          </style>
      </head>
      <body>
          <h1>Donor Registration Form</h1>
          <?php
          if ($_SERVER["REQUEST_METHOD"] === "POST") {
              $name = $_POST['name'];
              $age = $_POST['age'];
              $gender = $_POST['gender'];
              $bloodType = $_POST['bloodType'];
              $contactNumber = $_POST['contactNumber'];
              $email = $_POST['email'];
              $registrationDate = $_POST['registrationDate'];
              require_once $_SERVER['DOCUMENT_ROOT'] . '/classes/DatabaseHandler.php';
              $db = new DatabaseHandler();
              $host = $db->getHost();
              $username = $db->getUsername();
              $password = $db->getPassword();
              $database = $db->getDatabaseName();
              $conn = new mysqli($host, $username, $password, $database);
              if ($conn->connect_error) {
                  die("Connection failed: " . $conn->connect_error);
              }
              $sql = "INSERT INTO donors (name, age, gender, blood_type, contact_number, email, registration_date) 
                      VALUES ('$name', $age, '$gender', '$bloodType', '$contactNumber', '$email', '$registrationDate')";
              if ($conn->query($sql) === true) {
                  echo "Donor registered successfully.";
              } else {
                  echo "Error: " . $sql . "<br>" . $conn->error;
              }
              $conn->close();
          }
          ?>
          <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
              <label for="name">Name:</label>
              <input type="text" id="name" name="name" required>
              <br>
              <label for="age">Age:</label>
              <input type="number" id="age" name="age" required>
              <br>
              <label for="gender">Gender:</label>
              <select id="gender" name="gender" required>
                  <option value="Male">Male</option>
                  <option value="Female">Female</option>
              </select>
              <br>
              <label for="bloodType">Blood Type:</label>
              <input type="text" id="bloodType" name="bloodType" required>
              <br>
              <label for="contactNumber">Contact Number:</label>
              <input type="text" id="contactNumber" name="contactNumber" required>
              <br>
              <label for="email">Email:</label>
              <input type="email" id="email" name="email" required>
              <br>
              <label for="registrationDate">Registration Date:</label>
              <input type="date" id="registrationDate" name="registrationDate" required>
              <br>
              <input type="submit" value="Register"><br>
              <a href="view_donors.php" class="button">View Donors</a><br>
              <a href="admin_dashboard.php" class="button">Go Back to Dashboard</a>
          </form>
      
      </body>
      </html>
      donor.php
      <?php
      if ($_SERVER['REQUEST_METHOD'] === 'POST') {
          $eventName = $_POST['eventName'];
          $eventDate = $_POST['eventDate'];
          $startTime = $_POST['startTime'];
          $endTime = $_POST['endTime'];
          $location = $_POST['location'];
          require_once $_SERVER['DOCUMENT_ROOT'] . '/classes/DatabaseHandler.php';
          $db = new DatabaseHandler();
          $host = $db->getHost();
          $username = $db->getUsername();
          $password = $db->getPassword();
          $database = $db->getDatabaseName();
          $conn = new mysqli($host, $username, $password, $database);
          if ($conn->connect_error) {
              die("Connection failed: " . $conn->connect_error);
          }
          $sql = "INSERT INTO blood_donation_events (event_name, event_date, start_time, end_time, location)
                  VALUES (?, ?, ?, ?, ?)";
          $stmt = $conn->prepare($sql);
      
          if ($stmt) {
              $stmt->bind_param("sssss", $eventName, $eventDate, $startTime, $endTime, $location);
              $stmt->execute();
              if ($stmt->affected_rows > 0) {
                  echo "Event created successfully!";
              } else {
                  echo "Error: Failed to create event.";
              }
              $stmt->close();
          } else {
              echo "Error: " . $conn->error;
          }
          $conn->close();
      }
      ?>
      <!DOCTYPE html>
      <html>
      <head>
          <?php require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/partials/logo.php'; ?>
          <title>Blood Donation Event Registration</title>
          <style>
              body {
                  font-family: Arial, sans-serif;
                  background-color: #f5f5f5;
                  margin: 0;
                  padding: 20px;
              }
              h2 {
                  text-align: center;
                  color: #333;
              }
              form {
                  width: 400px;
                  margin: 0 auto;
                  background-color: #fff;
                  padding: 20px;
                  border: 1px solid #ccc;
                  border-radius: 4px;
              }
              label {
                  display: block;
                  margin-bottom: 8px;
              }
              input[type="text"],
              input[type="date"],
              input[type="time"] {
                  width: 100%;
                  padding: 8px;
                  border: 1px solid #ccc;
                  border-radius: 4px;
                  box-sizing: border-box;
                  margin-bottom: 10px;
              }
              input[type="submit"],
              .button {
                  display: inline-block;
                  background-color: #3498db;
                  color: #fff;
                  border: none;
                  padding: 10px 16px;
                  font-size: 14px;
                  cursor: pointer;
                  text-decoration: none;
                  border-radius: 4px;
                  margin-top: 10px;
              }
              input[type="submit"]:hover,
              .button:hover {
                  background-color: #2980b9;
              }
          </style>
      </head>
      <body>
          <h2>Blood Donation Event Registration</h2>
      
          <form method="POST" action="<?php echo $_SERVER['PHP_SELF']; ?>">
              <label for="eventName">Event Name:</label>
              <input type="text" id="eventName" name="eventName" required>
              <br>
              <label for="eventDate">Event Date:</label>
              <input type="date" id="eventDate" name="eventDate" required>
              <br>
              <label for="startTime">Start Time:</label>
              <input type="time" id="startTime" name="startTime" required>
              <br>
              <label for="endTime">End Time:</label>
              <input type="time" id="endTime" name="endTime" required>
              <br>
              <label for="location">Location:</label>
              <input type="text" id="location" name="location" required>
              <br>
              <input type="submit" value="Create Event">
              <a href="admin_dashboard.php" class="button">Go Back to Dashboard</a>
              <a href="view_event_submissions.php" class="button">Go To Event Submissions</a>
          </form>
      </body>
      
      </html>
      donations.php
      <?php
      if ($_SERVER['REQUEST_METHOD'] === 'POST') {
          $donorName = $_POST['donorName'];
          $eventName = $_POST['eventName'];
          $donationDate = $_POST['donationDate'];
          require_once $_SERVER['DOCUMENT_ROOT'] . '/classes/DatabaseHandler.php';
          $db = new DatabaseHandler();
          $host = $db->getHost();
          $username = $db->getUsername();
          $password = $db->getPassword();
          $database = $db->getDatabaseName();
          $conn = new mysqli($host, $username, $password, $database);
          if ($conn->connect_error) {
              die("Connection failed: " . $conn->connect_error);
          }
          $sql = "INSERT INTO donations (donor_name, event_name, donation_date)
                  VALUES (?, ?, ?)";
          $stmt = $conn->prepare($sql);
          if ($stmt) {
              $stmt->bind_param("sss", $donorName, $eventName, $donationDate);
              $stmt->execute();
      
              if ($stmt->affected_rows > 0) {
                  echo "Donation recorded successfully!";
              } else {
                  echo "Error: Failed to record donation.";
              }
              $stmt->close();
          } else {
              echo "Error: " . $conn->error;
          }
          $conn->close();
      }
      ?>
      <!DOCTYPE html>
      <html>
      <head>
          <?php require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/partials/logo.php'; ?>
          <title>Donation Record</title>
          <style>
              body {
                  font-family: Arial, sans-serif;
                  background-color: #f5f5f5;
                  margin: 0;
                  padding: 20px;
              }
      
              h2 {
                  text-align: center;
                  color: #333;
              }
              form {
                  width: 400px;
                  margin: 0 auto;
                  background-color: #fff;
                  padding: 20px;
                  border: 1px solid #ccc;
                  border-radius: 4px;
              }
              label {
                  display: block;
                  margin-bottom: 8px;
              }
              input[type="number"],
              input[type="date"] {
                  width: 100%;
                  padding: 8px;
                  border: 1px solid #ccc;
                  border-radius: 4px;
                  box-sizing: border-box;
                  margin-bottom: 10px;
              }
              input[type="submit"],
              .button {
                  display: inline-block;
                  background-color: #3498db;
                  color: #fff;
                  border: none;
                  padding: 10px 16px;
                  font-size: 14px;
                  cursor: pointer;
                  text-decoration: none;
                  border-radius: 4px;
                  margin-top: 10px;
                  margin-right: 10px;
              }
              input[type="submit"]:hover,
              .button:hover {
                  background-color: #2980b9;
              }
              a {
                  color: #3498db;
                  text-decoration: none;
              }
          </style>
      </head>
      
      <body>
          <h2>Donation Record</h2>
          <form method="POST" action="<?php echo $_SERVER['PHP_SELF']; ?>">
              <label for="donorName">Donor Name:</label>
              <input type="text" id="donorName" name="donorName" required>
              <br>
              <label for="eventName">Event Name:</label>
              <input type="text" id="eventName" name="eventName" required>
              <br>
              <label for="donationDate">Donation Date:</label>
              <input type="date" id="donationDate" name="donationDate" required>
              <br>
              <input type="submit" value="Record Donation">
              <a href="view_donations.php" class="button">Donation Submissions</a>
              <a href="admin_dashboard.php" class="button">Go Back to Dashboard</a>
          </form>
      </body>
      </html>
      
      suppliers.php
      <!DOCTYPE html>
      <html>
      
      <head>
          <?php require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/partials/logo.php'; ?>
          <title>Supplier Registration</title>
          <style>
              body {
                  font-family: Arial, sans-serif;
                  background-color: #f5f5f5;
                  margin: 0;
                  padding: 20px;
              }
              h2 {
                  text-align: center;
                  color: #333;
              }
              form {
                  width: 400px;
                  margin: 0 auto;
                  background-color: #fff;
                  padding: 20px;
                  border-radius: 4px;
                  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
              }
              label {
                  display: block;
                  margin-bottom: 8px;
                  font-weight: bold;
                  color: #333;
              }
              input[type="text"],
              input[type="email"] {
                  width: 100%;
                  padding: 10px;
                  font-size: 14px;
                  border: 1px solid #ddd;
                  border-radius: 4px;
                  margin-bottom: 16px;
              }
              input[type="submit"] {
                  background-color: #3498db;
                  color: #fff;
                  border: none;
                  padding: 10px 16px;
                  font-size: 14px;
                  cursor: pointer;
                  text-decoration: none;
                  border-radius: 4px;
              }
              input[type="submit"]:hover {
                  background-color: #2980b9;
              }
              a {
                  display: inline-block;
                  margin-top: 10px;
                  color: #3498db;
                  text-decoration: none;
                  font-size: 14px;
                  margin-right: 10px;
              }
              .button {
                  background-color: #3498db;
                  color: #fff;
                  border: none;
                  padding: 10px 16px;
                  font-size: 14px;
                  cursor: pointer;
                  text-decoration: none;
                  border-radius: 4px;
              }
              .button:hover {
                  background-color: #2980b9;
              }
          </style>
      </head>
      
      <body>
          <?php
          if ($_SERVER['REQUEST_METHOD'] === 'POST') {
              $inputName = $_POST['name'];
              $inputContactNumber = $_POST['contact_number'];
              $inputEmail = $_POST['email'];
              $inputAddress = $_POST['address'];
              require_once $_SERVER['DOCUMENT_ROOT'] . '/classes/DatabaseHandler.php';
              $db = new DatabaseHandler();
              $host = $db->getHost();
              $username = $db->getUsername();
              $password = $db->getPassword();
              $database = $db->getDatabaseName();
              $conn = new mysqli($host, $username, $password, $database);
              if ($conn->connect_error) {
                  die("Connection failed: " . $conn->connect_error);
              }
              $sql = "INSERT INTO suppliers (name, contact_number, email, address) VALUES (?, ?, ?, ?)";
              $stmt = $conn->prepare($sql);
              if ($stmt) {
                  $stmt->bind_param("ssss", $inputName, $inputContactNumber, $inputEmail, $inputAddress);
                  $stmt->execute();
      
                  if ($stmt->affected_rows > 0) {
                      echo "Registration successful!";
                  } else {
                      echo "Error: Failed to insert data.";
                  }
                  $stmt->close();
              } else {
                  echo "Error: " . $conn->error;
              }
              $conn->close();
          }
          ?>
          <h2>Supplier Registration</h2>
          <form method="POST" action="<?php echo $_SERVER['PHP_SELF']; ?>">
              <label for="name">Name:</label>
              <input type="text" id="name" name="name" required>
              <br>
              <label for="contact_number">Contact Number:</label>
              <input type="text" id="contact_number" name="contact_number" required>
              <br>
              <label for="email">Email:</label>
              <input type="email" id="email" name="email" required>
              <br>
              <label for="address">Address:</label>
              <input type="text" id="address" name="address" required>
              <br>
              <input type="submit" value="Register">
              <a href="view_suppliers.php" class="button">Suppliers</a>
              <a href="suppliers_list.php" class="button">Suppliers List</a>
              <a href="admin_dashboard.php" class="button">Go Back to Dashboard</a>
          </form>
      </body>
      </html>
      
      suppliers.php
      <?php
      error_reporting(E_ALL);
      ini_set('display_errors', 1);
      session_start();
      require_once $_SERVER['DOCUMENT_ROOT'] . '/classes/App.php';
      require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/authorization.php';
      authorize_user();
      $user_id = $_SESSION['user_id'];
      require_once $_SERVER['DOCUMENT_ROOT'] . '/classes/DatabaseHandler.php';
      $db = new DatabaseHandler();
      $db->connect();
      $requests = $db->fetchAll("SELECT status FROM tblrequests");
      $db->disconnect();
      $pendings = array_filter($requests, function ($item) {
          return $item['status'] === 'pending';
      });
      $approves = array_filter($requests, function ($item) {
          return $item['status'] === 'approved';
      });
      $disapproves = array_filter($requests, function ($item) {
          return $item['status'] === 'disapproved';
      });
      $balances = array_filter($requests, function ($item) {
          return $item['status'] === 'has_balance';
      });
      ?>
      <!DOCTYPE html>
      <html lang="en">
      <head>
          <meta charset="UTF-8">
          <meta http-equiv="X-UA-Compatible" content="IE=edge">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <link rel="stylesheet" href="<?php echo App::$BASE_URL . '/css/main.css'; ?>">
          <link rel="stylesheet" href="<?php echo App::$BASE_URL . '/css/dashboard.css'; ?>">
          <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" integrity="sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw==" crossorigin="anonymous" referrerpolicy="no-referrer" />
          <?php require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/partials/logo.php'; ?>
          <title>Admin | Resident Requests</title>
      </head>
      <body class="page">
          <div class="layout d-flex">
              <?php require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/partials/admin-sidebar.php'; ?>
              <main class="main">
                  <header class="mt-2 mb-4">
                      <h2 class="title-4">Resident Requests</h2>
                  </header>
                  <section class="d-flex">
                      <a class="btn btn-info mr-2" href="<?php echo App::$BASE_URL . '/pages/admin/resident_requests/pending.php'; ?>">
                          <?php echo count($pendings) . ' Pending Requests'; ?>
                      </a>
                      <a class="btn btn-primary mr-2" href="<?php echo App::$BASE_URL . '/pages/admin/resident_requests/approve.php';?>">
                          <?php echo count($approves) . ' Approved Requests'; ?>
                      </a>
                      <a class="btn btn-danger" href="<?php echo App::$BASE_URL . '/pages/admin/resident_requests/disapprove.php';?>">
                          <?php echo count($disapproves) . ' Disapproved Requests'; ?>
                      </a>
                      <a class="btn btn-danger ml-2" href="<?php echo App::$BASE_URL . '/pages/admin/resident_requests/disapprove.php';?>">
                          <?php echo count($balances) . ' Requests With Balances'; ?>
                      </a>
                  </section>
              </main>
          </div>
          <?php require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/js_scripts.php'; ?>
      </body>
      </html>
      For Resident Account (HTML) 
      pages/login.php
      <?php
      // App class to use static variables. Static variable App::$BASE_URL came from this class;
      require_once $_SERVER['DOCUMENT_ROOT'] . '/classes/App.php';
      require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/authorization.php';
      session_start();
      guard_page();
      ?>
      <!DOCTYPE html>
      <html lang="en">
      <head>
          <meta charset="UTF-8">
          <meta http-equiv="X-UA-Compatible" content="IE=edge">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <link rel="stylesheet" href="<?php echo App::$BASE_URL . '/css/main.css'; ?>">
          <?php require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/partials/logo.php';?>
          <title>Dashboard | Login</title>
      </head>
      <body class="page h-100vh">
          <div class="layout">
              <main class="container d-flex justify-content--center">
                  <section class="card mt-10 w-30">
                      <div class="card-header">
                          <h1>Resident Login</h1>
                      </div>
                      <div class="card-content">
                          <form class="form mt-3 mb-3" action="<?php echo App::$BASE_URL . '/auth/login.php'; ?>" method="post">
                              <div class="form-control">
                                  <label class="form-label w-40 mr-2" for="Username">Username: </label>
                                  <input class="form-input w-100" type="text" name="username" placeholder="Enter username" required>
                              </div>
                              <div class="form-control">
                                  <label class="form-label w-40 mr-2" for="Password">Password: </label>
                                  <input class="form-input w-100" type="password" name="password" placeholder="Enter password" required>
                              </div>
                              <input class="btn btn-primary mt-2" type="submit" name="submit" value="Login">
                          </form>
                      </div>
                  </section>
              </main>
          </div>
      </body>
      </html>
      
      Resident Dashboard
      <?php
      session_start();
      // App class to use static variables. Static variable App::$BASE_URL came from this class;
      require_once $_SERVER['DOCUMENT_ROOT'] . '/classes/App.php';
      require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/authorization.php';
      authorize_user();
      $user_id = $_SESSION['user_id'];
      require_once $_SERVER['DOCUMENT_ROOT'] . '/classes/DatabaseHandler.php';
      $db = new DatabaseHandler();
      $db->connect();
      
      $stmt = $db->prepareStatement("CALL GetResidentUserByUserId(?);"); // Stored Procedure from phpmyadmin, look for Routines tab
      $stmt->bind_param('i', $user_id);
      if (!$stmt->execute()) {
          echo 'error';
          exit;
      }
      $result = $stmt->get_result();
      $user = $result->fetch_assoc();
      $_SESSION['user'] = $user;
      $stmt->close();
      $announcements = $db->fetchAll("SELECT * FROM announcements");
      $db->disconnect();
      ?>
      <!DOCTYPE html>
      <html lang="en">
      <head>
          <meta charset="UTF-8">
          <meta http-equiv="X-UA-Compatible" content="IE=edge">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <link rel="stylesheet" href="<?php echo App::$BASE_URL . '/css/main.css'; ?>">
          <link rel="stylesheet" href="<?php echo App::$BASE_URL . '/css/dashboard.css'; ?>">
          <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" integrity="sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw==" crossorigin="anonymous" referrerpolicy="no-referrer" />
          <?php require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/partials/logo.php'; ?>
          <title>Resident | Dashboard</title>
      </head>
      <body class="page">
          <div class="layout d-flex">
              <?php require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/partials/sidebar.php'; ?>
              <main class="main">
                  <header class="mt-2 mb-4">
                      <h2 class="title-4">Welcome to the Dashboard</h2>
                  </header>
                  <section class="card w-100">
                      <div class="card-header">
                          <h3 class="title-2">Profile</h3>
                      </div>
                      <div class="card-content">
                          <table class="table my-2">
                              <tr>
                                  <th>Username</th>
                                  <td class="col-colon">:</td>
                                  <td><?php echo $user['username']; ?></td>
                              </tr>
                              <tr>
                                  <th>Email</th>
                                  <td class="col-colon">:</td>
                                  <td><?php echo $user['email']; ?></td>
                              </tr>
                          </table>
                          <div class="my-3">
                              <a class="btn btn-info" href="<?php echo App::$BASE_URL . '/pages/user/profile/index.php'; ?>">Profile</a>
                          </div>
                      </div>
                  </section>
                  <section class="card w-100">
                      <div class="card-header">
                          <h3 class="title-2">Announcements</h3>
                      </div>
                      <div class="card-content">
                          <?php if (!empty($announcements)) : ?>
                              <?php foreach ($announcements as $announcement) : ?>
                                  <div class="card w-100 px-2 py-2 my-2">
                                      <h4 class="mb-1"><?php echo $announcement['title']; ?></h4>
                                      <p><?php echo $announcement['content']; ?></p>
                                  </div>
                              <?php endforeach; ?>
                          <?php else : ?>
                              no announcements
                          <?php endif; ?>
                      </div>
                  </section>
              </main>
          </div>
          <?php require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/js_scripts.php'; ?>
      </html>
      
      user_messages.php
      <?php
      session_start();
      require_once $_SERVER['DOCUMENT_ROOT'] . '/classes/DatabaseHandler.php';
      $db = new DatabaseHandler();
      $host = $db->getHost();
      $username = $db->getUsername();
      $password = $db->getPassword();
      $database = $db->getDatabaseName();
      $conn = new mysqli($host, $username, $password, $database);
      if ($conn->connect_error) {
          die("Connection failed: " . $conn->connect_error);
      }
      $sql = "SELECT users.id, users.username, roles.id AS role_id FROM users INNER JOIN roles ON users.role_id = roles.id";
      $result = $conn->query($sql);
      
      $options = "";
      if ($result->num_rows > 0) {
          while ($row = $result->fetch_assoc()) {
              $options .= "<option value='" . $row['id'] . "'>Username: " . $row['username'] . ", Role ID: " . $row['role_id'] . "</option>";
          }
      } else {
          $options .= "<option value=''>No users found</option>";
      }
      $conn->close();
      $loggedInUser = [
          'role_id' => [2]
      ];
      $roleID = isset($_SESSION['role_id']) ? $_SESSION['role_id'] : 0;
      
      if (!in_array($roleID, $loggedInUser['role_id'])) {
          $_SESSION['role_id'] = $loggedInUser['role_id'][0];
          $roleID = $loggedInUser['role_id'][0];
      }
      if (isset($loggedInUser['role_id'])) {
          if (in_array(1, $loggedInUser['role_id'])) {
              $dashboardLink = '../admin/admin_dashboard.php';
          } elseif (in_array(2, $loggedInUser['role_id'])) {
              $dashboardLink = '../user/user_dashboard.php';
          } else {
              $dashboardLink = '#';
          }
      } else {
          $dashboardLink = '#';
      }
      if ($_SERVER['REQUEST_METHOD'] === 'POST') {
          header('Location: ' . $dashboardLink);
          exit();
      }
      ?>
      <!DOCTYPE html>
      <html>
      
      <head>
          <?php require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/partials/logo.php'; ?>
          <title>Messages</title>
          <style>
              body {
                  font-family: Arial, sans-serif;
                  background-color: #f7f7f7;
                  margin: 0;
                  padding: 20px;
              }
              h2 {
                  color: #333;
              }
              form {
                  margin-top: 20px;
              }
              label {
                  display: block;
                  margin-bottom: 5px;
                  color: #333;
              }
              select,
              textarea {
                  width: 100%;
                  padding: 8px;
                  border: 1px solid #ccc;
                  border-radius: 4px;
                  box-sizing: border-box;
                  margin-bottom: 10px;
              }
              input[type="submit"] {
                  padding: 10px 20px;
                  background-color: #333;
                  color: #fff;
                  border: none;
                  border-radius: 4px;
                  cursor: pointer;
              }
              .button {
                  display: inline-block;
                  margin-right: 10px;
                  padding: 5px 10px;
                  background-color: #333;
                  color: white;
                  text-decoration: none;
                  cursor: pointer;
              }
          </style>
      </head>
      <body>
          <h2>Send Message</h2>
          <form action="user_send_messages.php" method="post">
              <label for="recipient_id">Recipient:</label>
              <select name="recipient_id" id="recipient_id">
                  <?php echo $options; ?>
              </select>
              <br>
              <label for="message">Message:</label>
              <textarea name="message" id="message" rows="5" required></textarea>
              <br>
              <input type="submit" value="Send"><br>
              <a href="user_received_messages.php" class="button">Received Messages</a><br>
              <a href="pages/user/dashboard/index.php" class="button">Go Back to Dashboard</a>
          </form>
      </body>
      </html>
      
      user_announcements.php
      <!DOCTYPE html>
      <html>
      <head>
          <?php require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/partials/logo.php'; ?>
          <title>User Announcements</title>
          <style>
              body {
                  font-family: Arial, sans-serif;
                  margin: 0;
                  padding: 0;
              }
              .container {
                  max-width: 600px;
                  margin: 0 auto;
                  padding: 20px;
              }
              h1 {
                  color: #333;
                  margin-bottom: 20px;
              }
              h3 {
                  color: #333;
                  margin-bottom: 10px;
              }
              p {
                  margin-bottom: 10px;
              }
              hr {
                  margin: 20px 0;
                  border: 0;
                  border-top: 1px solid #ddd;
              }
              .button {
                  display: inline-block;
                  margin-right: 10px;
                  padding: 5px 10px;
                  background-color: #333;
                  color: white;
                  text-decoration: none;
                  border-radius: 4px;
              }
              .button:hover {
                  background-color: #555;
              }
          </style>
      </head>
      <body>
          <h1>User Announcements</h1>
          <?php
          require_once $_SERVER['DOCUMENT_ROOT'] . '/classes/DatabaseHandler.php';
          $db = new DatabaseHandler();
          $host = $db->getHost();
          $username = $db->getUsername();
          $password = $db->getPassword();
          $database = $db->getDatabaseName();
          $conn = new mysqli($host, $username, $password, $database);
          if ($conn->connect_error) {
              die("Connection failed: " . $conn->connect_error);
          }
          $sql = "SELECT * FROM announcements";
          $result = $conn->query($sql);
          if ($result->num_rows > 0) {
              while ($row = $result->fetch_assoc()) {
                  echo "<h3>" . $row['title'] . "</h3>";
                  echo "<p>" . $row['content'] . "</p>";
                  echo "<hr>";
              }
          } else {
              echo "No announcements found.";
          }
          $conn->close();
          ?>
          <a href="pages/user/dashboard/index.php" class="button">Back to Dashboard</a>
      </body>
      </html>
      
      user_announcements.php
      <!DOCTYPE html>
      <html>
      <head>
          <?php require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/partials/logo.php'; ?>
          <title>View Documents</title>
          <style>
              body {
                  font-family: Arial, sans-serif;
                  background-color: #f5f5f5;
                  margin: 0;
                  padding: 20px;
              }
      
              h2 {
                  text-align: center;
                  color: #333;
                  margin-bottom: 20px;
              }
              table {
                  width: 100%;
                  border-collapse: collapse;
              }
              th,
              td {
                  padding: 10px;
                  text-align: left;
              }
              th {
                  background-color: #333;
                  color: #fff;
              }
              tr:nth-child(even) {
                  background-color: #f2f2f2;
              }
              a {
                  display: inline-block;
                  background-color: #3498db;
                  color: #fff;
                  padding: 5px 10px;
                  text-decoration: none;
                  border-radius: 4px;
              }
              a:hover {
                  background-color: #2980b9;
              }
              .button {
                  display: inline-block;
                  margin-top: 10px;
                  background-color: #333;
                  color: #fff;
                  padding: 10px 16px;
                  text-decoration: none;
                  border-radius: 4px;
              }
              .button:hover {
                  background-color: #000;
              }
          </style>
      </head>
      <body>
         <?php
          require_once $_SERVER['DOCUMENT_ROOT'] . '/classes/DatabaseHandler.php';
          $db = new DatabaseHandler();
          $host = $db->getHost();
          $username = $db->getUsername();
          $password = $db->getPassword();
          $database = $db->getDatabaseName();
          $conn = new mysqli($host, $username, $password, $database);
          if ($conn->connect_error) {
              die("Connection failed: " . $conn->connect_error);
          }
          $sql = "SELECT * FROM documents ORDER BY id DESC";
          $result = $conn->query($sql);
          $documents = [];
          if ($result !== false && $result->num_rows > 0) {
              while ($row = $result->fetch_assoc()) {
                  $documents[] = $row;
              }
          }
          if (count($documents) > 0) {
              echo "<h2>Documents</h2>";
              echo "<table>";
              echo "<tr><th>Document Name</th><th>File</th></tr>";
              foreach ($documents as $document) {
                  echo "<tr>";
                  echo "<td>" . $document['document_name'] . "</td>";
                  echo "<td><a href='" . $document['document_file'] . "' target='_blank'>View</a></td>";
                  echo "</tr>";
              }
              echo "</table>";
          } else {
              echo "<p>No documents found.</p>";
          }
          $conn->close();
          ?>
          <a href="pages/user/dashboard/index.php" class="button">Go Back to Dashboard</a>
      </body>
      </html>
      
      pages/user/requirements/index.php
      <?php
      require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/functions.php';
      require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/authorization.php';
      require_once $_SERVER['DOCUMENT_ROOT'] . '/classes/App.php';
      require_once $_SERVER['DOCUMENT_ROOT'] . '/classes/DatabaseHandler.php';
      session_start();
      authorize_user();
      $db = new DatabaseHandler();
      $db->connect();
      $user = $_SESSION['user'];
      $requirements = $db->fetchAll("SELECT * FROM tblresident_requirements WHERE is_deleted = 0 AND resident_id = " . $user["resident_id"] );
      ?>
      <!DOCTYPE html>
      <html lang="en">
      <head>
          <meta charset="UTF-8">
          <meta http-equiv="X-UA-Compatible" content="IE=edge">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <link rel="stylesheet" href="<?php echo App::$BASE_URL . '/css/main.css'; ?>">
          <link rel="stylesheet" href="<?php echo App::$BASE_URL . '/css/dashboard.css'; ?>">
          <link rel="stylesheet" href="<?php echo App::$BASE_URL . '/css/user_requirements.css'; ?>">
          <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" integrity="sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw==" crossorigin="anonymous" referrerpolicy="no-referrer" />
          <?php require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/partials/logo.php'; ?>
          <title>Resident | My Requirements</title>
      </head>
      <body class="page">
          <div class="layout d-flex">
              <?php require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/partials/sidebar.php'; ?>
              <main class="main">
                  <header class="mt-2 mb-4">
                      <h2 class="title-4">My Requirements</h2>
                  </header>
                  <section class="card w-100">
                      <div class="card-header">
                          <h3>Document Files</h3>
                      </div>
                      <div class="card-content">
                          <div class="mt-2 mb-3">
                              <form class="form" action="<?php echo App::$BASE_URL . '/actions/user/requirements/index.php' ?>" method="post" enctype="multipart/form-data">
                                  <div class="form-control">
                                      <label class="form-label mr-2" for="Name">Name: </label>
                                      <input class="form-input mr-2" type="text" name="filename" placeholder="Enter file name...">
                                      <input type="file" name="file">
                                  </div>
                                  <div>
                                      <input class="btn btn-primary" type="submit" value="Upload File">
                                  </div>
                              </form>
                          </div>
                          <?php if (empty($requirements)) : ?>
                              no files
                          <?php else : ?>
                              <table class="table my-2">
                                  <thead>
                                      <th>Name</th>
                                      <th>Date Added</th>
                                      <th>Info</th>
                                  </thead>
                                  <tbody>
                                      <?php foreach ($requirements as $requirement) : ?>
                                          <tr>
                                              <td><?php echo $requirement['name']; ?></td>
                                              <td><?php echo parseTimestamp($requirement['created_at']); ?></td>
                                              <td>
                                                  <a class="btn btn-info" href="<?php echo App::$BASE_URL . '/actions/download.php?file=' . $requirement['src']; ?>">Download</a>
                                                  <button class="rqmts-modal-open btn btn-danger" data-src-id="<?php echo $requirement['id']; ?>">Delete</button>
                                              </td>
                                          </tr>
                                      <?php endforeach; ?>
                                  </tbody>
                              </table>
                          <?php endif; ?>
                      </div>
                  </section>
              </main>
          </div>
          <div class="rqmts-modal">
              <div class="rqmts-modal-overlay"></div>
              <div class="rqmts-modal-content card w-40">
                  <div class="card-header-danger">
                      <h4>Warning</h4>
                  </div>
                  <div class="card-content">
                      <div class="my-2">
                          Are you sure you want to delete this?
                      </div>
                  </div>
                  <div class="card-footer d-flex justify-content-end align-items-center">
                      <button class="btn rqmts-modal-cancel mr-1">Cancel</button>
                      <a class="rqmts-modal-remove btn btn-danger" href="<?php echo App::$BASE_URL . '/actions/user/requirements/delete.php?id='; ?>">Delete</a>
                  </div>
              </div>
          </div>
          <?php require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/js_scripts.php'; ?>
          <?php require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/partials/requirements-modal.php'; ?>
      </body>
      
      </html>
      
      Request Documents 
      pages/user/clearances/index.php
      <?php
      require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/functions.php';
      require_once $_SERVER['DOCUMENT_ROOT'] . '/classes/App.php';
      require_once $_SERVER['DOCUMENT_ROOT'] . '/classes/DatabaseHandler.php';
      session_start();
      require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/authorization.php';
      authorize_user();
      $resident_id = $_SESSION['user']['resident_id'];
      $db = new DatabaseHandler();
      $db->connect();
      $stmt = $db->prepareStatement("CALL GetAllBarangayClearanceRequestsByResidentId(?)");
      $stmt->bind_param("i", $resident_id);
      if (!$stmt->execute()) {
          echo 'error';
          exit;
      }
      $result = $stmt->get_result();
      $pendingRequests = [];
      $approvedRequests = [];
      $dispprovedRequests = [];
      $balancesRequests = [];
      while ($row = $result->fetch_assoc()) {
          if ($row['status'] === 'pending') {
              $pendingRequests[] = $row;
          }
          if ($row['status'] === 'approved') {
              $approvedRequests[] = $row;
          }
          if ($row['status'] === 'disapproved') {
                      $disapprovedRequests[] = $row;
          }
          if ($row['status'] === 'has_balance') {
              $balancesRequests[] = $row;
          }
      }
      $stmt->close();
      $db->disconnect();
      ?>
      <!DOCTYPE html>
      <html lang="en">
      <head>
          <meta charset="UTF-8">
          <meta http-equiv="X-UA-Compatible" content="IE=edge">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <link rel="stylesheet" href="<?php echo App::$BASE_URL . '/css/main.css'; ?>">
          <link rel="stylesheet" href="<?php echo App::$BASE_URL . '/css/dashboard.css'; ?>">
          <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" integrity="sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw==" crossorigin="anonymous" referrerpolicy="no-referrer" />
          <?php require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/partials/logo.php'; ?>
          <title>User | Barangay Clearance</title>
      </head>
      <body class="page">
          <div class="layout d-flex">
              <?php require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/partials/sidebar.php'; ?>
              <main class="main">
                  <header class="mt-2 mb-4">
                      <h2 class="title-4">Barangay Clearance</h2>
                  </header>
                  <section class="my-3">
                      <a class="btn btn-primary" href="<?php echo App::$BASE_URL . '/pages/user/clearances/create.php'; ?>">Request Barangay Clearance</a>
                  </section>
                  <section class="card w-100">
                      <div class="card-header">
                          <h3>Pending</h3>
                      </div>
                      <div class="card-content">
                          <?php if (!empty($pendingRequests)) : ?>
                              <table class="table">
                                  <thead>
                                      <th>Purpose</th>
                                      <th>Date Requested</th>
                                  </thead>
                                  <tbody>
                                      <?php foreach ($pendingRequests as $pendingRequest) : ?>
                                          <tr>
                                              <td><?php echo $pendingRequest['purpose']; ?></td>
                                              <td><?php echo $pendingRequest['created_at']; ?></td>
                                          </tr>
                                      <?php endforeach; ?>
                                  </tbody>
                              </table>
                          <?php else : ?>
                              no pending request
                          <?php endif; ?>
                      </div>
                  </section>
                  <section class="card w-100">
                      <div class="card-header">
                          <h3>Approved (Ready to pick up)</h3>
                      </div>
                      <div class="card-content">
                          <?php if (!empty($approvedRequests)) : ?>
                              <table class="table">
                                  <thead>
                                      <th>Purpose</th>
                                      <th>Date Requested</th>
                                      <th>Date Approved</th>
                                      <th>View</th>
                                  </thead>
                                  <tbody>
                                      <?php foreach ($approvedRequests as $approvedRequest) : ?>
                                          <tr>
                                              <td><?php echo $approvedRequest['purpose']; ?></td>
                                              <td><?php echo $approvedRequest['created_at']; ?></td>
                                              <td><?php echo $approvedRequest['updated_at']; ?></td>
                                              <td>
                                                  <a class="btn btn-info" href="<?php echo App::$BASE_URL . '/actions/download.php?file=' . $approvedRequest['document_src']; ?>">Download</a>
                                              </td>
                                          </tr>
                                      <?php endforeach; ?>
                                  </tbody>
                              </table>
                          <?php else : ?>
                              no approved request
                          <?php endif; ?>
                      </div>
                  </section>
                  <section class="card w-100">
                      <div class="card-header">
                          <h3>Disapproved</h3>
                      </div>
                      <div class="card-content">
                          <div class="my-3">
                              <a class="btn btn-info" href="#">Go to My Requirements</a>
                          </div>
                          <?php if (!empty($disapprovedRequests)) : ?>
                              <table class="table">
                                  <thead>
                                      <th>Purpose</th>
                                      <th>Date Requested</th>
                                      <th>Date Disapproved</th>
                                      <th>Reason</th>
                                      <th></th>
                                  </thead>
                                  <tbody>
                                      <?php foreach ($disapprovedRequests as $disapprovedRequest) : ?>
                                          <tr>
                                              <td><?php echo $disapprovedRequest['purpose']; ?></td>
                                              <td><?php echo $disapprovedRequest['created_at']; ?></td>
                                              <td><?php echo $disapprovedRequest['updated_at']; ?></td>
                                              <td>
                                                  <?php echo $disapprovedRequest['reason']; ?>
                                              </td>
                                              <td></td>
                                          </tr>
                                      <?php endforeach; ?>
                                  </tbody>
                              </table>
                          <?php else : ?>
                              no disapproved request
                          <?php endif; ?>
                      </div>
                  </section>
                  <section class="card w-100">
                      <div class="card-header">
                          <h3>Balances</h3>
                      </div>
                      <div class="card-content">
                          <?php if (!empty($disapprovedRequests)) : ?>
                              <table class="table">
                                  <thead>
                                      <th>Purpose</th>
                                      <th>Date Requested</th>
                                      <th>Date Changed</th>
                                      <th>Balance</th>
                                      <th></th>
                                  </thead>
                                  <tbody>
                                      <?php foreach ($disapprovedRequests as $disapprovedRequest) : ?>
                                          <tr>
                                              <td><?php echo $disapprovedRequest['purpose']; ?></td>
                                              <td><?php echo $disapprovedRequest['created_at']; ?></td>
                                              <td><?php echo $disapprovedRequest['updated_at']; ?></td>
                                              <td>
                                                  <?php echo $disapprovedRequest['balance']; ?>
                                              </td>
                                              <td></td>
                                          </tr>
                                      <?php endforeach; ?>
                                  </tbody>
                              </table>
                          <?php else : ?>
                              no balance request
                          <?php endif; ?>
                      </div>
                  </section>
              </main>
          </div>
          <?php require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/js_scripts.php'; ?>
      </body>
      </html>
      <?php
      require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/functions.php';
      require_once $_SERVER['DOCUMENT_ROOT'] . '/classes/App.php';
      require_once $_SERVER['DOCUMENT_ROOT'] . '/classes/DatabaseHandler.php';
      session_start();
      require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/authorization.php';
      authorize_user();
      $user_id = $_SESSION['user_id'];
      $db = new DatabaseHandler();
      $db->connect();
      
      // service amount
      $stmt = $db->prepareStatement("SELECT amount FROM tblservices WHERE id = ? LIMIT 1;");
      $stmt->bind_param('i', App::$BARANGAY_CLEARANCE);
      if (!$stmt->execute()) {
          echo 'error';
          exit;
      }
      $result = $stmt->get_result();
      $stmt->close();
      $service = $result->fetch_assoc();
      // gcash number
      $stmt = $db->prepareStatement("SELECT gcash_number FROM tblbarangay_info LIMIT 1;");
      
      if (!$stmt->execute()) {
          echo 'error';
          exit;
      }
      $result = $stmt->get_result();
      $stmt->close();
      $brgy_info = $result->fetch_assoc();
      ?>
      <!DOCTYPE html>
      <html lang="en">
      <head>
          <meta charset="UTF-8">
          <meta http-equiv="X-UA-Compatible" content="IE=edge">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <link rel="stylesheet" href="<?php echo App::$BASE_URL . '/css/main.css'; ?>">
          <link rel="stylesheet" href="<?php echo App::$BASE_URL . '/css/dashboard.css'; ?>">
          <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" integrity="sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw==" crossorigin="anonymous" referrerpolicy="no-referrer" />
          <?php require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/partials/logo.php'; ?>
          <title>User | Barangay Clearance</title>
      </head>
      <body class="page">
          <div class="layout d-flex">
              <?php require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/partials/sidebar.php';?>
              <main class="main">
                  <header class="mt-2 mb-4">
                      <h2 class="title-4">Request Barangay Clearance</h2>
                  </header>
                  <section class="card w-60">
                      <div class="card-header">
                          <h3>Request Form</h3>
                      </div>
                      <div class="card-content">
                          <form class="form mt-4" action="<?php echo App::$BASE_URL . '/actions/user/clearances/create.php';?>" method="post">
                              <div class="form-control">
                                  <label class="form-label w-20 mr-2" for="Purpose">Purpose: </label>
                                  <input class="form-input w-80" type="text" name="purpose" placeholder="Enter your purpose..." required>
                              </div>
                              <h3 class="my-2">Payment (GCash Only)</h3>
                              <span class="mb-2">Amount: <?php echo  $service['amount'] . " pesos"; ?></span>
                              <span class="mb-2">Recipient No: <?php echo  $brgy_info['gcash_number']; ?></span>
                              <div class="form-control">
                                  <label class="form-label w-20 mr-2" for="Reference Number">Ref No: </label>
                                  <input class="form-input w-80" type="text" name="ref_no" placeholder="Enter ref no..." required>
                              </div>
                              <div class="d-flex justify-content-end mb-3">
                                  <input class="btn btn-primary" type="submit" name="submit" value="Submit">
                              </div>
                          </form>
                      </div>
                  </section>
              </main>
          </div>
          <?php require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/js_scripts.php'; ?>
      </body>
      </html>
      
      Indigencies 
      pages/user/indigencies/index.php
      <?php
      require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/functions.php';
      require_once $_SERVER['DOCUMENT_ROOT'] . '/classes/App.php';
      require_once $_SERVER['DOCUMENT_ROOT'] . '/classes/DatabaseHandler.php';
      session_start();
      require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/authorization.php';
      authorize_user();
      $resident_id = $_SESSION['user']['resident_id'];
      $db = new DatabaseHandler();
      $db->connect();
      $stmt = $db->prepareStatement("CALL GetAllIndigenciesRequestsByResidentId(?)");
      $stmt->bind_param("i", $resident_id);
      if (!$stmt->execute()) {
          echo 'error';
          exit;
      }
      $result = $stmt->get_result();
      $pendingRequests = [];
      $approvedRequests = [];
      $dispprovedRequests = [];
      $balancesRequests = [];
      while ($row = $result->fetch_assoc()) {
          if ($row['status'] === 'pending') {
              $pendingRequests[] = $row;
          }
          if ($row['status'] === 'approved') {
              $approvedRequests[] = $row;
          }
          if ($row['status'] === 'disapproved') {
              $disapprovedRequests[] = $row;
          }
          if ($row['status'] === 'has_balance') {
              $balancesRequests[] = $row;
          }
      }
      $stmt->close();
      $db->disconnect();
      ?>
      <!DOCTYPE html>
      <html lang="en">
      <head>
          <meta charset="UTF-8">
          <meta http-equiv="X-UA-Compatible" content="IE=edge">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <link rel="stylesheet" href="<?php echo App::$BASE_URL . '/css/main.css'; ?>">
          <link rel="stylesheet" href="<?php echo App::$BASE_URL . '/css/dashboard.css'; ?>">
          <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" integrity="sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw==" crossorigin="anonymous" referrerpolicy="no-referrer" />
          <?php require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/partials/logo.php'; ?>
          <title>Resident | Certificate of Indigency</title>
      </head>
      <body class="page">
          <div class="layout d-flex">
              <?php require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/partials/sidebar.php'; ?>
              <main class="main">
                  <header class="mt-2 mb-4">
                      <h2 class="title-4">Certificate of Indigency</h2>
                  </header>
                  <section class="my-3">
                      <a class="btn btn-primary" href="<?php echo App::$BASE_URL . '/pages/user/indigencies/create.php'; ?>">Request Certificate of Indigency</a>
                  </section>
                  <section class="card w-100">
                      <div class="card-header">
                          <h3>Pending</h3>
                      </div>
                      <div class="card-content">
                          <?php if (!empty($pendingRequests)) : ?>
                              <table class="table">
                                  <thead>
                                      <th>Purpose</th>
                                      <th>Date Requested</th>
                                  </thead>
                                  <tbody>
                                      <?php foreach ($pendingRequests as $pendingRequest) : ?>
                                          <tr>
                                              <td><?php echo $pendingRequest['purpose']; ?></td>
                                              <td><?php echo $pendingRequest['created_at']; ?></td>
                                          </tr>
                                      <?php endforeach; ?>
                                  </tbody>
                              </table>
                          <?php else : ?>
                              no pending request
                          <?php endif; ?>
                      </div>
                  </section>
                  <section class="card w-100">
                      <div class="card-header">
                          <h3>Approved (Ready to pick up)</h3>
                      </div>
                      <div class="card-content">
                          <?php if (!empty($approvedRequests)) : ?>
                              <table class="table">
                                  <thead>
                                      <th>Purpose</th>
                                      <th>Date Requested</th>
                                      <th>Date Approved</th>
                                      <th>View</th>
                                  </thead>
                                  <tbody>
                                      <?php foreach ($approvedRequests as $approvedRequest) : ?>
                                          <tr>
                                              <td><?php echo $approvedRequest['purpose']; ?></td>
                                              <td><?php echo $approvedRequest['created_at']; ?></td>
                                              <td><?php echo $approvedRequest['updated_at']; ?></td>
                                              <td>
                                                  <a class="btn btn-info" href="<?php echo App::$BASE_URL . '/actions/download.php?file=' . $approvedRequest['document_src']; ?>">Download</a>
                                              </td>
                                          </tr>
                                      <?php endforeach; ?>
                                  </tbody>
                              </table>
                          <?php else : ?>
                              no approved request
                          <?php endif; ?>
                      </div>
                  </section>
                  <section class="card w-100">
                      <div class="card-header">
                          <h3>Disapproved</h3>
                      </div>
                      <div class="card-content">
                          <div class="my-3">
                              <a class="btn btn-info" href="#">Go to My Requirements</a>
                          </div>
                          <?php if (!empty($disapprovedRequests)) : ?>
                              <table class="table">
                                  <thead>
                                      <th>Purpose</th>
                                      <th>Date Requested</th>
                                      <th>Date Disapproved</th>
                                      <th>Reason</th>
                                      <th></th>
                                  </thead>
                                  <tbody>
                                      <?php foreach ($disapprovedRequests as $disapprovedRequest) : ?>
                                          <tr>
                                              <td><?php echo $disapprovedRequest['purpose']; ?></td>
                                              <td><?php echo $disapprovedRequest['created_at']; ?></td>
                                              <td><?php echo $disapprovedRequest['updated_at']; ?></td>
                                              <td>
                                                  <?php echo $disapprovedRequest['reason']; ?>
                                              </td>
                                              <td></td>
                                          </tr>
                                      <?php endforeach; ?>
                                  </tbody>
                              </table>
                          <?php else : ?>
                              no disapproved request
                          <?php endif; ?>
                      </div>
                  </section>
                  <section class="card w-100">
                      <div class="card-header">
                          <h3>Balances</h3>
                      </div>
                      <div class="card-content">
                          <?php if (!empty($balancesRequests)) : ?>
                              <table class="table">
                                  <thead>
                                      <th>Purpose</th>
                                      <th>Date Requested</th>
                                      <th>Date Changed</th>
                                      <th>Balance</th>
                                      <th></th>
                                  </thead>
                                  <tbody>
                                      <?php foreach ($balancesRequests as $balanceRequest) : ?>
                                          <tr>
                                              <td><?php echo $balanceRequest['purpose']; ?></td>
                                              <td><?php echo $balanceRequest['created_at']; ?></td>
                                              <td><?php echo $balanceRequest['updated_at']; ?></td>
                                              <td>
                                                  <?php echo $balanceRequest['balance']; ?>
                                              </td>
                                              <td></td>
                                          </tr>
                                      <?php endforeach; ?>
                                  </tbody>
                              </table>
                          <?php else : ?>
                              no balance request
                          <?php endif; ?>
                      </div>
                  </section>
              </main>
          </div>
          <?php require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/js_scripts.php'; ?>
      </body>
      </html>
      
      Permits
      pages/user/permits/index.php
      <?php
      require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/functions.php';
      require_once $_SERVER['DOCUMENT_ROOT'] . '/classes/App.php';
      require_once $_SERVER['DOCUMENT_ROOT'] . '/classes/DatabaseHandler.php';
      session_start();
      require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/authorization.php';
      authorize_user();
      $resident_id = $_SESSION['user']['resident_id'];
      $db = new DatabaseHandler();
      $db->connect();
      $stmt = $db->prepareStatement("CALL GetAllPermitRequestsByResidentId(?)");
      $stmt->bind_param("i", $resident_id);
      if (!$stmt->execute()) {
          echo 'error';
          exit;
      }
      $result = $stmt->get_result();
      $pendingRequests = [];
      $approvedRequests = [];
      $dispprovedRequests = [];
      $balancesRequests = [];
      while ($row = $result->fetch_assoc()) {
          if ($row['status'] === 'pending') {
              $pendingRequests[] = $row;
          }
      
          if ($row['status'] === 'approved') {
              $approvedRequests[] = $row;
          }
          if ($row['status'] === 'disapproved') {
              $disapprovedRequests[] = $row;
          }
          if ($row['status'] === 'has_balance') {
              $balancesRequests[] = $row;
          }
      }
      $stmt->close();
      $db->disconnect();
      ?>
      <!DOCTYPE html>
      <html lang="en">
      <head>
          <meta charset="UTF-8">
          <meta http-equiv="X-UA-Compatible" content="IE=edge">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <link rel="stylesheet" href="<?php echo App::$BASE_URL . '/css/main.css'; ?>">
          <link rel="stylesheet" href="<?php echo App::$BASE_URL . '/css/dashboard.css'; ?>">
          <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" integrity="sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw==" crossorigin="anonymous" referrerpolicy="no-referrer" />
          <?php require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/partials/logo.php'; ?>
          <title>Resident | Business Permit</title>
      </head>
      <body class="page">
          <div class="layout d-flex">
              <?php require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/partials/sidebar.php'; ?>
              <main class="main">
                  <header class="mt-2 mb-4">
                      <h2 class="title-4">Business Permit</h2>
                  </header>
                  <section class="my-3">
                      <a class="btn btn-primary" href="<?php echo App::$BASE_URL . '/pages/user/permits/create.php'; ?>">Request Business Permit</a>
                  </section>
                  <section class="card w-100">
                      <div class="card-header">
                          <h3>Pending</h3>
                      </div>
                      <div class="card-content">
                          <?php if (!empty($pendingRequests)) : ?>
                              <table class="table">
                                  <thead>
                                      <th>Business Name</th>
                                      <th>Business Address</th>
                                      <th>Business Type</th>
                                      <th>Business Number</th>
                                      <th>Date Requested</th>
                                  </thead>
                                  <tbody>
                                      <?php foreach ($pendingRequests as $pendingRequest) : ?>
                                          <tr>
                                              <td><?php echo $pendingRequest['name']; ?></td>
                                              <td><?php echo $pendingRequest['address']; ?></td>
                                              <td><?php echo $pendingRequest['type']; ?></td>
                                              <td><?php echo $pendingRequest['number']; ?></td>
                                              <td><?php echo $pendingRequest['created_at']; ?></td>
                                          </tr>
                                      <?php endforeach; ?>
                                  </tbody>
                              </table>
                          <?php else : ?>
                              no pending request
                          <?php endif; ?>
                      </div>
                  </section>
                  <section class="card w-100">
                      <div class="card-header">
                          <h3>Approved (Ready to pick up)</h3>
                      </div>
                      <div class="card-content">
                          <?php if (!empty($approvedRequests)) : ?>
                              <table class="table">
                                  <thead>
                                      <th>Business Name</th>
                                      <th>Business Address</th>
                                      <th>Business Type</th>
                                      <th>Business Number</th>
                                      <th>Date Requested</th>
                                      <th>Date Approved</th>
                                      <th>View</th>
                                  </thead>
                                  <tbody>
                                      <?php foreach ($approvedRequests as $approvedRequest) : ?>
                                          <tr>
                                              <td><?php echo $approvedRequest['name']; ?></td>
                                              <td><?php echo $approvedRequest['address']; ?></td>
                                              <td><?php echo $approvedRequest['type']; ?></td>
                                              <td><?php echo $approvedRequest['number']; ?></td>
                                              <td><?php echo $approvedRequest['created_at']; ?></td>
                                              <td><?php echo $approvedRequest['updated_at']; ?></td>
                                              <td>
                                                  <a class="btn btn-info" href="<?php echo App::$BASE_URL . '/actions/download.php?file=' . $approvedRequest['document_src']; ?>">Download</a>
                                              </td>
                                          </tr>
                                      <?php endforeach; ?>
                                  </tbody>
                              </table>
                          <?php else : ?>
                              no approved request
                          <?php endif; ?>
                      </div>
                  </section>
                  <section class="card w-100">
                      <div class="card-header">
                          <h3>Disapproved</h3>
                      </div>
                      <div class="card-content">
                          <div class="my-3">
                              <a class="btn btn-info" href="#">Go to My Requirements</a>
                          </div>
                          <?php if (!empty($disapprovedRequests)) : ?>
                              <table class="table">
                                  <thead>
                                      <th>Business Name</th>
                                      <th>Business Address</th>
                                      <th>Business Type</th>
                                      <th>Business Number</th>
                                      <th>Date Requested</th>
                                      <th>Date Disapproved</th>
                                      <th>Reason</th>
                                      <th></th>
                                  </thead>
                                  <tbody>
                                      <?php foreach ($disapprovedRequests as $disapprovedRequest) : ?>
                                          <tr>
                                              <td><?php echo $disapprovedRequest['name']; ?></td>
                                              <td><?php echo $disapprovedRequest['address']; ?></td>
                                              <td><?php echo $disapprovedRequest['type']; ?></td>
                                              <td><?php echo $disapprovedRequest['number']; ?></td>
                                              <td><?php echo $disapprovedRequest['created_at']; ?></td>
                                              <td><?php echo $disapprovedRequest['updated_at']; ?></td>
                                              <td>
                                                  <?php echo $disapprovedRequest['reason']; ?>
                                              </td>
                                              <td></td>
                                          </tr>
                                      <?php endforeach; ?>
                                  </tbody>
                              </table>
                          <?php else : ?>
                              no disapproved request
                          <?php endif; ?>
                      </div>
                  </section>
                  <section class="card w-100">
                      <div class="card-header">
                          <h3>Balances</h3>
                      </div>
                      <div class="card-content">
                          <?php if (!empty($balancesRequests)) : ?>
                              <table class="table">
                                  <thead>
                                      <th>Purpose</th>
                                      <th>Date Requested</th>
                                      <th>Date Changed</th>
                                      <th>Balance</th>
                                      <th></th>
                                  </thead>
                                  <tbody>
                                      <?php foreach ($balancesRequests as $balancesRequest) : ?>
                                          <tr>
                                              <td><?php echo $balancesRequest['purpose']; ?></td>
                                              <td><?php echo $balancesRequest['created_at']; ?></td>
                                              <td><?php echo $balancesRequest['updated_at']; ?></td>
                                              <td>
                                                  <?php echo $balancesRequest['balance']; ?>
                                              </td>
                                              <td></td>
                                          </tr>
                                      <?php endforeach; ?>
                                  </tbody>
                              </table>
                          <?php else : ?>
                              no balance request
                          <?php endif; ?>
                      </div>
                  </section>
              </main>
          </div>
          <?php require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/js_scripts.php'; ?>
      </body>
      </html>
      pages/user/permits/index.php
      <!DOCTYPE html>
      <html>
      <head>
          <?php require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/partials/logo.php'; ?>
          <title>Request Form</title>
          <style>
              body {
                  font-family: Arial, sans-serif;
                  background-color: #f1f1f1;
                  margin: 0;
                  padding: 20px;
              }
              h1 {
                  color: #333;
              }
              table {
                  border-collapse: collapse;
                  width: 100%;
                  margin-bottom: 20px;
              }
              th,
              td {
                  border: 1px solid #ddd;
                  padding: 8px;
                  text-align: left;
              }
              th {
                  background-color: #f2f2f2;
              }
              form {
                  width: 400px;
                  background-color: #fff;
                  padding: 20px;
                  border-radius: 5px;
              }
              label {
                  display: block;
                  margin-bottom: 10px;
                  font-weight: bold;
              }
              input[type="text"],
              input[type="number"],
              textarea {
                  width: 100%;
                  padding: 8px;
                  border: 1px solid #ddd;
                  border-radius: 4px;
                  box-sizing: border-box;
                  margin-bottom: 10px;
              }
              input[type="submit"] {
                  background-color: #4CAF50;
                  color: #fff;
                  border: none;
                  padding: 10px 16px;
                  text-align: center;
                  text-decoration: none;
                  display: inline-block;
                  font-size: 14px;
                  border-radius: 4px;
                  cursor: pointer;
              }
              input[type="submit"]:hover {
                  background-color: #45a049;
              }
              .disapproved {
                  color: red;
                  font-weight: bold;
              }
              .button {
                  background-color: #4CAF50;
                  color: white;
                  padding: 8px 16px;
                  border: none;
                  border-radius: 4px;
                  cursor: pointer;
                  text-decoration: none;
              }
              .button:hover {
                  background-color: #45a049;
              }
          </style>
      </head>
      <body>
          <h1>Request Form</h1>
          <?php
          require_once $_SERVER['DOCUMENT_ROOT'] . '/classes/DatabaseHandler.php';
          $db = new DatabaseHandler();
          $host = $db->getHost();
          $username = $db->getUsername();
          $password = $db->getPassword();
          $database = $db->getDatabaseName();
      
          $conn = new mysqli($host, $username, $password, $database);
          if ($conn->connect_error) {
              die("Connection failed: " . $conn->connect_error);
          }
          if ($_SERVER["REQUEST_METHOD"] === "POST") {
              $name = $_POST['resident_name'];
              $age = $_POST['age'];
              $gender = $_POST['gender'];
              $cause = $_POST['cause'];
              $sql = "INSERT INTO requests (resident_name, age, gender, cause) VALUES ('$name', '$age', '$gender', '$cause')";
              if ($conn->query($sql) === TRUE) {
                  echo "<div class='notification'>Request submitted successfully.</div>";
              } else {
                  echo "<div class='notification'>Error: " . $sql . "<br>" . $conn->error . "</div>";
              }
          }
          $sql = "SELECT * FROM requests";
          $result = $conn->query($sql);
          if ($result->num_rows > 0) {
              echo "<table>";
              echo "<tr><th>Name</th><th>Age</th><th>Gender</th><th>Cause for Request</th><th>Process</th><th>Disapproval Reason</th></tr>";
      
              while ($row = $result->fetch_assoc()) {
                  echo "<tr>";
                  echo "<td>" . $row['resident_name'] . "</td>";
                  echo "<td>" . $row['age'] . "</td>";
                  echo "<td>" . $row['gender'] . "</td>";
                  echo "<td>" . $row['cause'] . "</td>";
                  $process = $row['process'];
                  $disapprovalReason = $row['disapproval_reason'];
                  if ($process === "disapproved") {
                      echo "<td class='disapproved'>$process</td>";
                      echo "<td>$disapprovalReason</td>";
                  } else {
                      echo "<td>$process</td>";
                      echo "<td></td>";
                  }
                  echo "</tr>";
              }
              echo "</table>";
          } else {
              echo "<div class='notification'>No requests found.</div>";
          }
          $conn->close();
          ?>
          <h2>Submit a Request</h2>
          <form action="<?php echo $_SERVER["PHP_SELF"]; ?>" method="POST">
              <label for="resident_name">Name:</label>
              <input type="text" id="resident_name" name="resident_name" required>
              <label for="age">Age:</label>
              <input type="number" id="age" name="age" required>
              <label for="gender">Gender:</label>
              <select id="gender" name="gender" required>
                  <option value="">Select Gender</option>
                  <option value="Male">Male</option>
                  <option value="Female">Female</option>
                  <option value="Other">Other</option>
              </select>
              <label for="cause">Cause for Request:</label>
              <textarea id="cause" name="cause" required></textarea>
              <input type="submit" value="Submit Request">
              <a href="pages/user/dashboard/index.php" class="button">Go Back to Dashboard</a>
          </form>
      </body>
      </html>
      
      For Admin (PHP)
      add_activity.php
      <!DOCTYPE html>
      <html>
      <head>
          <?php require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/partials/logo.php'; ?>
          <style>
              .success {
                  color: green;
                  font-weight: bold;
                  margin-bottom: 10px;
              }
              .error {
                  color: red;
                  font-weight: bold;
                  margin-bottom: 10px;
              }
              .activity-log {
                  width: 100%;
                  border-collapse: collapse;
              }
              .activity-log th,
              .activity-log td {
                  border: 1px solid #ccc;
                  padding: 8px;
              }
              .activity-log th {
                  background-color: #f2f2f2;
                  font-weight: bold;
                  text-align: left;
              }
              .activity-log td a {
                  text-decoration: none;
                  color: blue;
              }
              .message {
                  font-style: italic;
                  margin-bottom: 10px;
              }
          </style>
      </head>
      <body>
          <?php
          require_once $_SERVER['DOCUMENT_ROOT'] . '/classes/DatabaseHandler.php';
          $db = new DatabaseHandler();
          $host = $db->getHost();
          $username = $db->getUsername();
          $password = $db->getPassword();
          $database = $db->getDatabaseName();
          $conn = new mysqli($host, $username, $password, $database);
          if ($conn->connect_error) {
              die("Connection failed: " . $conn->connect_error);
          }
          if ($_SERVER["REQUEST_METHOD"] === "POST") {
              $date = $_POST['date'];
              $activity = $_POST['activity'];
              $description = $_POST['description'];
              $documentation = $_FILES['documentation']['name'];
              $stmt = $conn->prepare("INSERT INTO activity (date, activity, description, documentation) VALUES (?, ?, ?, ?)");
              $stmt->bind_param("ssss", $date, $activity, $description, $documentation);
              if ($stmt->execute()) {
                  echo "Activity log added successfully.";
              } else {
                  echo "Error: " . $stmt->error;
              }
              $targetDirectory = "uploads/";
              $targetFilePath = $targetDirectory . $documentation;
              if (move_uploaded_file($_FILES["documentation"]["tmp_name"], $targetFilePath)) {
                  $sql = "UPDATE activity SET documentation = '$documentation' WHERE id = $stmt->insert_id";
                  if ($conn->query($sql) === TRUE) {
                  } else {
                      echo "Error updating file name: " . $conn->error;
                  }
              } else {
                  echo "Error uploading file.";
              }
              $stmt->close();
          }
      
          $sql = "SELECT * FROM activity ORDER BY date ASC";
          $result = $conn->query($sql);
          if ($result->num_rows > 0) {
              echo "<table>";
              echo "<tr>";
              echo "<th>Date</th>";
              echo "<th>Activity</th>";
              echo "<th>Description</th>";
              echo "<th>Documentation</th>";
              echo "<th>View</th>";
              echo "</tr>";
              while ($row = $result->fetch_assoc()) {
                  echo "<tr>";
                  echo "<td>" . $row['date'] . "</td>";
                  echo "<td>" . $row['activity'] . "</td>";
                  echo "<td>" . $row['description'] . "</td>";
                  echo "<td>" . $row['documentation'] . "</td>";
                  echo "<td><a href='uploads/" . $row['documentation'] . "' target='_blank'>View</a></td>";
                  echo "</tr>";
              }
              echo "</table>";
          } else {
              echo "No activity logs found.";
          }
      
          $conn->close();
          ?>
          <div>
              <a href="admin_dashboard.php" class="button">Go Back to Dashboard</a>
          </div>
      </body>
      </html>
      
      add_announcement.php
      <!DOCTYPE html>
      <html>
      <head>
          <?php require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/partials/logo.php'; ?>
          <title>Add Announcement</title>
          <style>
              body {
                  font-family: Arial, sans-serif;
                  background-color: #f4f4f4;
                  margin: 0;
                  padding: 20px;
              }
              h1 {
                  color: #333;
                  text-align: center;
                  margin-bottom: 20px;
              }
              form {
                  max-width: 600px;
                  margin: 0 auto;
                  background-color: #fff;
                  padding: 20px;
                  border-radius: 5px;
                  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
              }
              label {
                  display: block;
                  margin-bottom: 10px;
                  font-weight: bold;
                  color: #333;
              }
              input[type="text"],
              textarea {
                  width: 100%;
                  padding: 8px;
                  border-radius: 4px;
                  border: 1px solid #ccc;
                  box-sizing: border-box;
                  margin-bottom: 20px;
                  resize: vertical;
              }
              .button {
                  display: inline-block;
                  margin-right: 10px;
                  padding: 8px 16px;
                  background-color: #333;
                  color: white;
                  text-decoration: none;
                  cursor: pointer;
                  border-radius: 4px;
                  transition: background-color 0.3s;
              }
              .button:hover {
                  background-color: #555;
              }
          </style>
      </head>
      <body>
          <?php
          if ($_SERVER['REQUEST_METHOD'] === 'POST') {
              $title = $_POST['title'];
              $content = $_POST['content'];
              require_once $_SERVER['DOCUMENT_ROOT'] . '/classes/DatabaseHandler.php';
              $db = new DatabaseHandler();
              $host = $db->getHost();
              $username = $db->getUsername();
              $password = $db->getPassword();
              $database = $db->getDatabaseName();
              $conn = new mysqli($host, $username, $password, $database);
              if ($conn->connect_error) {
                  die("Connection failed: " . $conn->connect_error);
              }
              $stmt = $conn->prepare("INSERT INTO announcements (title, content) VALUES (?, ?)");
              $stmt->bind_param("ss", $title, $content);
              if ($stmt->execute()) {
                  echo "<p>Announcement added successfully.</p>";
              } else {
                  echo "<p>Error adding announcement: " . $stmt->error . "</p>";
              }
              $stmt->close();
              $conn->close();
          }
          ?>
          <a href="admin_dashboard.php" class="button">Go Back to Dashboard</a>
      
      </body>
      
      </html>
      add_approved_permit.php
      <?php
      require_once $_SERVER['DOCUMENT_ROOT'] . '/classes/DatabaseHandler.php';
      $db = new DatabaseHandler();
      $host = $db->getHost();
      $username = $db->getUsername();
      $password = $db->getPassword();
      $database = $db->getDatabaseName();
      $conn = new mysqli($host, $username, $password, $database);
      if ($conn->connect_error) {
          die("Connection failed: " . $conn->connect_error);
      }
      $resident = $_POST['resident'];
      $businessName = $_POST['business_name'];
      $businessAddress = $_POST['business_address'];
      $businessType = $_POST['business_type'];
      $permitNumber = $_POST['permit_number'];
      $amount = $_POST['amount'];
      $stmt = $conn->prepare("INSERT INTO approved_permits (resident_name, business_name, business_address, business_type, permit_number, amount) VALUES (?, ?, ?, ?, ?, ?)");
      $stmt->bind_param("ssssss", $resident, $businessName, $businessAddress, $businessType, $permitNumber, $amount);
      $stmt->execute();
      $stmt->close();
      $conn->close();
      header("Location: permits.php");
      exit();
      
      add_disapproved_permit.php
      <?php
      require_once $_SERVER['DOCUMENT_ROOT'] . '/classes/DatabaseHandler.php';
      $db = new DatabaseHandler();
      $host = $db->getHost();
      $username = $db->getUsername();
      $password = $db->getPassword();
      $database = $db->getDatabaseName();
      $conn = new mysqli($host, $username, $password, $database);
      if ($conn->connect_error) {
          die("Connection failed: " . $conn->connect_error);
      }
      $resident = $_POST['resident'];
      $businessName = $_POST['business_name'];
      $businessAddress = $_POST['business_address'];
      $businessType = $_POST['business_type'];
      $reason = $_POST['reason'];
      $stmt = $conn->prepare("INSERT INTO disapproved_permits (resident_name, business_name, business_address, business_type, reason_for_disapproval) VALUES (?, ?, ?, ?, ?)");
      $stmt->bind_param("sssss", $resident, $businessName, $businessAddress, $businessType, $reason);
      $stmt->execute();
      $stmt->close();
      $conn->close();
      header("Location: permits.php");
      exit();
      add_health_monitoring.php
      <!DOCTYPE html>
      <html>
      <head>
          <?php require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/partials/logo.php'; ?>
          <title>Add Health Monitoring</title>
          <style>
              body {
                  font-family: Arial, sans-serif;
                  background-color: #f1f1f1;
                  margin: 0;
                  padding: 30px;
              }
              h2 {
                  color: #333;
              }
              form {
                  margin-bottom: 20px;
              }
              label {
                  display: inline-block;
                  width: 120px;
              }
              input[type="text"] {
                  padding: 8px;
                  border: 1px solid #ddd;
                  border-radius: 4px;
              }
              input[type="submit"],
              .button {
                  background-color: #4CAF50;
                  color: white;
                  padding: 8px 16px;
                  border: none;
                  border-radius: 4px;
                  cursor: pointer;
                  text-decoration: none;
                  margin-top: 10px;
              }
              input[type="submit"]:hover,
              .button:hover {
                  background-color: #45a049;
              }
              .button {
                  margin-left: 10px;
                  margin-top: 20px;
              }
          </style>
      </head>
      <body>
          <?php
          require_once $_SERVER['DOCUMENT_ROOT'] . '/classes/DatabaseHandler.php';
          $db = new DatabaseHandler();
          $host = $db->getHost();
          $username = $db->getUsername();
          $password = $db->getPassword();
          $database = $db->getDatabaseName();
          $conn = new mysqli($host, $username, $password, $database);
          if ($conn->connect_error) {
              die("Connection failed: " . $conn->connect_error);
          }
          if ($_SERVER["REQUEST_METHOD"] == "POST") {
              $resident_name = $_POST["resident_name"];
              $weight = $_POST["weight"];
              $height = $_POST["height"];
              $blood_pressure = $_POST["blood_pressure"];
              $temperature = $_POST["temperature"];
              $sql = "INSERT INTO health_monitoring (resident_name, weight, height, blood_pressure, temperature)
                      VALUES ('$resident_name', '$weight', '$height', '$blood_pressure', '$temperature')";
              if ($conn->query($sql) === TRUE) {
                  echo "Health monitoring record added successfully.";
              } else {
                  echo "Error: " . $sql . "<br>" . $conn->error;
              }
          }
          $conn->close();
          ?>
          <h2>Add Health Monitoring Record</h2>
          <form action="add_health_monitoring.php" method="POST">
              <label for="resident_name">Resident Name:</label>
              <input type="text" name="resident_name" id="resident_name" required><br>
              <label for="weight">Weight:</label>
              <input type="text" name="weight" id="weight" required><br>
              <label for="height">Height:</label>
              <input type="text" name="height" id="height" required><br>
              <label for="blood_pressure">Blood Pressure:</label>
              <input type="text" name="blood_pressure" id="blood_pressure" required><br>
              <label for="temperature">Temperature:</label>
              <input type="text" name="temperature" id="temperature" required><br>
              <input type="submit" value="Add Health Monitoring Record">
              <a href="health_monitoring.php" class="button">Health Monitoring Table</a>
              <a href="admin_dashboard.php" class="button">Go Back to Dashboard</a>
          </form>
      </body>
      </html>
      
      add_household.php
      <?php
      error_reporting(E_ALL);
      ini_set('display_errors', 1);
      require_once $_SERVER['DOCUMENT_ROOT'] . '/classes/DatabaseHandler.php';
      $db = new DatabaseHandler();
      $host = $db->getHost();
      $username = $db->getUsername();
      $password = $db->getPassword();
      $database = $db->getDatabaseName();
      $conn = new mysqli($host, $username, $password, $database);
      if ($conn->connect_error) {
          die("Connection failed: " . $conn->connect_error);
      }
      $householdId = $_POST['household_number'];
      $zone = $_POST['zone'];
      $totalMembers = $_POST['total_members'];
      $familyHead = $_POST['family_head'];
      
      $stmt = $conn->prepare("INSERT INTO households (household_id, zone, total_members, family_head) VALUES (?, ?, ?, ?)");
      $stmt->bind_param("ssis", $householdId, $zone, $totalMembers, $familyHead);
      $stmt->execute();
      if ($stmt) {
          echo "Household added successfully.";
      } else {
          echo "Error: " . $conn->error;
      }
      $stmt->close();
      $conn->close();
      ?>
      <a href="admin_dashboard.php" class="button">Go Back to Dashboard</a>
      
      add_inventory.php
      <?php
      require_once $_SERVER['DOCUMENT_ROOT'] . '/classes/DatabaseHandler.php';
      $db = new DatabaseHandler();
      $host = $db->getHost();
      $username = $db->getUsername();
      $password = $db->getPassword();
      $database = $db->getDatabaseName();
      $conn = new mysqli($host, $username, $password, $database);
      
      if ($conn->connect_error) {
          die("Connection failed: " . $conn->connect_error);
      }
      if ($_SERVER["REQUEST_METHOD"] === "POST") {
          $itemName = $_POST['itemName'];
          $quantity = $_POST['quantity'];
          $price = $_POST['price'];
          $sql = "INSERT INTO inventory (item_name, quantity, price) VALUES (?, ?, ?)";
          $stmt = $conn->prepare($sql);
          $stmt->bind_param("sdi", $itemName, $quantity, $price);
          if ($stmt->execute()) {
              echo "Item added successfully.";
          } else {
              echo "Error adding item: " . $stmt->error;
          }
          $stmt->close();
      }
      $conn->close();
      ?>
      <a href="admin_dashboard.php" class="button">Go Back to Dashboard</a>
      
      add_official.php
      <!DOCTYPE html>
      <html>
      <head>
          <?php require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/partials/logo.php'; ?>
          <title>Add Official</title>
          <style>
              body {
                  font-family: Arial, sans-serif;
              }
              .container {
                  max-width: 500px;
                  margin: 0 auto;
                  padding: 20px;
                  border: 1px solid #ddd;
                  border-radius: 5px;
                  background-color: #f7f7f7;
              }
              h2 {
                  margin-top: 0;
              }
             .form-group {
                  margin-bottom: 20px;
              }
              label {
                  display: block;
                  font-weight: bold;
                  margin-bottom: 5px;
              }
              input[type="text"],
              input[type="date"] {
                  width: 100%;
                  padding: 8px;
                  border: 1px solid #ddd;
                  border-radius: 4px;
              }
              .button {
                  display: inline-block;
                  padding: 8px 16px;
                  font-size: 14px;
                  text-decoration: none;
                  background-color: #4CAF50;
                  color: #fff;
                  border-radius: 4px;
                  transition: background-color 0.3s;
                  cursor: pointer;
                  border: none;
              }
              .button:hover {
                  background-color: #45a049;
              }
          </style>
      </head>
      <body>
          <div class="container">
              <?php
              require_once $_SERVER['DOCUMENT_ROOT'] . '/classes/DatabaseHandler.php';
              $db = new DatabaseHandler();
              $host = $db->getHost();
              $username = $db->getUsername();
              $password = $db->getPassword();
              $database = $db->getDatabaseName();
              $conn = new mysqli($host, $username, $password, $database);
              if ($conn->connect_error) {
                  die("Connection failed: " . $conn->connect_error);
              }
              $position = $_POST['position'];
              $name = $_POST['name'];
              $contact = $_POST['contact'];
              $address = $_POST['address'];
              $startOfTerm = $_POST['start_of_term'];
              $endOfTerm = $_POST['end_of_term'];
              $sql = "INSERT INTO barangay_officials (position, name, contact, address, start_of_term, end_of_term) VALUES (?, ?, ?, ?, ?, ?)";
              $stmt = $conn->prepare($sql);
              $stmt->bind_param("ssssss", $position, $name, $contact, $address, $startOfTerm, $endOfTerm);
      
              if ($stmt->execute()) {
                  echo '<p style="color: green; font-weight: bold;">New official added successfully.</p>';
              } else {
                  echo '<p style="color: red; font-weight: bold;">Error: ' . $stmt->error . '</p>';
              }
              $stmt->close();
              $conn->close();
              ?>
              <?php require_once $_SERVER['DOCUMENT_ROOT'] . '/classes/App.php'; ?>
              <a href="<?php echo App::$BASE_URL . '/pages/admin/dashboard/index/php'; ?>" class="button">Go Back to Dashboard</a>
          </div>
      </body>
      </html>
      For Resident (PHP)
      create.php (clearances)
      <?php
      require_once $_SERVER['DOCUMENT_ROOT'] . '/classes/App.php';
      session_start();
      require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/authorization.php';
      authorize_user();
      if ($_SERVER['REQUEST_METHOD'] !== 'POST') {
          header('Location: ' . App::$BASE_URL . '/pages/user/dashboard/index.php');
      }
      require_once $_SERVER['DOCUMENT_ROOT'] . '/classes/DatabaseHandler.php';
      $db = new DatabaseHandler();
      $db->connect();
      $purpose = $_POST['purpose'];
      $ref_no = $_POST['ref_no'];
      // clearance info
      $stmt = $db->prepareStatement("INSERT INTO tblclearance_info(purpose) VALUES(?)");
      $stmt->bind_param('s', $purpose);
      if (!$stmt->execute()) {
          echo 'error';
          exit;
      }
      $clearance_info_id = $db->getConnection()->insert_id;
      $stmt->close();
      $resident_id = $_SESSION['user']['resident_id'];
      // request
      $stmt = $db->prepareStatement("INSERT INTO tblrequests(resident_id, clearance_info_id, service_id) VALUES(?,?,?)");
      $stmt->bind_param('iii', $resident_id, $clearance_info_id, App::$BARANGAY_CLEARANCE);
      if (!$stmt->execute()) {
          echo 'error';
          exit;
      }
      $request_id = $db->getConnection()->insert_id;
      $stmt->close();
      // payments
      $stmt = $db->prepareStatement("INSERT INTO tblpayments(request_id, ref_no) VALUES(?,?)");
      $stmt->bind_param('is', $request_id, $ref_no);
      if (!$stmt->execute()) {
          echo 'error';
          exit;
      }
      $stmt->close();
      $db->disconnect();
      header('Location: ' . App::$BASE_URL . '/pages/user/clearances/index.php');
      exit;
      
      create.php(indigency)
      <?php
      require_once $_SERVER['DOCUMENT_ROOT'] . '/classes/App.php';
      session_start();
      require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/authorization.php';
      authorize_user();
      
      if ($_SERVER['REQUEST_METHOD'] !== 'POST') {
          header('Location: ' . App::$BASE_URL . '/pages/user/dashboard/index.php');
      }
      require_once $_SERVER['DOCUMENT_ROOT'] . '/classes/DatabaseHandler.php';
      $db = new DatabaseHandler();
      $db->connect();
      $purpose = $_POST['purpose'];
      $ref_no = $_POST['ref_no'];
      // clearance info
      $stmt = $db->prepareStatement("INSERT INTO tblindigency_info(purpose) VALUES(?)");
      $stmt->bind_param('s', $purpose);
      if (!$stmt->execute()) {
          echo 'error';
          exit;
      }
      $indigency_info_id = $db->getConnection()->insert_id;
      $stmt->close();
      $resident_id = $_SESSION['user']['resident_id'];
      // request
      $stmt = $db->prepareStatement("INSERT INTO tblrequests(resident_id, indigency_info_id, service_id) VALUES(?,?,?)");
      $stmt->bind_param('iii', $resident_id, $indigency_info_id, App::$CERTIFICATE_OF_INDIGENCY);
      
      if (!$stmt->execute()) {
          echo 'error';
          exit;
      }
      $request_id = $db->getConnection()->insert_id;
      $stmt->close();
      // payments
      $stmt = $db->prepareStatement("INSERT INTO tblpayments(request_id, ref_no) VALUES(?,?)");
      $stmt->bind_param('is', $request_id, $ref_no);
      if (!$stmt->execute()) {
          echo 'error';
          exit;
      }
      $stmt->close();
      $db->disconnect();
      header('Location: ' . App::$BASE_URL . '/pages/user/indigencies/index.php');
      exit;
      
      create.php(permits)
      <?php
      require_once $_SERVER['DOCUMENT_ROOT'] . '/classes/App.php';
      session_start();
      require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/authorization.php';
      authorize_user();
      if ($_SERVER['REQUEST_METHOD'] !== 'POST') {
          header('Location: ' . App::$BASE_URL . '/pages/user/dashboard/index.php');
      }
      require_once $_SERVER['DOCUMENT_ROOT'] . '/classes/DatabaseHandler.php';
      $db = new DatabaseHandler();
      $db->connect();
      $permit_info = [
          'name' => $_POST['name'],
          'address' => $_POST['address'],
          'type' => $_POST['type'],
          'number' => $_POST['number'],
      ];
      $ref_no = $_POST['ref_no'];
      // permit info
      $stmt = $db->prepareStatement("INSERT INTO tblpermit_info(name,address,type,number) VALUES(?,?,?,?)");
      $stmt->bind_param('ssss', $permit_info['name'], $permit_info['address'], $permit_info['type'], $permit_info['number']);
      if (!$stmt->execute()) {
          echo 'error';
          exit;
      }
      $permit_info_id = $db->getConnection()->insert_id;
      $stmt->close();
      $resident_id = $_SESSION['user']['resident_id'];
      // request
      $stmt = $db->prepareStatement("INSERT INTO tblrequests(resident_id, permit_info_id, service_id) VALUES(?,?,?)");
      $stmt->bind_param('iii', $resident_id, $permit_info_id, App::$BUSINESS_PERMITS);
      if (!$stmt->execute()) {
          echo 'error';
          exit;
      }
      $request_id = $db->getConnection()->insert_id;
      $stmt->close();
      // payments
      $stmt = $db->prepareStatement("INSERT INTO tblpayments(request_id, ref_no) VALUES(?,?)");
      $stmt->bind_param('is', $request_id, $ref_no);
      if (!$stmt->execute()) {
          echo 'error';
          exit;
      }
      $stmt->close();
      $db->disconnect();
      header('Location: ' . App::$BASE_URL . '/pages/user/permits/index.php');
      exit;
      
      
      edit.php(profile)
      <?php
      session_start();
      require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/authorization.php';
      authorize_user();
      if ($_SERVER['REQUEST_METHOD'] !== 'POST') {
          $_SESSION['request_error'] = 'Something went wrong. Please try again!';
          header('Location: ' . $_SERVER['HTTP_REFERER']);
      }
      $profile = [
          'fname' => strtolower($_POST['fname']),
          'mname' => strtolower($_POST['mname']),
          'lname' => strtolower($_POST['lname']),
          'gender' => strtolower($_POST['gender']),
          'purok_no' => $_POST['purok_no'],
          'contact_no' => $_POST['contact_no'],
          'birthdate' => $_POST['birthdate'],
      ];
      $resident_id = $_SESSION['user']['resident_id'];
      require_once $_SERVER['DOCUMENT_ROOT'] . '/classes/DatabaseHandler.php';
      $db = new DatabaseHandler();
      $db->connect();
      $stmt = $db->prepareStatement("UPDATE tblresidents 
      SET first_name = ?, middle_name = ?, last_name = ?, gender = ?, purok = ?, birthdate = ?, contact_no = ?
      WHERE id = ?");
      $stmt->bind_param('ssssissi', $profile['fname'], $profile['mname'], $profile['lname'], $profile['gender'], $profile['purok_no'], $profile['birthdate'], $profile['contact_no'], $resident_id);
      if (!$stmt->execute()) {
          echo 'error';
          die();
      }
      $_SESSION['success_edit'] = "Profile successfully updated!";
      header('Location: ' . $_SERVER['HTTP_REFERER']);
      
      delete.php(requirements)
      <?php
      if ($_SERVER['REQUEST_METHOD'] !== 'GET') {
          header('Location: ' . $_SERVER['HTTP_REFERER']);
      }
      session_start();
      require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/authorization.php';
      authorize_user();
      $id = $_GET['id'];
      require_once $_SERVER['DOCUMENT_ROOT'] . '/classes/DatabaseHandler.php';
      $db = new DatabaseHandler();
      $db->connect();
      $stmt = $db->prepareStatement("UPDATE tblresident_requirements SET is_deleted = 1 WHERE id = ?");
      $stmt->bind_param('i', $id);
      if(!$stmt->execute()) {
          echo 'error';
          exit;
      }
      header('Location: ' . $_SERVER['HTTP_REFERER']);
      exit;
      
      index.php(requirements)
      <?php
      require_once $_SERVER['DOCUMENT_ROOT'] . '/classes/App.php';
      require_once $_SERVER['DOCUMENT_ROOT'] . '/classes/FileUploader.php';
      require_once $_SERVER['DOCUMENT_ROOT'] . '/classes/DatabaseHandler.php';
      if ($_SERVER['REQUEST_METHOD'] !== 'POST') {
          header('Location: ' . App::$BASE_URL . '/pages/user/requirements/index.php');
          exit;
      }
      session_start();
      require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/authorization.php';
      authorize_user();
      
      $name = $_POST['filename'];
      $db = new DatabaseHandler();
      $fileUploader = new FileUploader();
      $db->connect();
      if (isset($_FILES['file'])) {
          $uploadedFile = $fileUploader->uploadFile($_FILES['file']);
          if ($uploadedFile) {
              $requirement = [
                  'resident_id' => $_SESSION['user']['resident_id'],
                  'name' => $name,
                  'src' => $uploadedFile,
              ];
              $sql = "INSERT into tblresident_requirements(resident_id, name, src) VALUES (?,?,?);";
              $stmt = $db->prepareStatement($sql);
              $stmt->bind_param('iss', $requirement['resident_id'], $requirement['name'], $requirement['src']);
              if(!$stmt->execute()) {
                  echo 'error';
              }
              $stmt->close();
              $db->disconnect();
              header('Location: ' . App::$BASE_URL . '/pages/user/requirements/index.php');
              exit;
          }
      }
      
      CSS
      dashboard.css
      #sidebar {
        position: fixed;
        background-color: #2c3333;
        width: 260px;
        height: 100vh;
        color: #fff;
      }
      #sidebar.none {
        display: none;
      }
      #sidebar-title {
        background-color: #0a4d68;
        height: 75px;
      }
      .sidebar-item {
        padding-left: 12px;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: flex-start;
        width: 100%;
        height: 48px;
      }
      .sidebar-item.active {
        background-color: #065471;
      }
      .sidebar-item a {
        width: 100%;
        height: 100%;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: flex-start;
      }
      .sidebar-item:hover {
        background-color: #065471;
      }
      .main {
        overflow-y: auto;
        height: 100vh;
        padding-left: 57px;
        padding-right: 57px;
        width: 100%;
        margin-left: 260px;
        padding-bottom: 200px;
      }
      #hamburger-icon,
      #close-icon {
        color: #fff;
        font-size: 40px;
        cursor: pointer;
        transition: opacity 0.3s ease-in-out;
        position: absolute;
        top: 17px;
        left: 14px;
        z-index: 999;
      }
      #close-icon {
        display: none;
      }
      #hamburger-icon.active {
        display: none;
        color: #333;
      }
      #close-icon.active {
        display: block;
        color: #333;
      }
      .dropbtn-document {
        user-select: none;
        font-size: 16px;
        border: none;
        cursor: pointer;
        width: 100%;
        text-align: left;
      }
      .dropdown-content-document {
        display: none;
        min-width: 160px;
      }
      .dropdown-content-document a {
        padding: 12px 16px;
        text-decoration: none;
        display: flex;
      }
      .dropdown-content-document.show {
        display: block;
      }
      .dropdown-item {
        padding-left: 30px !important;
      }
      .dropdown-item.active {
        background-color: #065471;
      }
      
      
      .dropdown-item:hover {
        background-color: #065471;
      }
      .logout {
        width: 100%;
        height: 48px;
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: #ff6666;
        border: #ff6666 1px solid;
        color: #fff;
      }
      .logout a {
        width: 100%;
        height: 48px;
        display: flex;
        justify-content: center;
        align-items: center;
      }
      .logout:hover {
        background-color: #e94e4e;
      }
      .table th {
        text-align: left !important;
        width: 120px;
      }
      td.col-colon {
        font-weight: 600;
        width: 10px !important;
      }
      .table td {
        text-align: left;
      }
      
      main.css
      :root {
        --spacing-unit: 8px;
      }
      /* reset */
      /* Box sizing rule */
      *,
      *::before,
      *::after {
        box-sizing: border-box;
      }
      /* Remove margin and padding */
      body,
      h1,
      h2,
      h3,
      h4,
      h5,
      h6,
      p,
      ol,
      ul,
      li,
      figure,
      figcaption,
      blockquote,
      dl,
      dd {
        margin: 0;
        padding: 0;
      }
      /* Typography */
      body {
        font-family: Arial, sans-serif;
      }
      /* Links */
      a {
        display: inline-block;
        color: inherit;
        text-decoration: none;
      }
      /* Lists */
      ol,
      ul {
        list-style: none;
      }
      textarea {
        font-family: Arial, sans-serif;
      }
      /* main */
      /* layouts and containers */
      .page {
        display: flex;
        flex-direction: column;
      }
      .layout {
        overflow-y: scroll;
        position: relative;
        background-color: #fff8f3;
        height: 100%;
        width: 100%;
        max-width: 1920px;
        margin: 0 auto;
      }
      
      .container {
        width: 100%;
        max-width: 1280px;
        /* margin: 0 auto; */
        margin-left: auto;
        margin-right: auto;
      }
      /* dimensions */
      .h-10 {
        height: 10%;
      }
      .h-20 {
        height: 20%;
      }
      .h-30 {
        height: 30%;
      }
      .h-40 {
        height: 40%;
      }
      .h-50 {
        height: 50%;
      }
      .h-60 {
        height: 60%;
      }
      .h-70 {
        height: 70%;
      }
      .h-80 {
        height: 80%;
      }
      .h-90 {
        height: 90%;
      }
      .h-100 {
        height: 100%;
      }
      .h-100vh {
        height: 100vh;
      }
      .w-10 {
        width: 10%;
      }
      .w-20 {
        width: 20%;
      }
      .w-30 {
        width: 30%;
      }
      .w-40 {
        width: 40%;
      }
      .w-50 {
        width: 50%;
      }
      .w-60 {
        width: 60%;
      }
      .w-70 {
        width: 70%;
      }
      .w-80 {
        width: 80%;
      }
      .w-90 {
        width: 90%;
      }
      .w-100 {
        width: 100%;
      }
      .vh-100 {
        height: 100vh;
      }
      .vw-100 {
        width: 100vh;
      }
      /* flexbox */
      .d-flex {
        display: flex;
      }
      .d-flex-column {
        flex-direction: column;
      }
      .justify-content--flex-start {
        justify-content: flex-start;
      }
      .justify-content--flex-end {
        justify-content: flex-end;
      }
      .justify-content--space-between {
        justify-content: space-between;
      }
      .justify-content--center {
        justify-content: center;
      }
      .align-items--center {
        align-items: center;
      }
      
      /* Flex Container Classes */
      .d-flex {
        display: flex;
      }
      .flex-row {
        flex-direction: row;
      }
      .flex-column {
        flex-direction: column;
      }
      .flex-wrap {
        flex-wrap: wrap;
      }
      /* Alignment Classes */
      .justify-content-start {
        justify-content: flex-start;
      }
      .justify-content-end {
        justify-content: flex-end;
      }
      .justify-content-center {
        justify-content: center;
      }
      .justify-content-between {
        justify-content: space-between;
      }
      .justify-content-around {
        justify-content: space-around;
      }
      .align-items-center {
        align-items: center;
      }
      .align-items-start {
        align-items: flex-start;
      }
      .align-items-end {
        align-items: flex-end;
      }
      .align-items-stretch {
        align-items: stretch;
      }
      /* Self-alignment Classes */
      .align-self-start {
        align-self: flex-start;
      }
      .align-self-end {
        align-self: flex-end;
      }
      .align-self-center {
        align-self: center;
      }
      .align-self-stretch {
        align-self: stretch;
      }
      /* Flex Item Order */
      .order-1 {
        order: 1;
      }
      .order-2 {
        order: 2;
      }
      /* Flex Item Sizing */
      .flex-grow-1 {
        flex-grow: 1;
      }
      .flex-shrink-0 {
        flex-shrink: 0;
      }
      /* text */
      .title {
        font-size: 24px;
      }
      .title-2 {
        font-size: 28px;
      }
      .title-3 {
        font-size: 32px;
      }
      .title-4 {
        font-size: 40px;
      }
      .title-5 {
        font-size: 52px;
      }
      .title-6 {
        font-size: 62px;
      }
      .paragraph {
        font-size: 16px;
      }
      .text-bold {
        font-weight: 600;
      }
      /* spacing */
      /* padding */
      .p-1 {
        padding: calc(var(--spacing-unit) * 1);
      }
      .p-2 {
        padding: calc(var(--spacing-unit) * 2);
      }
      .p-3 {
        padding: calc(var(--spacing-unit) * 3);
      }
      .p-4 {
        padding: calc(var(--spacing-unit) * 4);
      }
      .p-5 {
        padding: calc(var(--spacing-unit) * 5);
      }
      .p-6 {
        padding: calc(var(--spacing-unit) * 6);
      }
      .p-7 {
        padding: calc(var(--spacing-unit) * 7);
      }
      .p-8 {
        padding: calc(var(--spacing-unit) * 8);
      }
      .p-9 {
        padding: calc(var(--spacing-unit) * 9);
      }
      .p-10 {
        padding: calc(var(--spacing-unit) * 10);
      }
      .pt-1 {
        padding-top: calc(var(--spacing-unit) * 1);
      }
      .pt-2 {
        padding-top: calc(var(--spacing-unit) * 2);
      }
      .pt-3 {
        padding-top: calc(var(--spacing-unit) * 3);
      }
      .pt-4 {
        padding-top: calc(var(--spacing-unit) * 4);
      }
      .pt-5 {
        padding-top: calc(var(--spacing-unit) * 5);
      }
      .pt-6 {
        padding-top: calc(var(--spacing-unit) * 6);
      }
      .pt-7 {
        padding-top: calc(var(--spacing-unit) * 7);
      }
      .pt-8 {
        padding-top: calc(var(--spacing-unit) * 8);
      }
      .pt-9 {
        padding-top: calc(var(--spacing-unit) * 9);
      }
      .pt-10 {
        padding-top: calc(var(--spacing-unit) * 10);
      }
      .pr-1 {
        padding-right: calc(var(--spacing-unit) * 1);
      }
      .pr-2 {
        padding-right: calc(var(--spacing-unit) * 2);
      }
      .pr-3 {
        padding-right: calc(var(--spacing-unit) * 3);
      }
      .pr-4 {
        padding-right: calc(var(--spacing-unit) * 4);
      }
      .pr-5 {
        padding-right: calc(var(--spacing-unit) * 5);
      }
      .pr-6 {
        padding-right: calc(var(--spacing-unit) * 6);
      }
      .pr-7 {
        padding-right: calc(var(--spacing-unit) * 7);
      }
      .pr-8 {
        padding-right: calc(var(--spacing-unit) * 8);
      }
      .pr-9 {
        padding-right: calc(var(--spacing-unit) * 9);
      }
      .pr-10 {
        padding-right: calc(var(--spacing-unit) * 10);
      }
      .pb-1 {
        padding-bottom: calc(var(--spacing-unit) * 1);
      }
      .pb-2 {
        padding-bottom: calc(var(--spacing-unit) * 2);
      }
      .pb-3 {
        padding-bottom: calc(var(--spacing-unit) * 3);
      }
      .pb-4 {
        padding-bottom: calc(var(--spacing-unit) * 4);
      }
      .pb-5 {
        padding-bottom: calc(var(--spacing-unit) * 5);
      }
      .pb-6 {
        padding-bottom: calc(var(--spacing-unit) * 6);
      }
      .pb-7 {
        padding-bottom: calc(var(--spacing-unit) * 7);
      }
      .pb-8 {
        padding-bottom: calc(var(--spacing-unit) * 8);
      }
      .pb-9 {
        padding-bottom: calc(var(--spacing-unit) * 9);
      }
      .pb-10 {
        padding-bottom: calc(var(--spacing-unit) * 10);
      }
      .pl-1 {
        padding-left: calc(var(--spacing-unit) * 1);
      }
      .pl-2 {
        padding-left: calc(var(--spacing-unit) * 2);
      }
      .pl-3 {
        padding-left: calc(var(--spacing-unit) * 3);
      }
      .pl-4 {
        padding-left: calc(var(--spacing-unit) * 4);
      }
      .pl-5 {
        padding-left: calc(var(--spacing-unit) * 5);
      }
      .pl-6 {
        padding-left: calc(var(--spacing-unit) * 6);
      }
      .pl-7 {
        padding-left: calc(var(--spacing-unit) * 7);
      }
      .pl-8 {
        padding-left: calc(var(--spacing-unit) * 8);
      }
      .pl-9 {
        padding-left: calc(var(--spacing-unit) * 9);
      }
      .pl-10 {
        padding-left: calc(var(--spacing-unit) * 10);
      }
      .px-1 {
        padding-left: calc(var(--spacing-unit) * 1);
        padding-right: calc(var(--spacing-unit) * 1);
      }
      .px-2 {
        padding-left: calc(var(--spacing-unit) * 2);
        padding-right: calc(var(--spacing-unit) * 2);
      }
      .px-3 {
        padding-left: calc(var(--spacing-unit) * 3);
        padding-right: calc(var(--spacing-unit) * 3);
      }
      .px-4 {
        padding-left: calc(var(--spacing-unit) * 4);
        padding-right: calc(var(--spacing-unit) * 4);
      }
      .px-5 {
        padding-left: calc(var(--spacing-unit) * 5);
        padding-right: calc(var(--spacing-unit) * 5);
      }
      .px-6 {
        padding-left: calc(var(--spacing-unit) * 6);
        padding-right: calc(var(--spacing-unit) * 6);
      }
      .px-7 {
        padding-left: calc(var(--spacing-unit) * 7);
        padding-right: calc(var(--spacing-unit) * 7);
      }
      .px-8 {
        padding-left: calc(var(--spacing-unit) * 8);
        padding-right: calc(var(--spacing-unit) * 8);
      }
      .px-9 {
        padding-left: calc(var(--spacing-unit) * 9);
        padding-right: calc(var(--spacing-unit) * 9);
      }
      .px-10 {
        padding-left: calc(var(--spacing-unit) * 10);
        padding-right: calc(var(--spacing-unit) * 10);
      }
      .py-1 {
        padding-top: calc(var(--spacing-unit) * 1);
        padding-bottom: calc(var(--spacing-unit) * 1);
      }
      .py-2 {
        padding-top: calc(var(--spacing-unit) * 2);
        padding-bottom: calc(var(--spacing-unit) * 2);
      }
      .py-3 {
        padding-top: calc(var(--spacing-unit) * 3);
        padding-bottom: calc(var(--spacing-unit) * 3);
      }
      .py-4 {
        padding-top: calc(var(--spacing-unit) * 4);
        padding-bottom: calc(var(--spacing-unit) * 4);
      }
      .py-5 {
        padding-top: calc(var(--spacing-unit) * 5);
        padding-bottom: calc(var(--spacing-unit) * 5);
      }
      .py-6 {
        padding-top: calc(var(--spacing-unit) * 6);
        padding-bottom: calc(var(--spacing-unit) * 6);
      }
      .py-7 {
        padding-top: calc(var(--spacing-unit) * 7);
        padding-bottom: calc(var(--spacing-unit) * 7);
      }
      .py-8 {
        padding-top: calc(var(--spacing-unit) * 8);
        padding-bottom: calc(var(--spacing-unit) * 8);
      }
      .py-9 {
        padding-top: calc(var(--spacing-unit) * 9);
        padding-bottom: calc(var(--spacing-unit) * 9);
      }
      .py-10 {
        padding-top: calc(var(--spacing-unit) * 10);
        padding-bottom: calc(var(--spacing-unit) * 10);
      }
      /* margins */
      .m-1 {
        margin: calc(var(--spacing-unit) * 1);
      }
      .m-2 {
        margin: calc(var(--spacing-unit) * 2);
      }
      .m-3 {
        margin: calc(var(--spacing-unit) * 3);
      }
      .m-4 {
        margin: calc(var(--spacing-unit) * 4);
      }
      .m-5 {
        margin: calc(var(--spacing-unit) * 5);
      }
      .m-6 {
        margin: calc(var(--spacing-unit) * 6);
      }
      .m-7 {
        margin: calc(var(--spacing-unit) * 7);
      }
      .m-8 {
        margin: calc(var(--spacing-unit) * 8);
      }
      .m-9 {
        margin: calc(var(--spacing-unit) * 9);
      }
      .m-10 {
        margin: calc(var(--spacing-unit) * 10);
      }
      .mt-1 {
        margin-top: calc(var(--spacing-unit) * 1);
      }
      .mt-2 {
        margin-top: calc(var(--spacing-unit) * 2);
      }
      .mt-3 {
        margin-top: calc(var(--spacing-unit) * 3);
      }
      .mt-4 {
        margin-top: calc(var(--spacing-unit) * 4);
      }
      .mt-5 {
        margin-top: calc(var(--spacing-unit) * 5);
      }
      .mt-6 {
        margin-top: calc(var(--spacing-unit) * 6);
      }
      .mt-7 {
        margin-top: calc(var(--spacing-unit) * 7);
      }
      .mt-8 {
        margin-top: calc(var(--spacing-unit) * 8);
      }
      .mt-9 {
        margin-top: calc(var(--spacing-unit) * 9);
      }
      .mt-10 {
        margin-top: calc(var(--spacing-unit) * 10);
      }
      .mr-1 {
        margin-right: calc(var(--spacing-unit) * 1);
      }
      .mr-2 {
        margin-right: calc(var(--spacing-unit) * 2);
      }
      .mr-3 {
        margin-right: calc(var(--spacing-unit) * 3);
      }
      .mr-4 {
        margin-right: calc(var(--spacing-unit) * 4);
      }
      .mr-5 {
        margin-right: calc(var(--spacing-unit) * 5);
      }
      .mr-6 {
        margin-right: calc(var(--spacing-unit) * 6);
      }
      .mr-7 {
        margin-right: calc(var(--spacing-unit) * 7);
      }
      .mr-8 {
        margin-right: calc(var(--spacing-unit) * 8);
      }
      .mr-9 {
        margin-right: calc(var(--spacing-unit) * 9);
      }
      .mr-10 {
        margin-right: calc(var(--spacing-unit) * 10);
      }
      
      .mb-1 {
        margin-bottom: calc(var(--spacing-unit) * 1);
      }
      .mb-2 {
        margin-bottom: calc(var(--spacing-unit) * 2);
      }
      .mb-3 {
        margin-bottom: calc(var(--spacing-unit) * 3);
      }
      .mb-4 {
        margin-bottom: calc(var(--spacing-unit) * 4);
      }
      .mb-5 {
        margin-bottom: calc(var(--spacing-unit) * 5);
      }
      .mb-6 {
        margin-bottom: calc(var(--spacing-unit) * 6);
      }
      .mb-7 {
        margin-bottom: calc(var(--spacing-unit) * 7);
      }
      .mb-8 {
        margin-bottom: calc(var(--spacing-unit) * 8);
      }
      .mb-9 {
        margin-bottom: calc(var(--spacing-unit) * 9);
      }
      .mb-10 {
        margin-bottom: calc(var(--spacing-unit) * 10);
      }
      .ml-1 {
        margin-left: calc(var(--spacing-unit) * 1);
      }
      .ml-2 {
        margin-left: calc(var(--spacing-unit) * 2);
      }
      .ml-3 {
        margin-left: calc(var(--spacing-unit) * 3);
      }
      .ml-4 {
        margin-left: calc(var(--spacing-unit) * 4);
      }
      .ml-5 {
        margin-left: calc(var(--spacing-unit) * 5);
      }
      .ml-6 {
        margin-left: calc(var(--spacing-unit) * 6);
      }
      .ml-7 {
        margin-left: calc(var(--spacing-unit) * 7);
      }
      .ml-8 {
        margin-left: calc(var(--spacing-unit) * 8);
      }
      .ml-9 {
        margin-left: calc(var(--spacing-unit) * 9);
      }
      .ml-10 {
        margin-left: calc(var(--spacing-unit) * 10);
      }
      .mx-1 {
        margin-left: calc(var(--spacing-unit) * 1);
        margin-right: calc(var(--spacing-unit) * 1);
      }
      .mx-2 {
        margin-left: calc(var(--spacing-unit) * 2);
        margin-right: calc(var(--spacing-unit) * 2);
      }
      .mx-3 {
        margin-left: calc(var(--spacing-unit) * 3);
        margin-right: calc(var(--spacing-unit) * 3);
      }
      .mx-4 {
        margin-left: calc(var(--spacing-unit) * 4);
        margin-right: calc(var(--spacing-unit) * 4);
      }
      .mx-5 {
        margin-left: calc(var(--spacing-unit) * 5);
        margin-right: calc(var(--spacing-unit) * 5);
      }
      .mx-6 {
        margin-left: calc(var(--spacing-unit) * 6);
        margin-right: calc(var(--spacing-unit) * 6);
      }
      .mx-7 {
        margin-left: calc(var(--spacing-unit) * 7);
        margin-right: calc(var(--spacing-unit) * 7);
      }
      .mx-8 {
        margin-left: calc(var(--spacing-unit) * 8);
        margin-right: calc(var(--spacing-unit) * 8);
      }
      .mx-9 {
        margin-left: calc(var(--spacing-unit) * 9);
        margin-right: calc(var(--spacing-unit) * 9);
      }
      .mx-10 {
        margin-left: calc(var(--spacing-unit) * 10);
        margin-right: calc(var(--spacing-unit) * 10);
      }
      .my-1 {
        margin-top: calc(var(--spacing-unit) * 1);
        margin-bottom: calc(var(--spacing-unit) * 1);
      }
      .my-2 {
        margin-top: calc(var(--spacing-unit) * 2);
        margin-bottom: calc(var(--spacing-unit) * 2);
      }
      .my-3 {
        margin-top: calc(var(--spacing-unit) * 3);
        margin-bottom: calc(var(--spacing-unit) * 3);
      }
      .my-4 {
        margin-top: calc(var(--spacing-unit) * 4);
        margin-bottom: calc(var(--spacing-unit) * 4);
      }
      .my-5 {
        margin-top: calc(var(--spacing-unit) * 5);
        margin-bottom: calc(var(--spacing-unit) * 5);
      }
      .my-6 {
        margin-top: calc(var(--spacing-unit) * 6);
        margin-bottom: calc(var(--spacing-unit) * 6);
      }
      .my-7 {
        margin-top: calc(var(--spacing-unit) * 7);
        margin-bottom: calc(var(--spacing-unit) * 7);
      }
      .my-8 {
        margin-top: calc(var(--spacing-unit) * 8);
        margin-bottom: calc(var(--spacing-unit) * 8);
      }
      .my-9 {
        margin-top: calc(var(--spacing-unit) * 9);
        margin-bottom: calc(var(--spacing-unit) * 9);
      }
      .my-10 {
        margin-top: calc(var(--spacing-unit) * 10);
        margin-bottom: calc(var(--spacing-unit) * 10);
      }
      /* buttons */
      .btn {
        margin-top: 4px;
        margin-bottom: 4px;
        cursor: pointer;
        font-size: 1rem;
        background-color: #fff;
        color: #000;
        padding: 8px 16px;
        border: #ccc 1px solid;
        border-radius: 4px;
        box-shadow: 0 4px 2px rgba(0, 0, 0, 0.1);
      }
      .btn-info {
        background-color: #1d5d9b;
        border: #1d5d9b 1px solid;
        color: #fff;
      }
      
      .btn-info:hover {
        background-color: #2a527a;
      }
      .btn-danger {
        background-color: #ff6666;
        border: #ff6666 1px solid;
        color: #fff;
      }
      .btn-danger:hover {
        background-color: #e94e4e;
      }
      .btn-primary {
        background-color: #03c988;
        border: #03c988 1px solid;
        color: #fff;
      }
      .btn-primary:hover {
        background-color: #05aa73;
      }
      
      .section-title {
        position: relative;
        width: 100%;
        max-width: 1280px;
        margin: 40px auto;
        font-size: 32px;
        font-weight: 600;
      }
      .card {
        background-color: #fff;
        border-radius: 4px;
        border: #ccc 1px solid;
        box-shadow: 0 4px 2px rgba(0, 0, 0, 0.1);
        margin-bottom: 40px;
      }
      .card-header {
        background-color: #ece5c7;
        padding: 12px 32px;
        border-bottom: 1px #ccc solid;
      }
      .card-header-danger {
        color: #fff;
        background-color: #ff6666;
        padding: 12px 32px;
        border-bottom: 1px #ccc solid;
      }
      .card-content {
        padding: 12px 32px;
        border-bottom: 1px #ccc solid;
      }
      .card-footer {
        padding: 12px 32px;
      }
      /* forms */
      .form {
        display: flex;
        flex-direction: column;
      }
      .form-control {
        display: flex;
        justify-content: flex-start;
        align-items: center;
        margin-bottom: 25px;
      }
      .form-label {
      }
      .form-input,
      .form-select {
        /* width: 65%; */
        padding: 6px 4px;
        border-radius: 4px;
        border: 1px solid #1d5d9b;
        font-size: 16px;
      }
      .form-buttons {
        margin-top: 40px;
        display: flex;
        justify-content: flex-end;
      }
      .form-group__title span {
        font-weight: 600;
        font-size: 18px;
      }
      .form-group__title {
        margin-bottom: 30px;
      }
      .required-stamp {
        color: #ff6666;
      }
      /* modal */
      dialog::backdrop {
        background-color: rgba(0, 0, 0, 0.40);
      }
      .modal {
        top: -40%;
        padding: 0;
        border-radius: 4px;
        border: none;
        box-shadow: 0 4px 2px rgba(0, 0, 0, 0.1);
      }
      .modal-header {
        padding: 16px;
        background-color: #ece5c7;
        border-bottom: 1px solid #ccc;
      }
      .modal-content {
        padding: 16px;
        border-bottom: 1px solid #ccc;
      }
      /* .modal {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.6);
      }
      .modal-content {
        border-radius: 4px;
        box-shadow: 0 4px 2px rgba(0, 0, 0, 0.1);
        background-color: #fefefe;
        margin: 15% auto;
        width: 512px;
        display: flex;
        flex-direction: column;
      }
      .modal-header {
        border-bottom: 1px solid #333;
        padding: 12px;
        display: flex;
        justify-content: space-between;
        align-items: center;
      }
      .modal-title {
        font-size: 23px;
        font-weight: 600;
      }
      .close {
        float: right;
        font-size: 28px;
        font-weight: bold;
        cursor: pointer;
      }
      .close:hover {
        color: red;
      } */
      /* table */
      .table {
        table-layout: auto;
        width: 100%;
        border-collapse: collapse;
        background-color: #fff;
      }
      .table th {
        padding: 8px;
        border: #ccc solid 1px;
      }
      table td {
        text-align: center;
        padding: 8px;
        border: #ccc solid 1px;
      }
      .alert {
        border-radius: 4px;
        display: flex;
        padding: 8px;
        align-items: center;
        min-width: 300px;
        box-shadow: 0 4px 2px rgba(0, 0, 0, 0.1);
      }
      .alert-primary {
        color: #fff;
        background-color: #03c988;
      }
      .alert-danger {
        color: #fff;
        background-color: #ff6666;
      }
      requirements-modal.css
      .rqmts-modal {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
      }
      .rqmts-modal-overlay {
        background-color: rgba(0, 0, 0, 0.6);
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
      }
      .rqmts-modal-content {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
      }
      .rqmts-modal-content,
      .rqmts-modal-overlay {
        transition: opacity 0.3s ease;
      }
      user_profile.css
      .table th {
          text-align: left !important;
          width: 120px;
      }
      
      td.col-colon {
          font-weight: 600;
          width: 10px !important;
      }
      .table td {
          text-align: left;
      }
      
      user_requirments.css
      td {
          height: 64px;
      }
      global.css
      body {
        margin: 0;
        line-height: normal;
      }
      :root {
        /* fonts */
        --font-inter: Inter;
        --font-inherit: inherit;
        /* font sizes */
        --font-size-29xl: 48px;
        --font-size-lg: 18px;
        --font-size-sm: 14px;
        --font-size-13xl: 32px;
        --font-size-xs: 12px;
        --font-size-xl: 20px;
        /* Colors */
        --color-whitesmoke-100: #f5f7fa;
        --color-white: #fff;
        --color-gray-100: #212121;
        --color-gray-200: rgba(0, 0, 0, 0.71);
        --color-gray-300: rgba(0, 0, 0, 0.3);
        --color-black: #000;
        --color-darkblue: #000088;
      
        /* Gaps */
        --gap-5xl: 24px;
        --gap-21xl: 40px;
        --gap-5xs: 8px;
        /* Paddings */
        --padding-45xl: 64px;
        --padding-5xl: 24px;
        --padding-13xl: 32px;
        --padding-24xl: 43px;
        --padding-xs: 12px;
        /* border radiuses */
        --br-base: 16px;
        --br-31xl: 50px;
        --br-88xl: 107px;
      }
      
      JS
      dropdown.js
      const dropdownBtn = document.querySelector(".dropbtn-document");
      const dropdownContent = document.querySelector(".dropdown-content-document");
      dropdownBtn.addEventListener("click", function () {
        dropdownContent.classList.toggle("show");
      });
     hamburger.js
      const hamburgerIcon = document.getElementById("hamburger-icon");
      const closeIcon = document.getElementById("close-icon");
      const sidebar = document.getElementById("sidebar");
      const main = document.querySelector(".main");
      hamburgerIcon.addEventListener("click", () => {
        sidebar.classList.toggle("none");
        hamburgerIcon.classList.toggle("active");
        closeIcon.classList.toggle("active");
        main.style.marginLeft = 0;
      });
      closeIcon.addEventListener("click", () => {
        sidebar.classList.toggle("none");
        hamburgerIcon.classList.toggle("active");
        closeIcon.classList.toggle("active");
        main.style.marginLeft = '260px';
      });
      page_links.js
      const fullURL = window.location.href;
      console.log("went here");
      document.addEventListener("DOMContentLoaded", function () {
        if (fullURL.includes("requirements")) {
          const page = document.getElementById("requirements_link");
          page.classList.add("active");
        }
      
        if (fullURL.includes("clearances")) {
          const page = document.getElementById("clearances_link");
          const dropdownDocumentContent = document.querySelector(
            ".dropdown-content-document"
          );
          dropdownDocumentContent.classList.toggle("show");
          page.classList.add("active");
        }
        if (fullURL.includes("indigencies")) {
          const page = document.getElementById("indigency_link");
          const dropdownDocumentContent = document.querySelector(
            ".dropdown-content-document"
          );
          dropdownDocumentContent.classList.toggle("show");
          page.classList.add("active");
        }
        if (fullURL.includes("permits")) {
          const page = document.getElementById("permits_link");
          const dropdownDocumentContent = document.querySelector(
            ".dropdown-content-document"
          );
          dropdownDocumentContent.classList.toggle("show");
          page.classList.add("active");
        }
      });
      requirements-modal.js
      document.addEventListener("DOMContentLoaded", () => {
        function openModal(modal, open, remove) {
          remove.href = remove.href + open.dataset.srcId;
          modal.style.display = "block";
        }
        function cancelModal(modal) {
          modal.style.display = "none";
        }
        const modal = document.querySelector(".rqmts-modal");
        const cancel = document.querySelector(".rqmts-modal-cancel");
        const remove = document.querySelector(".rqmts-modal-remove");
        const opens = document.querySelectorAll(".rqmts-modal-open");
        opens.forEach((open) => {
          open.addEventListener("click", () => {
            openModal(modal, open, remove);
          });
        });
        cancel.addEventListener("click", () => {
          cancelModal(modal);
        });
      });
      PHP(includes)
      admin_scripts.php
      <script src="<?php echo App::$BASE_URL . '/js/hamburger.js'; ?>"></script>
      authorization.php
      <?php
      require_once $_SERVER['DOCUMENT_ROOT'] . '/includes/functions.php';
      require_once $_SERVER['DOCUMENT_ROOT'] . '/classes/App.php';
      function guard_page()
      {
          if (has_session('user_id') && $_SESSION['role_id'] === 1) {
              header('Location: ' . App::$BASE_URL . '/pages/admin/dashboard/index.php');
              exit;
          }
          if (has_session('user_id') && $_SESSION['role_id'] === 2) {
              header('Location: ' . App::$BASE_URL . '/pages/user/dashboard/index.php');
              exit;
          }
      }
      function authorize_user()
      {
          if (!has_session('user_id')) {
              header('Location:  ' . App::$BASE_URL . '/pages/login.php');
          }
      }
     functions.php
      <?php
      function compute_age($birthDate)
      {
      	$birthDateObj = DateTime::createFromFormat('Y-d-m', $birthDate);
      	$currentDateObj = new DateTime();
      	$ageInterval = $currentDateObj->diff($birthDateObj);
      	$age = $ageInterval->y;
      	if ($currentDateObj < $birthDateObj->add(new DateInterval('P' . $age . 'Y'))) {
      		$age--;
      	}
      	return $age;
      }
      function generate_unique_track_no()
      {
      	$characters = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';
      	$timestamp = time();
      	$randomString = '';
      	for ($i = 0; $i < 12; $i++) {
      		$randomString .= $characters[rand(0, strlen($characters) - 1)];
      	}
      	$combinedString = $timestamp . $randomString;
      	$uniqueTrackNumber = sha1($combinedString);
      	$formattedTrackNumber = strtoupper(sprintf(
      		'%s-%s-%s-%s',
      		substr($uniqueTrackNumber, 0, 4),
      		substr($uniqueTrackNumber, 4, 4),
      		substr($uniqueTrackNumber, 8, 4),
      		substr($uniqueTrackNumber, 12, 4)
      	));
      	return $formattedTrackNumber;
      }
      function parseTimestamp($timestamp)
      {
      	$date = strtotime($timestamp);
      	$parsedDate = date('m-d-Y', $date);
      	return $parsedDate;
      }
      function parseArrayText($arrayText)
      {
      	$arrayText = str_replace(['[', ']'], '', $arrayText);
      	$arrayValues = explode(',', $arrayText);
      	$arrayValues = array_map('trim', $arrayValues);
      	$arrayValues = array_map(function ($item) {
      		return trim($item, '"');
      	}, $arrayValues);
      	return $arrayValues;
      }
      function parseArrayToText($array)
      {
      	$arrayText = json_encode($array);
      	return $arrayText;
      }
      function parseToFullName($first_name, $middle_name, $last_name)
      {
      	$first_name = ucfirst($first_name);
      	$middle_name = !empty($middle_name) ? strtoupper($middle_name[0]) . '.' : '';
      	$last_name = ucfirst($last_name);
      	$full_name = $first_name . ' ' . $middle_name . ' ' . $last_name;
      	return $full_name;
      }
      function capitalize($string)
      {
      	return ucfirst($string);
      }
      function has_session($key)
      {
      	return !empty($_SESSION[$key]);
      }
     js_scripts.php
      <script src="<?php echo App::$BASE_URL . '/js/hamburger.js'; ?>"></script>
      <script src="<?php echo App::$BASE_URL . '/js/dropdown.js'; ?>"></script>
      <script src="<?php echo App::$BASE_URL . '/js/page_links.js'; ?>"></script>
      user_scripts.php
      <script src="<?php echo App::$BASE_URL . '/js/hamburger.js'; ?>"></script>
      <script src="<?php echo App::$BASE_URL . '/js/dropdown.js'; ?>"></script>
      <script src="<?php echo App::$BASE_URL . '/js/page_links.js'; ?>"></script>
      
      







APPENDICES B
Evaluation Tool
Questionnaire A. Preliminary 
      SURVEY FORM
To our valued participants,
      We are on the stage of testing the technology developed to our study entitled "Web-based Information and Health Management System for Brgy. Second District Pob. Gainza, Camarines Sur", your genuine assistance to evaluate the system is highly appreciated. These gestures will help the researchers to improve the system and deliver a more satisfactory service to all of you especially on the instructions.
      Thank you and God Bless to all of us!
The Researchers


Instructions:
      Put Check(/) on the corresponding box that corresponds to how best you agree to the statement provided.
      5 - Strongly Agree		4 - Agree			3 - Neutral
      2 - Disagree			1 - Strongly Disagree
Items to be EvaluatedYES NO        1. Do you think that the method of paper and pen is efficient when processing information?       2. Does the barangay hall still heavily rely on paper pen?       3. Do you manually file the folders of information in the barangay hall?       4. Do you have space that is specifically for storing your barangay halls papers and other files?       5. Do you have difficulties in identifying and locating the stored files?       6. Do you experience delays when making reports?       7. Are the staff in the barangay hall and health center effective in their job?       8.  Is the number of individuals requesting medical attention being properly monitored?       9.  Do you have an accurate list when it comes to medicine and ailments?       10.  Is there an information management system in the barangay?       








Questionnaire B. Technical
SURVEY FORM
To our valued participants,
       We are on the stage of testing the technology developed to our study entitled "Web-based Information   and Health Management System for Brgy. Second District Pob. Gainza, Camarines Sur", your genuine assistance to evaluate the system is highly appreciated. These gestures will help the researchers to improve the system and deliver a more satisfactory service to all of you especially on the instructions.
      Thank you and God Bless to all of us!
The Researchers

      

Instructions:
      Put Check (?) on the corresponding box that corresponds to how best you agree to the   statement provided:
      5 - Strongly Agree		4 - Agree			3 - Neutral
      2 - Disagree			1 - Strongly Disagree
Items to be Evaluated54321       11. Reliability: The system can perform its intended purpose.       12. Portability: The system can be operated under any web browsers.       13. Security: The system provides protection against unauthorized access.       14. Efficiency: The system can perform its functions without much delay.       15. Convenience: The system is useful in helping both the barangay hall and health center in doing their day-to-day operations.       16. User Friendliness: The system is easy to use and can be understood quickly.       17. Functionality: The system contains functions that are relevant to the user's requirements.       18. Accuracy: The system provides results without any problems.       19. Usability: The system is easy to use and provides quality service.       20. Availability: The system is available anywhere and anytime.       







APPENDICES C
Summary of Results
Preliminary
Tabulated Result of the Preliminary Survey
No.QuestionsYesNo       1Do you think that the method of paper and pen is efficient when processing information?982       2Does the barangay hall still heavily rely on paper and pen?955       3Do you manually file the folders of information in the barangay hall?973       4Do you have space that is specifically for storing your barangay hall papers and other files?973       5Do you have difficulties identifying and locating the stored files?6238       6Do you experience delays when making reports?6238       7Are the staff in the barangay hall and health center effective in their job?973       8Are the number of individuals requesting medical attention being properly monitored?964       9Does the health center have an accurate list when it comes to medicines and ailments?928       10Is there an information management system in the barangay?3763       Total883167       Table: Tabulated Result of the Preliminary Survey
      	As shown in the table above, the respondents are mostly positive with their responses with some exceptions. Although most of these responses were positive, there is still room for improvement in the barangay hall’s and health center’s services with the aid of the web-based information and health management system.
      In Preliminary reports the total number of YES is 883 and the total number of NO is 167
Technical
Result of the Final Survey
No.Items to be Evaluated54321       1.Reliability: The system can perform its intended purpose.937       2.Portability: The system can be operated under any web browser.928       3.Security: The system provides protection against unauthorized access.8614       4.Efficiency: The system can perform its functions without much delay.8614       5.Convenience: The system is useful in helping both the barangay hall and health center in doing their day-to-day operations.8119       6.User-Friendliness: The system is easy to use and can be understood quickly.8911       7.Functionality: The system contains functions that are relevant to the user’s requirements.8218       8.Accuracy: The system provides results without any problems.7921       9.Usability: The system is easy to use and provides quality service.9010       10.Availability: The system is available anytime and anywhere.9010       Total778132       Table: Tabulated Result of the Technical Survey
      The table above shows that the respondent’s evaluation of the system was Strongly Agree.
      In the technical tabulation the total number of (5)Strongly Agree is 778, the total number of (4)Agree is 132. 
APPENDICES D
Survey Data Summary 
      Data Gathering Procedure
      The Data Gathering Procedure report presents a detailed overview of the methods and processes used to collect information for the survey on the benefits of transitioning from the traditional paper and pen method to an online system in the barangay. The survey aimed to understand the community's perspective on the advantages of an online system and its impact on the barangay hall and health center's day-to-day operations.
      The main objective of the survey was to gather insights into how having an online system could be better than the traditional paper and pen method in terms of efficiency, reliability, functionality, and user-friendliness. The survey was divided into two questionnaires, namely the Preliminary Survey and the Final Survey.
      The sampling method used for this survey is not explicitly stated in the information provided. However, it seems that the survey was conducted with a convenience sampling approach. Convenience sampling is a non-probability sampling method where the researcher selects the most readily available individuals to participate in the survey. In this case, the respondents were selected from residents of the barangay who were accessible and willing to participate.
      
      Formula:
      Rating for "Reliability" = [(93 * 5) + (7 * 4)] / 100
                              = (465 + 28) / 100
                              = 493 / 100
                              ? 4.93
      Weighted Mean:
      A weighted mean is a kind of average. Instead of each data point contributing equally to the final mean, some data points contribute more weight than others if all the weights are equal, and the weighted mean equals the arithmetic mean.
      Discrete Data Frequency Table:
      Weighted Mean for Question 1 = [(98 * 1) + (2 * 1)] / (98 + 2)
                                  = (98 + 2) / 100
                                  = 100 / 100
                                  = 1
      Weighted Mean for Reliability = [(93 * 5) + (7 * 4)] / (93 + 7)
                                   = (465 + 28) / 100
                                   = 493 / 100
                                   ? 4.93
Survey Results:
Breakdown of the Respondents:
      As shown in the figure above, of the respondents who were part of the preliminary survey, 53% were male and the remaining 47% were female.
      
      
      
      
      
      Figure 1.1 Pie Representation
Result of the Final Survey:
      The purpose of the final survey was to determine whether the system was functioning properly. The researchers presented the system to a group of respondents and demonstrated how to operate the system’s features. It was then that they distributed the questionnaires that were prepared in advance to collect the respondent’s feedback.
      	Based on the survey’s results, when it comes to the system’s reliability, it was evaluated as Outstanding with a rating of 4.93, which indicated that the system can be reliable. The system’s portability was also evaluated as Outstanding, with a rating of 4.92, which indicated that the system is portable enough for any web browser.
      	The security of the system was evaluated as Outstanding with a rating of 4.86, meaning it does its job well when it comes to security. The Efficiency of the system had a rating of 4.86, giving it an evaluation of Outstanding, which indicates its good performance and lack of delays.
      	On the system’s evaluation, it was Outstanding, and its convenience was rated with a value of 4.81, meaning that the system’s features were great and that it was convenient for the respondents of the barangay. The system’s user-friendliness had an evaluation rating of 4.89 and Outstanding, which meant that the respondents had an easy time understanding and operating the system.
      	The functionality of the system was evaluated with an Outstanding rating and a value of 4.82, indicating that the features of the system are relevant to the user’s requirements. The system’s accuracy was also Outstanding on its evaluation and had a value of 4.79, which meant that it managed to provide results without many problems. Also, the system’s usability was evaluated as being Outstanding, with it having a rating of 4.90, which shows its quality of service.
      	And finally, the availability of the system also had a rating of 4.90, giving it an evaluation of Outstanding, indicating that the users can access it anywhere and anytime with a web browser.
      
      Tabulated Result of Evaluation:
NO.QUESTIONSYESNO       1Do you think that the method of paper and pen is efficient when processing information?982       2Does the barangay hall still heavily rely on paper pen?955       3Do you manually file the folders of information in the barangay hall?973       4Do you have space that is specifically for storing your barangay halls papers and other files?973       5Do you have difficulties in identifying and locating the stored files?6238       6Do you experience delays when making reports?6238       7Are the staff in the barangay hall and health center effective in their job?973       8 Is the number of individuals requesting medical attention being properly monitored?964       9Do you have an accurate list when it comes to medicine and ailments?928       10Is there an information management system in the barangay?3763       TOTAL883167             Shows the collected data from the sampling population of the study and serves as the baseline data for the purpose of the research investigating the approval and convenience of the proposed web-based information and health management system for Brgy. Second District Pob. Gainza, Camarines Sur .
No. Items to be Evaluated54321       1. Reliability: The system can perform its intended purpose.937       2. Portability: The system can be operated under any web browsers.928       3. Security: The system provides protection against unauthorized access.8614       4. Efficiency: The system can perform its functions without much delay.8614       5. Convenience: The system is useful in helping both the barangay hall and health center in doing their day-to-day operations.8119       6. User Friendliness: The system is easy to use and can be understood quickly.8911       7. Functionality: The system contains functions that are relevant to the user's requirements.8218       8. Accuracy: The system provides results without any problems.7921       9. Usability: The system is easy to use and provides quality service.9010       10. Availability: The system is available anywhere and anytime.9010       Total778132             The table shows the evaluation of the respondents based on their experiences testing the proposed system. The results of the survey show that respondents agree with using the proposed system to manage their tasks. To improve the work environment with modern technology.
      
      
      The Survey Results:
1. Reliability:
- The system can perform its intended purpose.
      Rating = ((93*5) + (7*4) + (0*3) + (0*2) + (0*1)) = 4.93
2. Portability:
- The system can be operated under any web browser.
      Rating = ((92*5) + (8*4) + (0*3) + (0*2) + (0*1)) = 4.92
3. Security:
- The system provides protection against unauthorized access.
      Rating = ((86*5) + (14*4) + (0*3) + (0*2) + (0*1)) = 4.86
4. Efficiency:
- The system can perform its functions without much delay.
      Rating = ((86*5) + (14*4) + (0*3) + (0*2) + (0*1)) = 4.86
5. Convenience:
- The system is useful in helping both the barangay hall and health center in doing their day-to-day operations.
      Rating = ((81*5) + (19*4) + (0*3) + (0*2) + (0*1)) = 4.81
6. User-Friendliness:
- The system is easy to use and can be understood quickly.
      Rating = ((89*5) + (11*4) + (0*3) + (0*2) + (0*1)) = 4.89
7. Functionality:
- The system contains functions that are relevant to the user’s requirements.
      Rating = ((82*5) + (18*4) + (0*3) + (0*2) + (0*1)) = 4.82
8. Accuracy:
- The system provides results without any problems.
      Rating = ((79*5) + (21*4) + (0*3) + (0*2) + (0*1)) = 4.79
9. Usability:
- The system is easy to use and provides quality service.
      Rating = ((90*5) + (10*4) + (0*3) + (0*2) + (0*1)) = 4.90
10. Availability:
- The system is available anytime and anywhere.
      Rating = ((90*5) + (10*4) + (0*3) + (0*2) + (0*1)) = 4.90
      








APPENDICES E
System Manual
INTRODUCTION
      	Web-Based Information and Health Management System for Brgy. Second District Pob. Gainza, Camarines Sur is solely applicable and limited to the barangay's management and citizens. This manual will show you how to use the website correctly.
      If you have any complaints or questions about the system manual, please contact us at this email address: lenard07hernandez@gmail.com.
      CONTENT OF THE MANAGEMENT SYSTEM 
      The Web-Based Information and Health Management System For Brgy. Second District Pob. Gainza, Camarines Sur offers a variety of transactions that take place in the Brgy. The said management system includes homepage interface features a log in / sign up selection. It also provides the history, mandate, mission, and vision, as well as a travel guide and map. It contains various information on the Brgy.
      USE OF SYSTEM MANUAL
      The residents will benefit greatly from the system handbook, which will serve as a reference on how to correctly manage the website. 
      THE WEB-BASED INFORMATION AND HEALTH MANAGEMENT SYSTEM INTERFACE 
      Welcome to the Web-based Information and Health Management System Interface. You are about to  experience the excitement  of a live management system over the internet. The Web-based information and health  management system eliminates geographic constraints, bringing residents together from anywhere in the world to interact real-time. This user manual provides a detailed description of all the management system features. We are sure you will find the management system easy to use. Let’s get started!
      System Requirements
      Before you log in into the management system, make sure your computer meets the following requirements:
? Operating System: Windows 7, 8 , 10  or Windows 11
?  Processor: 
 Intel:Core i3 minimum, i7 preferred
 AMD: Ryzen  5 Quad Core Minimum, Ryzen 7 Preferred
? Memory: 4GB Minimum (8gb preferred) 
? Wireless card: 802.11n minimum (802.11ac preferred)
? Storage Capacity: 300 GB Minimum (500 GB preferred)
? Solid State Drivers are much faster, more reliable, and recommended over Hard Disk Drives.
? Internet Connection: at minimum a 1-5 mbps modem connection 
? One of the following internet browsers: Microsoft edge, firefox, brave 
      (google chrome recommended)
      Getting Started…………………………………………………………..
      	First-time Access to the Web-based Management system 
      	Login to the Web-based Management System 
      	ACCESS THE WEBPAGE
      	 The users can view the  Web-Based Information and Health Management System For Brgy. Second District Pob. Gainza, Camarines Sur by using the give link: https://seconddistrictgainza.com/
      
A. HOME PAGE 
      Once the user clicks the link, it will take the user of the website to its Homepage so that he/she can see the different navigation menu bar. The Interface shows the Homepage of the Web-based Management System it includes the following: 
? History
? Mandate. Mission & Vision 
? Travel Guide 
? Map 
      
      
      
      
      
      
      
      
Homepage
B. LOG IN
      Upon clicking the log in button, this is where you can see the resident log in  page.
      

       Log In (admin)
* Log In (admin)- upon typing this url in web-browser https://seconddistrictgainza.com/admin/secret its shows secret key which is only admin can have the access. 
* Upon clicking register Here button to add new resident to the system
      
      
      
      
      
      
      
      Register Here Page
* Once you done fill out the form you can now successfully added the new resident account 
      FOR ADMIN PAGE
      NAVIGATING THE WEB-BASED INFORMATION AND HEALTH MANAGEMENT SYSTEM FOR BRGY. SECOND DISTRICT POB. GAINZA CAMARINES SUR 
      The main areas of the Web-Based Information and Health Management System are labeled below and are described for function of purpose tool bar.
      
      Admin Dashboard
* Admin Dashboard- it is a dashboard that is specifically designed for administrators to monitor and manage the activities in the application.
      
      Profile Settings
* Profile Settings- it lets the user edit their account information.Once you click the update profile the information  on this would we updated.  

      Barangay Info
* Barangay Information- it serves as an overview of the barangay. To save changes, click the update button.

      
      Barangay Officials 
* Barangay Information- it serves as an overview of the barangay. To save changes, click the edit, delete button. To add new Barangay new official you can click the button upper left corner.

      
      
      Announcements 
      To add a new announcement, click the ‘create Announcement’ button. To see your created announcement you can go to the main dashboard or in the module itself. The Announcement section serves as a communication board between the officials and users for information and news.
      
      Messages
* Messages- the message section allows the user to send messages in the website. After creating your message in the ‘Send Message’ area, select your recipient in the send to’ part then click ‘Send’ to send the message. To view the replies, click the ‘Received Messages’. 
      
      Received Messages 
      Add Medical Appointments 
* Add Medical Appointments- it is where the users set an appointment.
      
      View Pending Requests 
* View Pending Requests- is it where the users can view updates about their sent requests.
      
      View Approved/Disapproved Requests 
* View Approved/Disapproved Request- the area where the users can see the result of their sent requests. You can dropdown the arrow to change the request 
      
      Health Monitoring 
* Health Monitoring- it keeps track of the users’ health record.After fill out the form you can add record for health monitoring. To see if its reflect, it can show to the main dashboard of the module.
      
      
      Health Monitoring Table 
* Health Monitoring Table- it is where the users where able to view their health record.In the upper left corner, you can click the button to add new health record. 
      
      Incident Reporting 
* Incident Reporting- it is a feature that lets the user report any unforeseen events, issues, or concerns that occur within the barangay.
      
      Feedback 
* Feedback- it is where the users share their comments and suggestions.
      
      Blood Donors 
* Donor Registration Form- it is where blood donors are able to fill in register for a blood donation.
      
      View Donors 
* View Donors- it is where we can view information about the donors.
      
      Blood Donations Event
* Blood Donations Event- it is where donors are able to view any incoming blood donation events in the barangay.
      
      Donations
* To register new donations, you can click the register donor button and fill out the form.
      
      
      Figure 15. Medicine Suppliers 
* To add new medicine, you can click the add medicine button and for the supplier you can click the add supplier button after fill out the form you can now successfully added.
      
      Suppliers 
      
      Suppliers  List
      
      Resident Requests 
      
      Pending  Requests
* Pending Requests- it is where the sent requests are viewed for admin approval.
      
      Approved Requests
* Approved Requests- it is where the approved requests are viewed and recorded.
      
      Disapproved Requests
* Disapproved Requests- it is where the disapproved requests are viewed and recorded.
      
      
      Done Requests
      
      Household 
* Household- it is where the household are viewed and recorded. You can add member and if you click the view button it shows the summary of household members. 
      FOR RESIDENT PAGE 
      
      Resident Dashboard
* Resident Dashboard- It provides information about a resident.
      
      Profile
* Profile- it is where general information about a resident is viewed. 
      Messages
* Messages- it is where messages are viewed. If you dropdown in the right corner it shows the received messages coming from the admin. 
      
      Received Messages 
* Received Messages- it is where received messages are viewed coming from admin.
      
      Announcements 
* Announcements- it is where news and events are viewed.
      
      Send Feedback 
* Feedback- it is where you can create feedback for your experience in the system.
      
      My Requirements 
* My Requirements- it is where important requirements are located.
      
      Request Document
* Request Document- it is where the user is able to request a document from the barangay such as barangay clearances.
      
      Barangay Clearance
* Barangay Clearance- it is where the user is able to request a document from the barangay such as barangay clearances. A drop down button in upper right corner shows the respond  coming from the barangay.
      
      Certificate of Indigency 
* Certificate of Indigency- a certificate used to avail various government programs, benefits, and social services to support an individual or family
      Business Permit
* Business Permit - a certificate used to establishing a business.
       Medical Appointments
* Medical Appointments- in the upper left corner its show the add appointment button to create a appointment in the barangay. In the upper right corner a status coming from the admin can viewd by dropping it down the button.

APPENDICES F
Turnitin Originality Report 







APPENDICES G
Certifications 






























APPENDICES H
Curriculum Vitae 

      
      
      
      

      EUATI NIKOLET ANDRADA  
      Euati Nikolet E.Andrada is 21 years old from Baguio City, Benguet. She was 
born February 10, 2002. She is the oldest of Maybelle Andrada. She is currently taking Bachelor of Science of Information Technology at AMA Computer College Baguio Campus. She graduated elementary at School of Thoughts Integrated Learning Experience and finished her high school at Easter College, Province of Benguet.
      

      
       
      
      
      
      
      
      
      
      
      
      
      
      
      

      
      
      
      
      
      
      













                                    2

       


       
       2
       
       
                                       2
	
       
